# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'JuliaBundle'

name = 'JupyterKernel-Julia'
version = '1.8.5'
local_jupyterver = '2023.3.6'
versionsuffix = '-' + local_jupyterver

homepage = 'https://github.com/JuliaLang/IJulia.jl'
description = """
Native Julia kernel for Jupyter.
Project Jupyter exists to develop open-source software, open-standards, and services
for interactive computing across dozens of programming languages.
"""

toolchain = {'name': 'GCCcore', 'version': '11.3.0'}
toolchainopts = {'pic': True}

builddependencies = [
    ('binutils', '2.38'),
    ('Julia', version, '', ('gcccoremkl', '11.3.0-2022.1.0')),
]

dependencies = [
    ('Python', '3.10.4'),
]

components = [
    ('julia', '0.6.1', {
        'easyblock': 'PythonPackage',
        'use_pip': True,
        'sources': ['v%(version)s.tar.gz'],
        'source_urls': ['https://github.com/JuliaPy/pyjulia/archive/'],
        'checksums': [('sha256', 'dffe739075d5a3ab68b8127df3481d5152e87698020966d45fa77efd8671b690')],
        'download_dep_fail': True,
        'start_dir': 'pyjulia-%(version)s',
    }),
]

local_jupyter_path = 'share/jupyter'

exts_defaultclass = 'JuliaPackage'
exts_list = [
    ('ZMQ', '1.2.1', {
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/JuliaInterop/ZMQ.jl/archive/'],
        'checksums': [('sha256', '8b42555340d0208e5a36cd5e8f29a3f0d44c13c064382d4b1e5d00c1c4a9dd96')],
    }),
    ('Interact', '0.10.5', {
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/JuliaGizmos/Interact.jl/archive/'],
        'checksums': ['68b347b97fce2f7aeb26e9c03466406f5183fe7d758066bf6111554ca73c3382'],
    }),
    ('LanguageServer', '4.4.0', {
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/julia-vscode/LanguageServer.jl/archive/'],
        'checksums': ['42fd14603c150311a5c46c27889b89f46663ffaee3e321eccdb6ea908c647a54'],
    }),
    ('SymbolServer', '7.2.1', {
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/julia-vscode/SymbolServer.jl/archive/'],
        'checksums': ['049a62a61a2a12e837bac208800e102bf36c78672081885e97134c482e645f65'],
    }),
    ('IJulia', '1.24.2', {
        # installs ijulia in JULIA_DEPOT_PATH and kernel in $JUPYTER_DATA_DIR/kernels
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/JuliaLang/IJulia.jl/archive/'],
        'checksums': ['de215348c7c41e1ca15c0d21f5f9a78bedce77b02ef89d67f38702c4d57ee80d'],
        'preinstallopts': 'export JUPYTER_DATA_DIR=%%(installdir)s/%s' % local_jupyter_path
    }),
]

local_kernel_dir = 'julia-%(version_major_minor)s'
local_kernel_name = 'Julia-%s' % version

modextrapaths = {
    'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages'],
    'JUPYTER_PATH': [local_jupyter_path],  # add search path for kernelspecs
}

# Ensure that the user-specific $HOME/.local/share/jupyter is always first entry in JUPYTHER_PATH
modluafooter = """
prepend_path("JUPYTER_PATH", pathJoin(os.getenv("HOME"), ".local/share/jupyter"))
"""

postinstallcmds = [
    # Create virtual environment to ensure we install in the correct directory !!!
    'python3 -m venv %(installdir)s --system-site-packages',
    'mkdir -p %%(installdir)s/%s' % local_jupyter_path,
    (
        '{ cat > %%(builddir)s/env.sh; } << \'EOF\'\n'
        '#!/bin/bash\n'
        'source %%(installdir)s/bin/activate\n'
        'export PYTHONPATH=%%(installdir)s/lib/python%%(pyshortver)s/site-packages:${PYTHONPATH}\n'
        ''
        'export JULIA_DEPOT_PATH=${EBJULIA_STD_DEPOT_PATH}:${EBJULIA_ADMIN_DEPOT_PATH}\n'
        'export JUPYTER_DATA_DIR=%%(installdir)s/%s\n'
        'EOF'
    ) % (local_jupyter_path),

    # write kernel.sh
    (
        '{ cat > %%(installdir)s/share/jupyter/kernels/%s/kernel.sh; } << EOF\n'
        '#!/bin/bash \n'
        '\n'
        '# Load required modules \n'
        'module purge \n'
        'module load Stages/${STAGE} \n'
        'module load GCC/11.3.0 \n'
        'module load ParaStationMPI \n'
        '\n'
        'module load Julia/%s \n'
        'module load %s/.%s%s \n'
        '\n'
        'exec julia \$@\n'
        '\n'
        'EOF'
    ) % (local_kernel_dir, version, name, version, versionsuffix),
    'chmod +x %%(installdir)s/share/jupyter/kernels/%s/kernel.sh' % local_kernel_dir,

    # configure Python<->Julia bridge (of python package julia)
    'source %(builddir)s/env.sh && python -c "import julia; julia.install()"',

    # replace `[..]/bin/julia` with `kernel.sh
    (
        'sed -i \'s#.*\/bin\/julia.*#    "%%(installdir)s/share/jupyter/kernels/%s/kernel.sh",#\' '
        '    %%(installdir)s/share/jupyter/kernels/%s/kernel.json'
    ) % (local_kernel_dir, local_kernel_dir),

    # Ensure we remove the virtual environment to avoid wrong search path for python packages
    'rm -f %(installdir)s/pyvenv.cfg',
    'rm -f %(installdir)s/Activate.ps1'
    'rm -f %(installdir)s/bin/python',
    'rm -f %(installdir)s/bin/python3*',
    'rm -f %(installdir)s/bin/activate',
    'rm -f %(installdir)s/bin/activate*',
    'rm -f %(installdir)s/bin/easy_install*',
    'rm -f %(installdir)s/bin/pip*',
    'rm -rf %(installdir)s/lib/python%(pyshortver)s/site-packages/_distutils_hack',
    'rm -f %(installdir)s/lib/python%(pyshortver)s/site-packages/distutils-precedence.pth',
    'rm -rf %(installdir)s/lib/python%(pyshortver)s/site-packages/pip',
    'rm -rf %(installdir)s/lib/python%(pyshortver)s/site-packages/pip-*',
    'rm -rf %(installdir)s/lib/python%(pyshortver)s/site-packages/pkg_resources',
    'rm -rf %(installdir)s/lib/python%(pyshortver)s/site-packages/setuptools',
    'rm -rf %(installdir)s/lib/python%(pyshortver)s/site-packages/setuptools-*',
]

# Julia is only a build-dependency and MUST NOT be a runtime dependency
# Hence, we need to disable the sanitycheck
skipsteps = ['sanitycheck']
sanity_check_paths = {
    'files': [
        'share/jupyter/kernels/julia-%(version_major_minor)s/kernel.json',
    ],
    'dirs': [
        'lib/python%(pyshortver)s/site-packages',
        'share/jupyter/kernels/julia-%(version_major_minor)s/',
    ],
}

moduleclass = 'tools'
