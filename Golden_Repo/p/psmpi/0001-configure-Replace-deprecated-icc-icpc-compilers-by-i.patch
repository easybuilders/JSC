From dc273df7d77902826eb9b56ed878a3f629c5b6cc Mon Sep 17 00:00:00 2001
From: Simon Pickartz <pickartz@par-tec.com>
Date: Mon, 23 Oct 2023 21:01:55 +0200
Subject: [PATCH] configure: Replace deprecated icc/icpc compilers by icx/icpx.

Since Intel deprecates the former icc/icpc compiler, we adapt the
confset accordingly to use their replacements from oneAPI.
---
 README.md    |  4 ++--
 configure.ac | 24 ++++++++++++------------
 2 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/README.md b/README.md
index 14d7a0c52..c1deb4147 100644
--- a/README.md
+++ b/README.md
@@ -58,8 +58,8 @@ default    : Like 'gcc'
 none       : Do not configure mpich. Prepare only for tar, rpm and srpm build
 
 gcc        : Use Gnu compiler (gcc)
-intel      : Use Intel compiler (icc)
-icc        : Like 'intel'
+intel      : Use Intel compiler (icx)
+icx        : Like 'intel'
 pgi        : Portland group compiler (pgcc)
 nvhpc      : Nvidia HPC compiler (nvc)
 llvm       : llvm-based toolchains (e.g., AOCC)
diff --git a/configure.ac b/configure.ac
index 21939db92..ac36de2b8 100644
--- a/configure.ac
+++ b/configure.ac
@@ -95,8 +95,8 @@ AC_ARG_WITH([confset], [
 			Prepare only for tar, rpm and srpm build
 
 	   gcc        : Use Gnu compiler (gcc)
-	   intel      : Use Intel compiler (icc)
-	   icc        : Like 'intel'
+	   intel      : Use Intel compiler (icx)
+	   icx        : Like 'intel'
 	   pgi	      : Portland Group compiler (pgcc)
 	   nvhpc      : Nvidia HPC compiler (nvc)
 	   llvm       : LLVM-based toolchains (e.g., AOCC)
@@ -225,16 +225,16 @@ case $CONFSET in
 		fi
 	fi
 	;;
-"icc"|\
+"icx"|\
 "intel")
 	CONF_OPS="--with-device=psp"
 	CONF_OPS="$CONF_OPS $CONF_OPS_DEPLOY"
 
-	CC=icc
-	CXX=icpc
+	CC=icx
+	CXX=icpx
 
-	# Check whether icc works as host compiler for nvcc
-	NVCC_FLAGS='-ccbin icc'
+	# Check whether icx works as host compiler for nvcc
+	NVCC_FLAGS='-ccbin icx'
 
 	# save language settings, customize ac_ext and ac_compile to support CUDA
 	AC_LANG_PUSH([C])
@@ -260,15 +260,15 @@ case $CONFSET in
 	# are not forwarded to the final linking with libtool which uses $(FC).
 	# "libtool -XCClinker" should be set somehow. Up to than we have
 	# '-reentrancy threaded' also inside mpif77, mpif90 and mpifort.
-	FC='ifort -reentrancy threaded'
+	FC='ifx -reentrancy threaded'
 
-	EXTRA_VERSION_INFO=" compiler: $(icc -V 2>&1 |head -n 1)"
+	EXTRA_VERSION_INFO=" compiler: $(icx -V 2>&1 |head -n 1)"
 
 	if test "$ENABLE_PROFILE" = "use" ; then
-		export MPICHLIB_CFLAGS="${MPICHLIB_CFLAGS} -prof-use -prof-dir=$PROFILE_DIR"
+		export MPICHLIB_CFLAGS="${MPICHLIB_CFLAGS} -fprofile-use=$PROFILE_DIR"
 	else
 		if test "$ENABLE_PROFILE" = "gen" ; then
-			export MPICHLIB_CFLAGS="${MPICHLIB_CFLAGS} -prof-gen -prof-dir=$PROFILE_DIR"
+			export MPICHLIB_CFLAGS="${MPICHLIB_CFLAGS} -fprofile-generate=$PROFILE_DIR"
 			# Fix me! Disable Fortran for avoiding issues when compiling with PGO enabled:
 			CONF_OPS=`echo "$CONF_OPS" | sed -e s/enable-fortran=all/enable-fortran=no/g`
 		fi
@@ -433,7 +433,7 @@ AS_IF([test "x$with_pscom_allin" != "xno"],[
 		fi
 	fi
 	case $CONFSET in
-		"default"|"gcc"|"intel"|"nvhpc"|"icc"|"llvm"|"devel"|"debug") ;;
+		"default"|"gcc"|"intel"|"nvhpc"|"icx"|"llvm"|"devel"|"debug") ;;
 		*) confset_and_allin_does_not_match="yes" ;;
 	esac
 	if test "$confset_and_allin_does_not_match" = "yes" ; then
-- 
2.39.3 (Apple Git-145)

