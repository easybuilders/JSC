# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Bundle'

name = 'Jupyter'
version = '2020.2.6'
versionsuffix = '-Python-%(pyver)s'

local_jlab_version = '2.2.9'

homepage = 'http://www.jupyter.org'
description = """
Project Jupyter exists to develop open-source software, open-standards, and services for interactive computing across
dozens of programming languages.
"""


toolchain = {'name': 'gcccoremkl', 'version': '9.3.0-2020.2.254'}
toolchainopts = {'pic': True}

builddependencies = [
    ('binutils', '2.34'),
    ('unzip', '6.0'),
    ('Autotools', '20200321'),
    ('pkg-config', '0.29.2'),
]

dependencies = [
    ('Python', '3.8.5'),
    ('libyaml', '0.2.5'),
    ('Pandoc', '2.11.0.4', '', SYSTEM),  # For doc-generation
    ('texlive', '20200406'),
    ('ITK', '5.1.2', '-nompi' + versionsuffix),
    ('HDF5', '1.10.6', '-serial'),
    ('h5py', '2.10.0', '-serial' + versionsuffix),
    ('netcdf4-python', '1.5.4', '-serial' + versionsuffix),
    ('FFmpeg', '4.3.1'),  # for pydub
    ('LLVM', '10.0.1'),  # llvmlite
    ('git', '2.28.0'),  # for jupyterlab-git (req. >=2.0)
    ('SciPy-Stack', '2020', versionsuffix),
    ('scikit', '2020', versionsuffix),
    ('numba', '0.51.1', versionsuffix),
    ('Shapely', '1.7.1', versionsuffix),
]

osdependencies = [('openssl'), ('git')]

local_common_opts = {
    'req_py_majver': '3',
    'req_py_minver': '0'
}

# this is a bundle of Python packages
exts_defaultclass = 'PythonPackage'
exts_default_options = {
    'filter': ('python -c "import %(ext_name)s"', ''),
    'download_dep_fail': True,  # True
    'source_urls': [PYPI_SOURCE],
    'use_pip': True,
    'sanity_pip_check':  True,
    'use_pip_for_deps': False,  # False
}

components = [
    ('nodejs', '14.15.3', {
        'easyblock': 'ConfigureMake',
        'source_urls': ['http://nodejs.org/dist/v%(version)s/'],
        'sources': ['node-v%(version)s.tar.gz'],
        'start_dir': 'node-v%(version)s',
    }),
]

exts_list = [
    ('ptvsd', '4.3.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'ptvsd-4.3.2.zip'),
        ('checksums', [('sha256', '3b05c06018fdbce5943c50fb0baac695b5c11326f9e21a5266c854306bda28ab')]),
    ])),
    ('pyOpenSSL', '19.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9a24494b2602aaf402be5c9e30a0b82d4a5c67528fe8fb475e3f3bc00dd69507')]),
        ('modulename', 'OpenSSL'),
    ])),
    ('entrypoints', '0.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c70dd71abe5a8c85e55e12c19bd91ccfeec11a6e99044204511f9ed547d48451')]),
        ('use_pip', False),
    ])),
    ('async_generator', '1.10', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '6ebb3d106c12920aaae42ccb6f787ef5eefdcdd166ea3d628fa8476abe712144')]),
    ])),
    ('nest_asyncio', '1.4.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'eaa09ef1353ebefae19162ad423eef7a12166bcc63866f8bff8f3635353cd9fa')]),
    ])),
    ('absl-py', '0.10.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'b20f504a7871a580be5268a18fbad48af4203df5d33dbc9272426cb806245a45')]),
        ('modulename', 'absl'),
    ])),
    ('websockify', '0.9.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c35b5b79ebc517d3b784dacfb993be413a93cda5222c6f382443ce29c1a6cada')]),
    ])),
    ('typing_extensions', '3.7.4.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '99d4073b617d30288f569d3f13d2bd7548c3a7e4c8de87db09a9d29bb3a4a60c')]),
    ])),
    # General Python packages
    ('tornado', '6.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '33c6e81d7bd55b468d2e793517c909b139960b6c790a60b7991b9b6b76fb9791')]),
    ])),
    ('bokeh', '2.2.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c4a3f97afe5f525019dd58ee8c4e3d43f53fe1b1ac264ccaae9b02c07b2abc17')]),
    ])),
    ('nbformat', '5.1.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1d223e64a18bfa7cdf2db2e9ba8a818312fc2a0701d2e910b58df66809385a56')]),
    ])),
    ('param', '1.9.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '8370d41616e257b8ed2e242ec531e0340b8c954bea414b791fa0ef6235959981')]),
    ])),
    # Jupyter-core and dependencies
    ('alabaster', '0.7.12', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'a661d72d58e6ea8a57f7a86e37d86716863ee5e92788398526d58b26a4e4dc02')]),
    ])),
    ('Babel', '2.7.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'e86135ae101e31e2c8ec20a4e0c5220f4eed12487d5cf3f78be7e98d3a57fc28')]),
        ('modulename', 'babel'),
    ])),
    ('snowballstemmer', '2.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'df3bac3df4c2c01363f3dd2cfa78cce2840a79b9f1c2d2de9ce8d31683992f52')]),
    ])),
    ('docutils', '0.15.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'a2aeea129088da402665e92e0b25b04b073c04b2dce4ab65caaa38b7ce2e1a99')]),
    ])),
    ('imagesize', '1.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'f3832918bc3c66617f92e35f5d70729187676313caa60c187eb0f28b8fe5e3b5')]),
    ])),
    ('sphinxcontrib-websupport', '1.1.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1501befb0fdf1d1c29a800fdbf4ef5dc5369377300ddbdd16d2cd40e54c6eefc')]),
        ('modulename', 'sphinxcontrib'),
    ])),
    ('Sphinx', '1.8.5', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c7658aab75c920288a8cf6f09f244c6cfdae30d82d803ac1634d9f223a80ca08')]),
        ('modulename',  'sphinx'),
    ])),
    ('ipynb', '0.5.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '8d834c777ca3885289938728cc382f081c86a58e92961e86f0aba60c96938ce5')]),
    ])),
    ('jupyter_core', '4.7.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '79025cb3225efcd36847d0840f3fc672c0abd7afd0de83ba8a1d3837619122b4')]),
    ])),
    ('retrying', '1.3.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '08c039560a6da2fe4f2c426d0766e284d3b736e355f8dd24b37367b0bb41973b')]),
    ])),
    ('plotly', '4.14.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '7d8aaeed392e82fb8e0e48899f2d3d957b12327f9d38cdd5802bc574a8a39d91')]),
    ])),
    ('tikzplotlib', '0.9.8', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'bf205e74e27e9efefde70d7773675a8432dab600741ac8c0db93daaeb7fc957c')]),
    ])),
    #  Jupyter client
    ('jupyter_client', '6.1.11', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '649ca3aca1e28f27d73ef15868a7c7f10d6e70f761514582accec3ca6bb13085')]),
    ])),
    ('pynvml', '8.0.4', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c8d4eadc648c7e12a3c9182a9750afd8481b76412f83747bcc01e2aa829cde5d')]),
    ])),
    #  Jupyter notebook and dependencies
    ('singledispatch', '3.4.0.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '5b06af87df13818d14f08a028e42f566640aef80805c3b50c5056b086e3c2b9c')]),
    ])),
    ('ipyparallel', '6.3.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '0a97b276c62db633e9e97a816282bdd166f9df74e28204f0c8fa54b71944cfdc')]),
    ])),
    ('ipykernel', '5.4.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '697103d218e9a8828025af7986e033c89e0b36e2b6eb84a5bda4739b9a27f3cb')]),
    ])),
    ('terminado', '0.9.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '89e6d94b19e4bc9dce0ffd908dfaf55cc78a9bf735934e915a4a96f65ac9704c')]),
        ('use_pip', False),
    ])),
    ('bleach', '3.3.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '98b3170739e5e83dd9dc19633f074727ad848cbedb6026708c8ac2d3b697a433')]),
    ])),
    ('mistune', '0.8.4', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '59a3429db53c50b5c6bcc8a07f8848cb00d7dc8bdb431a4ab41920d201d4756e')]),
    ])),
    ('pandocfilters', '1.4.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'bc63fbb50534b4b1f8ebe1860889289e8af94a23bff7445259592df25a3906eb')]),
    ])),
    ('testpath', '0.4.4', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '60e0a3261c149755f4399a1fff7d37523179a70fdc3abdf78de9fc2604aeec7e')]),
        ('use_pip', False),
    ])),
    ('nbconvert', '6.0.7', dict(list(local_common_opts.items()) + [
        # !!! nbconvert will try to read from all paths in <jupyter-config-path> the file nbconvert/templates/conf.json
        #     ensure it has permissions (https://github.com/jupyter/nbconvert/issues/1430)
        ('checksums', [('sha256', 'cbbc13a86dfbd4d1b5dee106539de0795b4db156c894c2c5dc382062bbc29002')]),
        # 6.0.7 - patch for jupyter_contrib_nbextensions needed:
        #               https://github.com/ipython-contrib/jupyter_contrib_nbextensions/pull/1532
    ])),
    ('Send2Trash', '1.5.0', dict(list(local_common_opts.items()) + [  # req. by widgetsnbextension
        ('checksums', [('sha256', '60001cc07d707fe247c94f74ca6ac0d3255aabcb930529690897ca2a39db28b2')]),
        ('modulename',  'send2trash'),
    ])),
    ('argon2-cffi', '20.1.0', dict(list(local_common_opts.items()) + [  # req. for notebook >= 6.1
        ('checksums', [('sha256', 'd8029b2d3e4b4cea770e9e5a0104dd8fa185c1724a0f01528ae4826a6d25f97d')]),
        ('modulename', 'argon2'),
    ])),
    ('notebook', '6.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '0464b28e18e7a06cec37e6177546c2322739be07962dd13bf712bcb88361f013')]),
        ('patches', ['notebook-6.0.3_jsc.patch']),  # allow others to read/write in .ipynb_checkpoints
    ])),
    ('version_information', '1.0.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '811b9cea4b376aa62a77dc729a937ce8e2844573b8686b5c1840147054fb938d')]),
    ])),
    ('lesscpy', '0.14.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '7b664f60818a16afa8cc9f1dd6d9b17f944e0ce94e50787d76f81bc7a8648cce')]),
    ])),
    ('prometheus_client', '0.9.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9da7b32f02439d8c04f7777021c304ed51d9ec180604700c1ba72a4d44dceb03')]),
    ])),
    ('jupyterthemes', '0.20.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '2a8ebc0c84b212ab99b9f1757fc0582a3f53930d3a75b2492d91a7c8b36ab41e')]),
    ])),
    #  Jupyter Lab and dependencies
    ('zipp', '3.4.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'ed5eee1974372595f9e416cc7bbeeb12335201d8081ca8a0743c954d4446e5cb')]),
    ])),
    ('jupyter-packaging', '0.7.12', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'b140325771881a7df7b7f2d14997b619063fe75ae756b9025852e4346000bbb8')]),
    ])),
    ('importlib_metadata', '3.4.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'fa5daa4477a7414ae34e95942e4dd07f62adf589143c875c133c1e53c4eff38d')]),
    ])),
    ('jupyterlab_launcher', '0.13.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'f880eada0b8b1f524d5951dc6fcae0d13b169897fc8a247d75fb5beadd69c5f0')]),
    ])),
    ('sphinx_rtd_theme', '0.4.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '728607e34d60456d736cc7991fd236afb828b21b82f956c5ea75f94c8414040a')]),
    ])),
    ('commonmark', '0.9.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '452f9dc859be7f06631ddcb328b6919c67984aca654e5fefb3914d54691aed60')]),
    ])),
    ('recommonmark', '0.6.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '29cd4faeb6c5268c633634f2d69aef9431e0f4d347f90659fd0aab20e541efeb')]),
    ])),
    ('jupyterlab', local_jlab_version, dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '3be8f8edea173753dd838c1b6d3bbcb6f5c801121f824a477025c1b6a1d33dc6')]),
        ('patches', [('401html.patch', 1)])
    ])),
    ('json5', '0.8.5', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '124b0f0da1ed2ff3bfe3a3e9b8630abd3c650852465cb52c15ef60b8e82a73b0')]),
    ])),
    ('jupyterlab_server', '1.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '5431d9dde96659364b7cc877693d5d21e7b80cea7ae3959ecc2b87518e5f5d8c')]),
    ])),
    ('jupyter_kernel_gateway', '2.4.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '6424a9f118e757ef18e9bed7784ca05ad9e633945df328ac4d8810eadc6f6ccd')]),
        ('modulename', 'kernel_gateway'),
    ])),
    ('nbclient', '0.5.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '0ed6e5700ad18818030a3a5f0f201408c5972d8e38793840cd9339488fd9f7c4')]),
    ])),
    #  Jupyter Widgets and dependencies
    ('defusedxml', '0.6.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'f684034d135af4c6cbb949b8a4d2ed61634515257a67299e5f940fbaa34377f5')]),
    ])),
    ('widgetsnbextension', '3.5.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '079f87d87270bce047512400efd70238820751a11d2d8cb137a5a5bdbaf255c7')]),
    ])),
    ('ipywidgets', '7.5.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'e945f6e02854a74994c596d9db83444a1850c01648f1574adf144fbbabe05c97')]),
    ])),
    # ('ipyscales', '0.6.0', dict(list(local_common_opts.items()) + [
    #     ('checksums', [('sha256', 'f2c42776482081b2771a2789623e1744a4e578f5d51644c1450b53738292b069')]),
    # ])), # fails because of PEP 517
    ('ipydatawidgets', '4.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'd9f94828c11e3b40350fb14a02e027f42670a7c372bcb30db18d552dcfab7c01')]),
    ])),
    ('traittypes', '0.2.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'be6fa26294733e7489822ded4ae25da5b4824a8a7a0e0c2dccfde596e3489bd6')]),
    ])),
    ('bqplot', '0.12.22', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '3f0eee5e2b03866f729ef295f9f46310dcafa832040064f40995a3e876986855')]),
    ])),
    ('jupyter_bokeh', '2.0.4', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'd337306021fb6a8e63556dbe2eaf539a8025aa76d9ba512b18189bfb1f708177')]),
    ])),
    ('pythreejs', '2.2.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'acceeac346054bcc280bf93f494557e6f5ab404860cfee584d72a6c3dde16463')]),
    ])),
    ('ipywebrtc', '0.5.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '4db2be7d0bfcbd142b2f9f9e8303b926832a632ed4a3bc5681b319a5f226285a')]),
    ])),
    ('ipyvolume', '0.6.0a6', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1a71c681dd39b514db966c4812bbbd1347ce082ee7a7bcc53f494e0546bf37ff')]),
    ])),
    ('branca', '0.3.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '3e762c9bdf40725f3d05ea1fda8fae9b470bfada6474e43a1242c8204a7bb15e')]),
    ])),
    ('ipyleaflet', '0.13.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c05f138327926bc81f29a629588bd656be5ff76dd8785c1e7eac5445b1d5a432')]),
    ])),
    ('ipympl', '0.5.8', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '0e2f2e540a2dfea61524b7993fc8552c9236b1aaa3826e1f382c75cb2fa5c382')]),
    ])),  # respect version lookup table: https://github.com/matplotlib/ipympl
    # Jupyter Notebook Extensions
    ('jupyter_nbextensions_configurator', '0.4.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'e5e86b5d9d898e1ffb30ebb08e4ad8696999f798fef3ff3262d7b999076e4e83')]),
    ])),
    ('jupyter_latex_envs', '1.4.6', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '070a31eb2dc488bba983915879a7c2939247bf5c3b669b398bdb36a9b5343872')]),
        ('patches', ['jupyter_latex_envs-template_paths.patch']),
        #  support for nbconvert>=6.x -> https://github.com/jfbercher/jupyter_latex_envs/pull/58
        ('modulename', 'latex_envs'),
    ])),
    ('jupyter_highlight_selected_word', '0.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9fa740424859a807950ca08d2bfd28a35154cd32dd6d50ac4e0950022adc0e7b')]),
    ])),
    ('jupyter_contrib_core', '0.3.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'e65bc0e932ff31801003cef160a4665f2812efe26a53801925a634735e9a5794')]),
    ])),
    ('jupyter_contrib_nbextensions', '0.5.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'eecd28ecc2fc410226c0a3d4932ed2fac4860ccf8d9e9b1b29548835a35b22ab')]),
        ('patches', ['jupyter_contrib_nbextensions-template_paths.patch']),
        #  support for nbconvert>=6.x -> https://github.com/ipython-contrib/jupyter_contrib_nbextensions/pull/1532
    ])),
    ('rise', '5.7.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '641db777cb907bf5e6dc053098d7fd213813fa9a946542e52b900eb7095289a6')]),
    ])),
    ('idna-ssl', '1.1.0', dict(list(local_common_opts.items()) + [  # indirect dep of jupyter-server-proxy
        ('checksums', [('sha256', 'a933e3bb13da54383f9e8f35dc4f9cb9eb9b3b78c6b36f311254d6d0d92c6c7c')]),
    ])),
    ('multidict', '4.7.5', dict(list(local_common_opts.items()) + [  # indirect dep of jupyter-server-proxy
        ('checksums', [('sha256', 'aee283c49601fa4c13adc64c09c978838a7e812f85377ae130a24d7198c0331e')]),
    ])),
    ('yarl', '1.6.3', dict(list(local_common_opts.items()) + [  # indirect dep of jupyter-server-proxy
        ('checksums', [('sha256', '8a9066529240171b68893d60dca86a763eae2139dd42f42106b03cf4b426bf10')]),
    ])),
    ('async-timeout', '3.0.1', dict(list(local_common_opts.items()) + [  # indirect dep of jupyter-server-proxy
        ('checksums', [('sha256', '0c3c816a028d47f659d6ff5c745cb2acf1f966da1fe5c19c77a70282b25f4c5f')]),
    ])),
    ('aiohttp', '3.6.2', dict(list(local_common_opts.items()) + [  # indirect dep of jupyter-server-proxy
        ('checksums', [('sha256', '259ab809ff0727d0e834ac5e8a283dc5e3e0ecc30c4d80b3cd17a4139ce1f326')]),
    ])),
    ('simpervisor', '0.3', dict(list(local_common_opts.items()) + [  # indirect dep of jupyter-server-proxy
        ('checksums', [('sha256', 'd82e4527ae326747551e4bdfa632ff4ebef275ce721f80886c747adfdbf41c2e')]),
    ])),
    ('sniffio', '1.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c4666eecec1d3f50960c6bdf61ab7bc350648da6c126e3cf6898d8cd4ddcd3de')]),
    ])),
    ('anyio', '2.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '8a56e08623dc55955a06719d4ad62de6009bb3f1dd04936e60b2104dd58da484')]),
    ])),
    ('jupyter_server', '1.1.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'b4b1f8f0c38e1faf418f3ff536cdb6d84dfb477d150abee5f0e65c7fd95fa527')]),
    ])),
    ('jupyter-server-proxy', '1.5.2', dict(list(local_common_opts.items()) + [
        ('source_urls', ['https://github.com/jupyterhub/jupyter-server-proxy/archive/']),
        ('source_tmpl', 'v%(version)s.tar.gz'),
        ('checksums', [('sha256', '140bd642c511519ddd2acc5f70e0b46a40bbc673c888dcb3b19981005286853b')]),
        ('patches', ['jupyterserverproxy-urlfile.patch']),
    ])),
    # Jupyter Lab Extensions
    ('jupyterlab_github', '2.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1f560a91711b779d08118161af044caff44159e315cb80ae830d3dfbded7bac9')]),
        # do not use pypi for download -> we need to patch drive.json
        ('source_urls', ['https://github.com/jupyterlab/jupyterlab-github/archive']),
        ('source_tmpl', 'v%(version)s.tar.gz'),
        ('patches', ['jupyterlab_github-%(version)s_jsc.patch']),
    ])),
    ('jupyterlab-gitlab', '2.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '31d3fbd9b139aca7704dd13967ac22c81e372b50c4db730f342ab7800db7a5c6')]),
        # do not use pypi for download -> we need to patch drive.json
        ('source_urls', ['https://gitlab.com/beenje/jupyterlab-gitlab/-/archive/%(version)s']),
        ('source_tmpl', 'jupyterlab-gitlab-%(version)s.tar.gz'),
        ('patches', ['jupyterlab-gitlab-%(version)s_jsc.patch']),
    ])),
    ('jupyterlab-quickopen', '0.5.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('90cba3a7e6ff8d2b3eaf2594079c25f82e2c158d2ec63ebd951e4042a7445f8e')]),
    ])),
    ('zstandard', '0.12.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'a110fb3ad1db344fbb563942d314ec5f0f3bdfd6753ec6331dded03ad6c2affb')]),
    ])),
    # ('jupyterlab_hdf', '0.5.1', dict(list(local_common_opts.items()) + [
    #     ('checksums', [('sha256', '9397fed0487e5811d1147851c3d7781fc9a53eb9c7b4471eeebf555f38ddc02e')]),
    # ])),
    # ('elyra-server', '1.5.3', dict(list(local_common_opts.items()) + [
    #     ('checksums', [('sha256', '36dd386862252636bd1ff9af657fbb2c51d59a84c99332be9d749c64eed3410f')]),
    # ])),  # req. kfp, kfp-notebook, minio, rfc3986-validator
    # ('elyra-pipeline-editor-extension', '1.5.3', dict(list(local_common_opts.items()) + [
    #     ('checksums', [('sha256', 'da134c224e968a1df643f74b99263a6ee21a557bda5615d779474e77a1f7e90c')]),
    # ])),
    # https://blog.kitware.com/itk-is-on-pypi-pip-install-itk-is-here/
    ('itk_core', '5.1.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'itk_core-5.1.2-cp38-cp38-manylinux1_x86_64.whl'),
        ('checksums', [('sha256', '1f0254f0f134b709e6df3601dc38ccc45c2d5d5576fc10e1a0313d1fe8aefa84')]),
        ('unpack_sources', False),
        ('modulename', 'itk'),
    ])),
    ('itk_filtering', '5.1.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'itk_filtering-5.1.2-cp38-cp38-manylinux1_x86_64.whl'),
        ('checksums', [('sha256', 'f4a1256c8c684329780b9f4326fb571023af1d96fbda7cb7b513b4a395a9cd42')]),
        ('unpack_sources', False),
        ('modulename', 'itk'),
    ])),
    ('itk_segmentation', '5.1.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'itk_segmentation-5.1.2-cp38-cp38-manylinux1_x86_64.whl'),
        ('checksums', [('sha256', 'f81ba4881f7802eb5b911c4e1eac4706220647196ebda68477318630542db226')]),
        ('unpack_sources', False),
        ('modulename', 'itk'),
    ])),
    ('itk_numerics', '5.1.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'itk_numerics-5.1.2-cp38-cp38-manylinux1_x86_64.whl'),
        ('checksums', [('sha256', '6ac84a6386cd51692ed9605b6daefcc6230ec976f93161c9c5d89cfdfe042eba')]),
        ('unpack_sources', False),
        ('modulename', 'itk'),
    ])),
    ('itk_registration', '5.1.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'itk_registration-5.1.2-cp38-cp38-manylinux1_x86_64.whl'),
        ('checksums', [('sha256', 'd25b578ffb859f07cbad6987d1adb507e357d91f82863faeae337d8645b9d29d')]),
        ('unpack_sources', False),
        ('modulename', 'itk'),
    ])),
    ('itk_io', '5.1.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'itk_io-5.1.2-cp38-cp38-manylinux1_x86_64.whl'),
        ('checksums', [('sha256', '6ecc528ce4ae42b6d14c972d51055856f130a13474463ba4bf187ed2afdb04b1')]),
        ('unpack_sources', False),
        ('modulename', 'itk'),
    ])),
    ('itk_meshtopolydata', '0.6.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'itk_meshtopolydata-0.6.2-cp38-cp38-manylinux1_x86_64.whl'),
        ('checksums', [('sha256', '486e418808c27ccc76619737219fa57fcd1de2da5fcd0325ee8c4395965deb39')]),
        ('unpack_sources', False),
        ('modulename', 'itk'),
    ])),
    ('pyct', '0.4.6', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'df7b2d29f874cabdbc22e4f8cba2ceb895c48aa33da4e0fe679e89873e0a4c6e')]),
    ])),
    ('colorcet', '2.0.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '514813790a74b578c3eaff76b2102274c2ba8b0239c9504586df685223007dee')]),
    ])),
    ('itkwidgets', '0.32.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '11ee93007cf354405e01bf9a28fb1eb2fb0a5d139e1cdded1a07b47f7ee76972')]),
    ])),
    ('ujson', '3.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'abb1996ba1c1d2faf5b1e38efa97da7f64e5373a31f705b96fe0587f5f778db4')]),
    ])),
    #    ('jupyterlab_iframe', '0.2.2', dict(list(local_common_opts.items()) + [
    #        ('checksums', [('sha256', '7c26cddc5f29f0b5ac6ba4707ce811f9787282549d22098b691bcdcc6692238c')]),     
    #        ('use_pip', False),
    #    ])),
    ('python-dotenv', '0.10.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'f157d71d5fec9d4bd5f51c82746b6344dffa680ee85217c123f4a0c8117c4544')]),
        ('modulename', 'dotenv'),
    ])),
    #    ('ipyauth', '0.2.5', dict(list(local_common_opts.items()) + [
    #        ('checksums', [('sha256', '189db0e9fd48cf52f333ef8ac1a71b9e3a9eec6561f5085e3d7239ca2588ba87')]),
    #    ])),
    ('jupyterlab_latex', '2.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '722558144e6ce71abe4fba0fb01c13c37271fa2497881bfebe9b6422d1fc795b')]),
    ])),
    # ('jupyterlab_slurm', '2.0.0', dict(list(local_common_opts.items()) + [
    #     ('checksums', [('sha256', '87ada82e7746745bcc47d19f3caf54cc18798b058aedcd5d1005e19b784c2d4f')]),
    # ])),
    ('jupyterlmod', '2.0.2', dict(list(local_common_opts.items()) + [
        ('source_urls', ['https://github.com/cmd-ntrf/jupyter-lmod/archive/']),
        ('source_tmpl', '%(version)s.tar.gz'),
        ('checksums', [('sha256', 'f547432afb30cb87c8dabf78fd4cc4c35ff4b6d2aafbae19c249b7d596015c6a')]),
        ('patches', [
            'jupyterlmod-urlfile.patch',
            'jupyterlmod-packagejson.patch',
        ]),
    ])),
    ('nbresuse', '0.3.6', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '5ba19dd0b08ff19470aeb34cda2f07276a3fb1cd750bc53f3a3e06322664e98e')]),
    ])),
    ('colorama', '0.4.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '05eed71e2e327246ad6b38c540c4a3117230b19679b875190486ddd2d721422d')]),
    ])),
    ('nbdime', '2.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '4e3efdcfda31c3074cb565cd8e76e2e5421b1c4560c3a00c56f8679dd15590e5')]),
    ])),
    ('smmap2', '2.0.5', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '29a9ffa0497e7f2be94ca0ed1ca1aa3cd4cf25a1f6b4f5f87f74b46ed91d609a')]),
        ('modulename', 'smmap'),
    ])),
    ('gitdb2', '2.0.6', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1b6df1433567a51a4a9c1a5a0de977aa351a405cc56d7d35f3388bad1f630350')]),
        ('modulename', 'gitdb'),
    ])),
    ('GitPython', '3.0.4', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '3237caca1139d0a7aa072f6735f5fd2520de52195e0fa1d8b83a9b212a2498b2')]),
        ('modulename', 'git'),
    ])),
    ('jupyterlab_git', '0.23.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '20a4954d8d1b1eb6f9111cd15d6a598bd7ff72b08797cf5e86c5a55827c85a1d')]),
    ])),
    ('sidecar', '0.4.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '3e79de269ddd2c0eff1cb26025cb9f434cf9914b777cf03eeab8347f6de7160e')]),
    ])),
    ('pycodestyle', '2.6.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c58a7d2815e0e8d7972bf1803331fb0152f867bd89adf8a01dfd55085434192e')]),
    ])),
    ('autopep8', '1.4.4', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '4d8eec30cc81bc5617dbf1218201d770dc35629363547f17577c61683ccfb3ee')]),
    ])),
    ('yapf', '0.28.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '6f94b6a176a7c114cfa6bad86d40f259bbe0f10cf2fa7f2f4b3596fc5802a41b')]),
    ])),
    ('isort', '4.3.21', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '54da7e92468955c4fceacd0c86bd0ec997b0e1ee80d97f67c35a78b719dccab1')]),
    ])),
    ('pathspec', '0.6.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'e285ccc8b0785beadd4c18e5708b12bb8fcf529a1e61215b3feff1d1e559ea5c')]),
    ])),
    ('typed_ast', '1.4.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9fc0b3cb5d1720e7141d103cf4819aea239f7d136acf9ee4a69b047b7986175a')]),
    ])),
    ('regex', '2019.11.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '720e34a539a76a1fedcebe4397290604cc2bdf6f81eca44adb9fb2ea071c0c69')]),
    ])),
    ('black', '19.3b0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '68950ffd4d9169716bcb8719a56c07a2f4485354fec061cdd5910aa07369731c')]),
    ])),
    ('jupyterlab_code_formatter', '1.3.8', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '7c415caff528e55027e82c96b60dcab0537aa5cda168997f03a4964c51e2b7b5')]),
    ])),
    ###############
    # extras
    ('mccabe', '0.6.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f')]),
    ])),
    ('pyflakes', '2.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '35b2d75ee967ea93b55750aa9edbbf72813e06a66ba54438df2cfac9e3c27fc8')]),
    ])),
    ('flake8', '3.8.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'f04b9fcbac03b0a3e58c0ab3a0ecc462e023a9faf046d57794184028123aa208')]),
    ])),
    ('pydocstyle', '5.0.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'f4f5d210610c2d153fae39093d44224c17429e2ad7da12a8b419aba5c2f614b5')]),
    ])),
    ('rope', '0.16.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'd2830142c2e046f5fc26a022fe680675b6f48f81c7fc1f03a950706e746e9dfe')]),
    ])),
    # base for python language server
    ('python-jsonrpc-server', '0.4.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '62c543e541f101ec5b57dc654efc212d2c2e3ea47ff6f54b2e7dcb36ecf20595')]),
        ('modulename',  'pyls_jsonrpc'),
    ])),
    # test
    ('versioneer', '0.18', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'ead1f78168150011189521b479d3a0dd2f55c94f5b07747b484fd693c3fbf335')]),
    ])),
    ('lazy-object-proxy', '1.4.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'f3900e8a5de27447acbf900b4750b0ddfd7ec1ea7fbaf11dfa911141bc522af0')]),
    ])),
    ('wrapt', '1.12.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'b62ffa81fb85f4332a4f609cab4ac40709470da05643a082ec1eb88e6d9b97d7')]),
    ])),
    ('astroid', '2.4.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '2f4078c2a41bf377eea06d71c9d2ba4eb8f6b1af2135bec27bbbb7d8f12bb703')]),
    ])),
    ('typed_ast', '1.4.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9fc0b3cb5d1720e7141d103cf4819aea239f7d136acf9ee4a69b047b7986175a')]),
    ])),
    ('pylint', '2.5.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '7dd78437f2d8d019717dbf287772d0b2dbdfd13fc016aa7faa08d67bccc46adc')]),
    ])),
    ('pytest-cov', '2.10.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '47bd0ce14056fdd79f93e1713f88fad7bdcc583dcd7783da86ef2f085a0bb88e')]),
    ])),
    ('pytest-xprocess', '0.13.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '779aeca517cd9c996d1544bdc510cb3cff40c48136d94bbce6148e27f30a93ff')]),
    ])),
    # python language server
    ('python-language-server', '0.36.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9984c84a67ee2c5102c8e703215f407fcfa5e62b0ae86c9572d0ada8c4b417b0')]),
        ('modulename',  'pyls'),
    ])),
    ('jupyter-lsp', '0.9.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '73b5cb47fbe672bee6c02ddc4f2fbe728dc3bff589b5741835ebb80a862163af')]),
    ])),

    ####################
    # Jupyter Hub
    #    ('SQLAlchemy', '1.3.10', dict(list(local_common_opts.items()) + [
    #        ('checksums', [('sha256', '0f0768b5db594517e1f5e1572c73d14cf295140756431270d89496dc13d5e46c')]),
    #    ])),  # part of Python module in version 1.3.1
    #    ('python-oauth2', '1.1.1', dict(list(local_common_opts.items()) + [
    #        ('checksums', [('sha256', 'd7a8544927ac18215ba5317edd8f640a5f1f0593921bcf3ce862178312c8c9a4')]),
    #        ('modulename',  'oauth2'),
    #    ])), # part of Python module
    ('pamela', '1.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '65c9389bef7d1bb0b168813b6be21964df32016923aac7515bdf05366acbab6c')]),
    ])),
    ('certipy', '0.1.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '695704b7716b033375c9a1324d0d30f27110a28895c40151a90ec07ff1032859')]),
    ])),
    ('oauthlib', '3.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'bee41cc35fcca6e988463cacc3bcb8a96224f470ca547e697b604cc697b2f889')]),
    ])),
    ('ruamel.yaml', '0.16.5', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '412a6f5cfdc0525dee6a27c08f5415c7fd832a7afcb7a0ed7319628aed23d408')]),
    ])),
    ('ruamel.yaml.clib', '0.1.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'cee86ecc893a6a8ecaa7c6a9c2d06f75f614176210d78a5f155f8e78d6989509')]),
        ('modulename', 'ruamel.yaml'),
    ])),
    ('python-json-logger', '0.1.11', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'b7a31162f2a01965a5efb94453ce69230ed208468b0bbc7fdfc56e6d8df2e281')]),
        ('modulename', 'pythonjsonlogger'),
    ])),
    ('jupyter_telemetry', '0.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '445c613ae3df70d255fe3de202f936bba8b77b4055c43207edf22468ac875314')]),
    ])),
    ('jupyterhub', '1.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '852a70225a03abd631b36a207f3ffdf69326a0db4cef539825fde39ec1b713d7')]),
        ('patches', ['jupyterhub-1.1.0_logoutcookie-2.0.patch']),
        # copy 401.html -> <jupyter-install-dir>/share/jupyter/lab/static/
    ])),
    ('appmode', '0.6.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'deac99adaa95e28fa8a56c072be653603cffa49dc06469701ac9c014b690e7c4')]),
    ])),
    ('HeapDict', '1.0.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '8495f57b3e03d8e46d5f1b2cc62ca881aca392fd5cc048dc0aa2e1a6d23ecdb6')]),
    ])),
    ('zict', '2.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '8e2969797627c8a663575c2fc6fcb53a05e37cdb83ee65f341fc6e0c3d0ced16')]),
    ])),
    ('tblib', '1.7.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '059bd77306ea7b419d4f76016aef6d7027cc8a0785579b5aad198803435f882c')]),
    ])),
    ('sortedcontainers', '2.3.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '59cc937650cf60d677c16775597c89a960658a09cf7c1a668f86e1e4464b10a1')]),
    ])),
    ('msgpack', '1.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9534d5cc480d4aff720233411a1f765be90885750b07df772380b34c10ecb5c0')]),
    ])),
    ('dask', '2.30.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'a1669022e25de99b227c3d83da4801f032415962dac431099bf0534648e41a54')]),
    ])),
    ('cloudpickle', '1.6.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9bc994f9e9447593bd0a45371f0e7ac7333710fcf64a4eb9834bf149f4ef2f32')]),
    ])),
    ('distributed', '2.30.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1421d3b84a0885aeb2c4bdc9e8896729c0f053a9375596c9de8864e055e2ac8e')]),
    ])),
    ('dask-jobqueue', '0.7.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1767f4146b2663d9d2eaef62b882a86e1df0bccdb8ae68ae3e5e546aa6796d35')]),
    ])),
    ('dask_labextension', '3.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c613f5c76b8fce4fae167eeab3377e0706e5045a27da1200b3b173025a94d94b')]),
    ])),
    ('Automat', '0.8.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '269a09dfb063a3b078983f4976d83f0a0d3e6e7aaf8e27d8df1095e09dc4a484')]),
    ])),
    ('PyHamcrest', '1.9.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '8ffaa0a53da57e89de14ced7185ac746227a8894dbd5a3c718bf05ddbd1d56cd')]),
        ('modulename', 'hamcrest'),
    ])),
    ('pyasn1-modules', '0.2.8', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '905f84c712230b2c592c19470d3ca8d552de726050d1d1716282a1f6146be65e')]),
    ])),
    ('service_identity', '18.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '0858a54aabc5b459d1aafa8a518ed2081a285087f349fe3e55197989232e2e2d')]),
    ])),
    ('Twisted', '19.7.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'd5db93026568f60cacdc0615fcd21d46f694a6bfad0ef3ff53cde2b4bb85a39d')]),
        ('source_tmpl', '%(name)s-%(version)s.tar.bz2'),
    ])),
    ('autobahn', '19.10.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '734385b00547448b3f30a752cbfd2900d15924d77dc4a1699b8bce1ea8899f39')]),
    ])),
    ('constantly', '15.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '586372eb92059873e29eba4f9dec8381541b4d3834660707faf8ba59146dfc35')]),
    ])),
    ('hyperlink', '19.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '4288e34705da077fada1111a24a0aa08bb1e76699c9ce49876af722441845654')]),
    ])),
    ('incremental', '17.5.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '7b751696aaf36eebfab537e458929e194460051ccad279c72b755a167eebd4b3')]),
    ])),
    ('txaio', '18.8.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '67e360ac73b12c52058219bb5f8b3ed4105d2636707a36a7cdafb56fe06db7fe')]),
    ])),
    ('zope.interface', '4.7.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'fd1101bd3fcb4f4cf3485bb20d6cb0b56909b94d3bd2a53a6cb9d381c3da3365')]),
    ])),
    ('wslink', '0.1.13', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '6983114e978717a2681815b1ef4b8a0fa2c80c89c6ed09b9554a36c5869cf935')]),
    ])),
    ('jupyterlab_pygments', '0.1.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'cfcda0873626150932f438eccf0f8bf22bfa92345b814890ab360d666b254146')]),
    ])),
    #    ('jupyterlab-nvdashboard', '0.4.0', dict(list(local_common_opts.items()) + [
    #        # throughs too many errors if nvtools or driver are not installed
    #        ('checksums', [('sha256', 'ff12f20076e8cb52ea3319ccf148458ba6230611b52b835b0eeea10ba37f7fe1')]),
    #    ])),
    ('ipyvue', '1.5.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'e8549a7ac7dc45948a5f2735e17f97622313c7fea24ea3c1bd4a5ebf02bf5638')]),
    ])),
    ('ipyvuetify', '1.6.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'd0cfa23ae5a012b0b4f1772a2b2c472f2cc705e9357e16fbe74bf247d2d979f1')]),
    ])),
    ('voila', '0.2.6', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'e4b20c81e61f35b59958070e26d2843eb0aaaa25855b180e06e85b59f6dec02d')]),
    ])),
    ('voila-material', '0.4.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '0827a27f0f23ca87bd8f565c4c227c754516d2a120ffce0f7ab1ee12fdec959f')]),
        ('modulename', 'voila'),  # fake module name to trick the sanity check
    ])),
    ('voila-gridstack', '0.0.12', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '7c73e4373abc953cb16f708eafe6b09b11ecae7f130c2db233e184907894fdae')]),
        ('modulename', 'voila'),
    ])),
    ('voila-vuetify', '0.5.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '522f4ec91eb3912a21215b6b04ad58070d1675809d7d4289ca8e42b577fde100')]),
        ('modulename', 'voila'),
    ])),
    ('pydicom', '1.4.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9488495a9f3e202d1219f7cb165aee0de31efd512d938c0226d34147ce860391')]),
    ])),
    ('dicom_upload', '0.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'd03f309bbae2094d3db75ffaa9753cca5982d2096ec55720a1f54343cc4a6877')]),
    ])),
    ('jsfileupload', '0.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '245cd74a3c2ed4356df9a33d0072d8ab295b60b6fdfd69c6795396d455fc8a77')]),
    ])),
    ('pvlink', '0.3.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'a2d5f2c204e0e779a5b865742019b4646b8592d76de87cac724dc84f64eaf80f')]),
    ])),
    ('textwrap3', '0.9.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'textwrap3-0.9.2.zip'),
        ('checksums', [('sha256', '5008eeebdb236f6303dcd68f18b856d355f6197511d952ba74bc75e40e0c3414')]),
        ('use_pip',  True),
    ])),
    ('ansiwrap', '0.8.4', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'ansiwrap-0.8.4.zip'),
        ('checksums', [('sha256', 'ca0c740734cde59bf919f8ff2c386f74f9a369818cdc60efe94893d01ea8d9b7')]),
    ])),
    ('backports.weakref', '1.0.post1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'bc4170a29915f8b22c9e7c4939701859650f2eb84184aee80da329ac0b9825c2')]),
    ])),
    ('backports.tempfile', '1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1c648c452e8770d759bdc5a5e2431209be70d25484e1be24876cf2168722c762')]),
    ])),
    ('tqdm', '4.56.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'fe3d08dd00a526850568d542ff9de9bbc2a09a791da3c334f3213d8d0bbbca65')]),
    ])),
    ('tenacity', '6.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '72f397c2bb1887e048726603f3f629ea16f88cb3e61e4ed3c57e98582b8e3571')]),
    ])),
    ('papermill', '2.2.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1c452b1c5a9ab52b94c99d8b7705ae7173f6aa88a3d28a5d30cffba48a46f5b6')]),
    ])),
    ('pyviz_comms', '0.7.4', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '712df4cca33dda351de754742b24361eee8e4b7c1cfb0e24f50dcb802fa25624')]),
    ])),
    ('Markdown', '3.2.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1fafe3f1ecabfb514a5285fca634a53c1b32a81cb0feb154264d55bf2ff22c17')]),
        ('modulename', 'markdown'),
    ])),
    ('panel', '0.9.5', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '53340615f30f67f3182793695ebe52bf25e7bbb0751aba6f29763244350d0f42')]),
    ])),
    ('holoviews', '1.13.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'cf2dd426cdc08bf2ca669268ca0432634574429e5b143314ee06ad88c5382802')]),
    ])),
    # PythonPackages for Tutorials
    ('patsy', '0.5.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'f115cec4201e1465cd58b9866b0b0e7b941caafec129869057405bfe5b5e3991')]),
    ])),
    ('statsmodels', '0.10.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9cd2194c6642a8754e85f9a6e6912cdf996bebf6ff715d3cc67f65dadfd37cc9')]),
    ])),
    ('cftime', '1.2.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'ab5d5076f7d3e699758a244ada7c66da96bae36e22b9e351ce0ececc36f0a57f')]),
    ])),
    ('vega_datasets', '0.8.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'db8883dab72b6f414e1fafdbf1e8db7543bba6ed77912a4e0c197d74fcfa1c20')]),
    ])),
    ('Theano', '1.0.4', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '35c9bbef56b61ffa299265a42a4e8f8cb5a07b2997dabaef0f8830b397086913')]),
        ('modulename', 'theano'),
    ])),
    ('altair', '3.3.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9f7c521239ac5a207c3cffc29c5bdde0854fff0dec0b5f91f086ba8e5f1de8a9')]),
    ])),
    ('cssselect', '1.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'f95f8dedd925fd8f54edb3d2dfb44c190d9d18512377d3c1e2388d16126879bc')]),
    ])),
    ('smopy', '0.0.7', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '578b5bc2502176d210f176ab94e77974f43b32c95cd0768fb817ea2499199592')]),
    ])),
    ('memory_profiler', '0.55.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '5fa47b274c929dd2cbcd9190afb62fec110701251d2ac2d301caaf545c81afc1')]),
    ])),
    ('line_profiler', '3.1.0', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'line_profiler-3.1.0-cp38-cp38-manylinux1_x86_64.whl'),
        ('checksums', [('sha256', 'a66e089e6d98ab8a70b5f89c0367c6780abad0f0b1d624dbe5edd8f0083986c7')]),
        ('unpack_sources', False),  # whl package instead of tar.gz because building with skbuild->cmake fails
    ])),
    ('xarray', '0.16.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '38e8439d6c91bcd5b7c0fca349daf8e0643ac68850c987262d53526e9d7d01e4')]),
    ])),
    ('arviz', '0.10.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'dc1f08ce02459989dd4f41fa6012e736cf2ba00ee44b29bebe0a451c58a68e42')]),
    ])),
    ('pymc3', '3.8', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1bb2915e4a29877c681ead13932b0b7d276f7f496e9c3f09ba96b977c99caf00')]),
    ])),
    ('numexpr', '2.7.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'b0d239d9827e1bcee08344fd05835823bc60aff97232e35a928214d03ff802b1')]),
    ])),
    ('ipythonblocks', '1.9.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'ba923cb7a003bddee755b5a7ac9e046ffc093a04b0bdede8a0a51ef900aed0ba')]),
    ])),
    ('pydub', '0.23.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'c362fa02da1eebd1d08bd47aa9b0102582dff7ca2269dbe9e043d228a0c1ea93')]),
    ])),
    ('multipledispatch', '0.6.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'a7ab1451fd0bf9b92cab3edbd7b205622fb767aeefb4fb536c2e3de9e0a38bea')]),
    ])),
    ('partd', '1.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '6e258bf0810701407ad1410d63d1a15cfd7b773fd9efe555dac6bb82cc8832b0')]),
    ])),
    ('locket', '0.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1fee63c1153db602b50154684f5725564e63a0f6d09366a1cb13dffcec179fb4')]),
    ])),
    ('fsspec', '0.6.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'ffd7cd5ac32f36698097c3d78c2c433d4c12f7e4bce3a3a4036fd3491188046d')]),
    ])),
    ('datashape', '0.5.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '2356ea690c3cf003c1468a243a9063144235de45b080b3652de4f3d44e57d783')]),
    ])),
    ('datashader', '0.11.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'b1f80415f72f92ccb660aaea7b2881ddd35d07254f7c44101709d42e819d6be6')]),
    ])),
    ('selenium', '3.141.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'deaf32b60ad91a4611b98d8002757f29e6f2c2d5fcaf202e1c9ad06d6772300d')]),
    ])),
    ('graphviz', '0.13.2', dict(list(local_common_opts.items()) + [
        ('source_tmpl', 'graphviz-0.13.2.zip'),
        ('checksums', [('sha256', '60acbeee346e8c14555821eab57dbf68a169e6c10bce40e83c1bf44f63a62a01')]),
    ])),
    ('vincent', '0.4.4', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '5765bcd360140d2304e52728ad1d4382f3f919ea259a13932828680f2d84fcd3')]),
    ])),
    ('tailer', '0.4.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '78d60f23a1b8a2d32f400b3c8c06b01142ac7841b75d8a1efcb33515877ba531')]),
    ])),
    # Dash
    ('Flask-Compress', '1.4.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '468693f4ddd11ac6a41bca4eb5f94b071b763256d54136f77957cfee635badb3')]),
    ])),
    ('hiredis', '1.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '996021ef33e0f50b97ff2d6b5f422a0fe5577de21a8873b58a779a5ddd1c3132')]),
    ])),
    ('redis', '3.5.3', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '0e7e0cfca8660dea8b7d5cd8c4f6c5e29e11f31158c0b0ae91a397f00e5a05a2')]),
    ])),
    ('Flask-Caching', '1.9.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'a0356ad868b1d8ec2d0e675a6fe891c41303128f8904d5d79e180d8b3f952aff')]),
    ])),
    ('dash', '1.16.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'fdfe2a16c4041c7769e06e4e0eaaeb65cfd8351797ed4b37efe001384637b6c7')]),
    ])),
    ('dash_renderer', '1.8.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '736f8e0dcce244699457b54a2ee262a04baf389db1a8f54e98c949bb3e7e487f')]),
    ])),
    ('dash_core_components', '1.12.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '803b54d01ca48b90f3fc1652f7be9f818ed2882da8975a51b99fc2d77dd2727e')]),
    ])),
    ('dash_html_components', '1.1.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '2c662e640528c890aaa0fa23d48e51c4d13ce69a97841d856ddcaaf2c6a47be3')]),
    ])),
    ('dash_table', '4.10.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '1aa02180faef13434364286b60404d26164d1ce2779c765c9c52e6935991a4e9')]),
    ])),
    ('dash-bootstrap-components', '0.10.5', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '40500e692f59648dbc024b9e921a1e1410ee0bc97cfa963990e54e42523679b4')]),
    ])),
    ('dash_daq', '0.5.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'a1d85b6799f7b885652fbc44aebdb58c41254616a8d350b943beeb42ade4256a')]),
    ])),
    ('dash_player', '0.0.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '46114910b497f35f1aa496ed8b9ff1457d07c96171227961b671ba4164c537a0')]),
    ])),
    ('dash_canvas', '0.1.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '72fcfb37e1c0f68c08f6fa6cf0b5be67ecc66fcfb5253231ffc450957b640b31')]),
    ])),
    ('dash_bio', '0.4.8', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'a6f480b060488ab9be26129562a7bcb491ef40ae0ffae46f499fb7d5997de06c')]),
    ])),
    ('dash_cytoscape', '0.2.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '0669c79c197e4b150a5db7a278d1c7acebc947f3f5cbad5274835ebb44f712cd')]),
    ])),
    ('ansi2html', '1.5.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '96ae85ae7b26b7da674d87de2870ba4d1964bca733ae4614587080b6358c3ba9')]),
    ])),
    ('jupyter-dash', '0.4.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', 'eb5eb42ec8cb5e3388d41d895b5ef6e66812e3345cb271cc374318a1a589e687')]),
    ])),
    # more
    ('fastcore', '1.3.6', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '550c201f6a0f7001994898260588e3df310968165c43ecc4fa3062dd6eee5956')]),
    ])),
    ('fastscript', '1.0.0', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '67d2315a508ffd0499af590fffaa63d276ce6eaff73ffbd60eb3315ba38d08fa')]),
    ])),
    #   ('nbdev', '1.1.5', dict(list(local_common_opts.items()) + [
    #       #   nbdev < 2 needs nbconvert < 6, will change with nbdev >= 2
    #       ('checksums', [('sha256', '0ce349625514e2865bbc023db597d791c45b572a7bbc8a49b320a327b9e7b721')]),
    #   ])),
    ('PyJWT', '1.7.1', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '8d59a976fb773f3e6a39c85636357c4f0e242707394cadadd9814f5cbaa20e96')]),
        ('modulename', 'jwt'),
    ])),
    ('pyunicore', '0.9.5', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '10c091812d90e86f1371fe1373dada86be6afac41da44b762f0f5f86f9ddc3ae')]),
    ])),

    # misc
    #    ('rpy2', '3.2.4', dict(list(local_common_opts.items()) + [
    #        ('checksums', [('sha256', '3daf1a4b28c4e354ef989093f03b066908bf6e5082a6f4af72cc3fd928a28dc6')]),
    #    ])),
]

local_jupyter_config_path = 'etc/jupyter'
local_jupyter_path = 'share/jupyter'
local_jupyterlab_dir = 'share/jupyter/lab'

modextrapaths = {
    'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages'],
    #  search path to find installable data files, such as kernelspecs and notebook extensions
    'JUPYTER_PATH': [local_jupyter_path],
    'JUPYTERLAB_DIR': [local_jupyterlab_dir],
    #  do NOT set JUPYTER_CONFIG_DIR: if not set, if will be ${HOME}/.jupyter, which is just right
    'JUPYTER_CONFIG_PATH': [local_jupyter_config_path]   # config dir at install time.
    #  ATTENTION: not config dir at runtime, because this is fixed to {sys.prefix}/etc/jupyter/
}

modextravars = {
    'JUPYTER': '%(installdir)s/bin/jupyter',
    'MKL_THREADING_LAYER': 'GNU',  # https://github.com/Theano/Theano/issues/6568
}

# Ensure that the user-specific $HOME/.local/share/jupyter is fist entry in JUPYTHER_PATH and JUPYTER_DATA_DIR
# and the JUPYTER_CONFIG_PATH starts with $HOME/.jupyter
# https://jupyter.readthedocs.io/en/latest/projects/jupyter-directories.html#envvar-JUPYTER_PATH
modluafooter = """
prepend_path("JUPYTER_PATH", pathJoin(os.getenv("HOME"), ".local/share/jupyter"))
prepend_path("JUPYTER_DATA_DIR", pathJoin(os.getenv("HOME"), ".local/share/jupyter"))
prepend_path("JUPYTER_CONFIG_PATH", pathJoin(os.getenv("HOME"), ".jupyter"))
"""

postinstallcmds = [
    #  ensure we install in the correct directory !!!
    'python3 -m venv %(installdir)s --system-site-packages',

    'echo "#!/bin/bash" > %(builddir)s/env.sh',
    'echo "source %(installdir)s/bin/activate" >> %(builddir)s/env.sh',
    (
        'echo "export PYTHONPATH='
        '%(installdir)s/lib/python3.8/site-packages:${EBROOTPYTHON}/lib/python3.8/site-packages:${PYTHONPATH}"'
        ' >> %(builddir)s/env.sh'
    ),
    #  Jupyter Paths - http://jupyter.readthedocs.io/en/latest/projects/jupyter-directories.html
    'echo "export JUPYTER=%(installdir)s/bin/jupyter" >> %(builddir)s/env.sh',
    'echo "export JUPYTER_PATH=%%(installdir)s/%s" >> %%(builddir)s/env.sh' % local_jupyter_path,
    'echo "export JUPYTERLAB_DIR=%%(installdir)s/%s" >> %%(builddir)s/env.sh' % local_jupyterlab_dir,
    #  Config dir at install time. ATTENTION: not config dir at runtime. This is picked up by JUPYTER_CONFIG_PATH
    'echo "export JUPYTER_CONFIG_DIR=%%(installdir)s/%s" >> %%(builddir)s/env.sh' % local_jupyter_config_path,
    #  jupyter will use $JUPYTER_CONFIG_DIR with "--user"
    'echo "export JUPYTER_DATA_DIR=%%(installdir)s/%s" >> %%(builddir)s/env.sh' % local_jupyter_path,
    'echo "export PATH=%(installdir)s/bin:${PATH}" >> %(builddir)s/env.sh',

    #  NodeJS packages
    'source %(builddir)s/env.sh && npm install -g phantomjs-prebuilt@2.1.16',  # req. export_png/export_svg of bokeh

    #  Jupyter Notebook Extensions
    'source %(builddir)s/env.sh && jupyter contrib nbextension install --user',
    'source %(builddir)s/env.sh && jupyter nbextensions_configurator enable --user',
    'source %(builddir)s/env.sh && jupyter nbextension enable codefolding/main --user',

    ('source %(builddir)s/env.sh && '
     '    jupyter nbextension install widgetsnbextension --py --nbextensions=${JUPYTER_PATH}/nbextensions'),
    'source %(builddir)s/env.sh && jupyter nbextension enable  widgetsnbextension --py --user',

    'source %(builddir)s/env.sh && jupyter nbextension enable ipyvuetify --py --user',

    'source %(builddir)s/env.sh && jupyter nbextension install rise --py --nbextensions=${JUPYTER_PATH}/nbextensions',
    'source %(builddir)s/env.sh && jupyter nbextension enable  rise --py --user',

    'source %(builddir)s/env.sh && jupyter nbextension     enable appmode --py --user',
    'source %(builddir)s/env.sh && jupyter serverextension enable appmode --py',

    #  Jupyter Notebook Extensions
    'source %(builddir)s/env.sh && jupyter labextension install @jupyter-widgets/jupyterlab-manager@2.0.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install @jupyter-widgets/jupyterlab-sidecar@0.5.0 --no-build',

    # 'source %(builddir)s/env.sh && jupyter labextension install @jupyterlab/server-proxy@2.1.1 --no-build',
    ('source %(builddir)s/env.sh && '
     '  cd %(builddir)s/jupyterserverproxy/jupyter-server-proxy-1.5.2/jupyterlab-server-proxy/ && '
     '    npm install && '                             # install npm package dependencies incurrent directory
     '    npm run build && '                           # optional build step if using TypeScript, babel, etc.
     '    jupyter labextension install --no-build'),   # install the current directory as an extension'
    # 'source %(builddir)s/env.sh && jupyter labextension install @jupyterlab/github@2.0.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install @jupyterlab/latex@2.0.1 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install @jupyterlab/git@0.23.3 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install @jupyterlab/toc@4.0.0 --no-build',

    'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-datawidgets@6.3.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-plotly@4.14.3 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-gitlab@2.0.0 --no-build',
    # 'source %(builddir)s/env.sh && jupyter labextension install jupyterlab_iframe@0.2.2 --no-build',

    # 'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-lmod@0.8.1 --no-build',
    #  this might interfer with Xpra-icon: https://github.com/cmd-ntrf/jupyter-lmod/issues/30
    ('source %(builddir)s/env.sh && '
     '  cd %(builddir)s/jupyterlmod/jupyter-lmod-2.0.2/jupyterlab/ && '
     '    npm install && '                            # install npm package dependencies incurrent directory
     '    npm run build && '                          # optional build step if using TypeScript, babel, etc.
     '    jupyter labextension install --no-build'),  # install the current directory as an extension

    # 'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-nvdashboard@0.4.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-dash@0.4.0 --no-build',

    'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-topbar-extension@0.5.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-system-monitor@0.6.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-theme-toggle@0.5.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-control@1.1.1 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-favorites@2.0.0 --no-build',
    # 'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-slurm@2.0.0 --no-build',

    #   store default in ../share/jupyter/lab/schemas/jupyterlab-favorites/favorites.json
    # 'source %(builddir)s/env.sh && jupyter labextension install jupyterlab-tour@2.1.1 --no-build',
    #   tour-state on/off is saved in workspace-file in ~/.jupyter/lab/workspaces/

    # respect the version lookup table at https://github.com/matplotlib/ipympl 
    'source %(builddir)s/env.sh && jupyter labextension install jupyter-matplotlib@0.7.4 --no-build',

    'source %(builddir)s/env.sh && jupyter labextension install jupyter-leaflet@0.13.3 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jupyter-threejs@2.2.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jupyter-vuetify@1.6.1 --no-build',

    'source %(builddir)s/env.sh && jupyter labextension install nbdime-jupyterlab@2.0.1 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install dask-labextension@3.0.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install ipyvolume@0.6.0-alpha.5 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install plotlywidget@4.14.3 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install bqplot@0.5.22 --no-build',

    'source %(builddir)s/env.sh && jupyter labextension install dicom-upload@0.2.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install jsfileupload@0.2.0 --no-build',

    # 'source %(builddir)s/env.sh && jupyter labextension install @jupyterlab/hdf5@0.5.1 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install @ijmbarr/jupyterlab_spellchecker@0.2.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install @pyviz/jupyterlab_pyviz@1.0.4 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install @bokeh/jupyter_bokeh@2.0.4 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install @jupyter-voila/jupyterlab-preview@1.1.0 --no-build',

    'source %(builddir)s/env.sh && jupyter labextension install @parente/jupyterlab-quickopen@0.5.0 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install @ryantam626/jupyterlab_code_formatter@1.3.8 --no-build',
    ('source %(builddir)s/env.sh && '
     '    jupyter labextension install @krassowski/jupyterlab_go_to_definition@1.0.0 --no-build'),
    'source %(builddir)s/env.sh && jupyter labextension install @krassowski/jupyterlab-lsp@2.1.3 --no-build',

    'source %(builddir)s/env.sh && jupyter labextension install pvlink@0.3.1 --no-build',
    'source %(builddir)s/env.sh && jupyter labextension install itkwidgets@0.32.0 --no-build',

    #  build JupyterLab app directory for all previous installed extensions in one go
    'source %(builddir)s/env.sh && jupyter lab build --dev-build=False',  # --minimize=False

    #  jupyterlab server extensions
    'source %(builddir)s/env.sh && jupyter serverextension enable jupyter_server_proxy --py',
    'source %(builddir)s/env.sh && jupyter serverextension enable jupyterlab_code_formatter --py',
    # 'source %(builddir)s/env.sh && jupyter serverextension enable jupyterlab_sql --py',
    # 'source %(builddir)s/env.sh && jupyter serverextension enable jupyterlab_iframe --py',
    'source %(builddir)s/env.sh && jupyter serverextension enable jupyterlab_git --py',
    'source %(builddir)s/env.sh && jupyter serverextension enable jupyter_lsp --py',
    'source %(builddir)s/env.sh && jupyter serverextension enable dask_labextension --py',

    #  configure jupyterlab extensions

    #  Send2Trash
    #  disable
    (
        '{ cat >> %(installdir)s/etc/jupyter/jupyter_notebook_config.py; } << \'EOF\'\n'
        'c.FileContentsManager.delete_to_trash = False\n'
        'EOF'
    ),

    #  GitLab-extension
    #  for security reasons access-token must be set in the server extension:
    (
        '{ cat >> %(installdir)s/etc/jupyter/jupyter_notebook_config.py; } << \'EOF\'\n'
        '# no username+password needed, if repo is public or we have the token for a specific URL\n'
        '# c.GitLabConfig.access_token = "<API-TOKEN>"\n'
        '# c.GitLabConfig.allow_client_side_access_token = False\n'
        'c.GitLabConfig.url = "https://gitlab.version.fz-juelich.de"\n'
        'c.GitLabConfig.validate_cert = True\n'
        'EOF'
    ),

    #  GitHub-extension
    #  for security reasons access-token must be set in the server extension:
    (
        '{ cat >> %(installdir)s/etc/jupyter/jupyter_notebook_config.py; } << \'EOF\'\n'
        '# no username+password needed, if repo is public or we have the token for a specific URL\n'
        '# c.GitHubConfig.access_token = "<API-TOKEN>"\n'
        '# c.GitHubConfig.allow_client_side_access_token = False\n'
        'c.GitHubConfig.url = "https://github.com"\n'
        'c.GitHubConfig.validate_cert = True\n'
        'EOF'
    ),

    #  iframe-extension
    (
        '{ cat >> %(installdir)s/etc/jupyter/jupyter_notebook_config.py; } << \'EOF\'\n'
        '# c.JupyterLabIFrame.iframes = [\'list\', \'of\', \'sites\']\n'
        'c.JupyterLabIFrame.welcome = "http://www.fz-juelich.de/jsc"\n'
        'EOF'
    ),

    #  define .ipynb_checkpoints permissions
    (
        '{ cat >> %(installdir)s/etc/jupyter/jupyter_notebook_config.py; } << \'EOF\'\n'
        'c.FileCheckpoints.checkpoint_permissions = 0o664\n'
        'c.FileCheckpoints.restore_permissions = 0o644\n'
        'c.FileCheckpoints.checkpoint_dir_umask = 0o002\n'
        'EOF'
    ),

    #  modify the installation files, which would be overwritten if done before (must be last commands to run)
    (
        'cp %(builddir)s/jupyterlabgitlab/jupyterlab-gitlab-2.0.0/schema/drive.json'
        '   %(installdir)s/share/jupyter/lab/schemas/jupyterlab-gitlab/drive.json'
    ),

    #  Add the overrides file
    (
        '{ cat > %(builddir)s/file_jupyter-overrides_jsc.patch; } << \'EOF\'\n'
        'diff -Naur share.orig/jupyter/lab/settings/overrides.json share/jupyter/lab/settings/overrides.json\n'
        '--- share.orig/jupyter/lab/settings/overrides.json      1970-01-01 01:00:00.000000000 +0100\n'
        '+++ share/jupyter/lab/settings/overrides.json   2019-11-26 13:40:46.560731000 +0100\n'
        '@@ -0,0 +1,8 @@\n'
        '+{\n'
        '+    "jupyterlab-gitlab:drive": {\n'
        '+        "baseUrl": "https://gitlab.version.fz-juelich.de"\n'
        '+    },\n'
        '+    "@parente/jupyterlab-quickopen:plugin": {\n'
        '+        "relativeSearch": true\n'
        '+    }\n'
        '+}\n'
        'EOF'
    ),
    'patch -p0 -d %(installdir)s < %(builddir)s/file_jupyter-overrides_jsc.patch',

    # add webpage, which leads back to https://jupyter-jsc.fz-juelich.de
    'cp %%(builddir)s/jupyterlab/jupyterlab-%s/401.html %%(installdir)s/share/jupyter/lab/static/' % local_jlab_version,

    #  ###################################################
    #  IMPORTANT:
    #  start JupyterLab once (for 60 seconds) to allow some cleanup at first start
    #  ###################################################
    (
        'source %(builddir)s/env.sh && '
        '{(jupyter lab --no-browser) & } && JLAB_PID=$! && '
        'sleep 60 && '
        'jupyter notebook list --json | grep $JLAB_PID | '
        'awk \'{for(i=1;i<=NF;i++)if($i=="\\"port\\":")print $(i+1)}\' | sed \'s/,*$//g\' | '
        'xargs -i jupyter notebook stop {}'
    ),

    #  Ensure Jupyter does not want to build anything on startup
    #  The build_config.json file is used to track the local directories that have been installed
    #  using jupyter labextension install <directory>, as well as core extensions that have been explicitly uninstalled.
    # 'if [ -e %(installdir)s/share/jupyter/lab/settings/build_config.json ]; then exit 1; fi ',
    (
        '{ cat > %(installdir)s/share/jupyter/lab/settings/build_config.json; } << \'EOF\'\n'
        '{\n'
        '    "local_extensions": {}\n'
        '}\n'
        'EOF'
    ),

    #  Ensure we remove the virtuel environment to avoid wrong search path for python packages
    'rm -f %(installdir)s/pyvenv.cfg',
    'rm -f %(installdir)s/bin/python',
    'rm -f %(installdir)s/bin/python3',
    'rm -f %(installdir)s/bin/activate',
    'rm -f %(installdir)s/bin/activate*',
    'rm -f %(installdir)s/bin/easy_install*',
    'rm -f %(installdir)s/bin/pip*',

    #  Compile Python files to byte-code to speedup execution
    #  ERROR: returns with exit code 1, because some files cannot be compiled for different reasons
    #  ###################################################
    #   Disable possible, because sanity check will    #
    #   force the compile of all python packages anyway#
    #  ###################################################
    #  'source %(builddir)s/env.sh && python -m compileall %(installdir)s',

    #  ###################################################
    #   IMPORTANT: must be done manual after eb-install: #
    #  ###################################################
    #  'chmod -R g-w %(installdir)s ',          # software-group must not modify the installation on accident
    #  'chmod -R ugo-w %(installdir)s/share ', # Noone should add files/configs to the global share after install
    #  'chmod -R ug-w ...../2020/software/Python/3.8.5-GCCcore-9.3.0/share ',  # Python module, too
]

#  specify that Bundle easyblock should run a full sanity check, rather than just trying to load the module
#  full_sanity_check = True # would result in sanity-errors about yaml,ipython_genutils,IPython,traitlets
sanity_check_paths = {
    'files': [],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

moduleclass = 'tools'
