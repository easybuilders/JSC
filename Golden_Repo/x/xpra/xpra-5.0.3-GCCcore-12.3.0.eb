# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Bundle'

name = 'xpra'
version = '5.0.3'
local_xprahtml5_version = '9.1'

homepage = "http://www.xpra.org"
description = """Xpra is an open-source multi-platform persistent remote display server and client
for forwarding applications and desktop screens.
"""

toolchain = {'name': 'GCCcore', 'version': '12.3.0'}
toolchainopts = {'pic': True}

builddependencies = [
    ('binutils', '2.40'),
    ('pkgconf', '1.9.5'),
    ('poetry', '1.5.1'),
    ('uglifyjs', '3.17.4'),
    ('CMake', '3.26.3'),
    ('Meson', '1.1.1'),
    ('scikit-build', '0.17.6'),  # for patchelf
]

dependencies = [
    ('Python', '3.11.3'),
    ('X11', '20230603'),
    ('OpenGL', '2023a'),
    ('SciPy-bundle', '2023.07', '', ('gcccoreflexiblas', '12.3.0-3.3.1')),
    ('PyCairo', '1.25.1'),
    ('PyGObject', '3.46.0'),
    ('GTK3', '3.24.35'),
    ('rencode', '1.0.6'),
    ('lz4', '1.9.4'),
    ('x264', '20230226'),
    ('x265', '3.5'),
    ('libvpx', '1.13.0'),
    ('FFmpeg', '6.0'),
    ('GStreamer', '1.22.6'),
    ('libwebp', '1.3.1'),
    ('libpng', '1.6.39'),
    ('libspng', '0.7.4'),
    ('libjpeg-turbo', '2.1.5.1'),
    ('zlib', '1.2.13'),
    ('LibTIFF', '4.5.0'),
    ('nvidia-Video_Codec_SDK', '12.1.14', '', SYSTEM),
    ('freetype', '2.13.0'),
    ('libyuv', '20210428'),
    ('DBus', '1.15.4'),
    ('Xvfb', '21.1.8'),
    ('CUDA', '12', '', SYSTEM),
    ('PyCUDA', '2022.2.2', '', ('gcccoreflexiblas', '12.3.0-3.3.1')),
    ('Brotli', '1.0.9'),
]

prebuildopts = 'export CFLAGS="-Wno-error=unused-function" && '

# this is a bundle of Python packages
exts_defaultclass = 'PythonPackage'
exts_default_options = {
    'use_pip': True,
    'source_urls': [PYPI_SOURCE],
    'sanity_pip_check':  True,
    'use_pip_for_deps': False,
    'download_dep_fail': True,
}

exts_list = [
    ('setuptools-scm', '8.0.4', {
        'checksums': ['b5f43ff6800669595193fd09891564ee9d1d7dcb196cab4b2506d53a2e1c95c7'],
    }),
    ('pyinotify', '0.9.6', {
        'checksums': ['9c998a5d7606ca835065cdabc013ae6c66eb9ea76a00a1e3bc6e0cfe2b4f71f4'],
    }),
    ('pyproject-metadata', '0.7.1', {
        'checksums': ['0a94f18b108b9b21f3a26a3d541f056c34edcb17dc872a144a15618fed7aef67'],
    }),
    ('meson', '1.3.0', {
        'modulename': False,
        'checksums': ['4ba253ef60e454e23234696119cbafa082a0aead0bd3bbf6991295054795f5dc'],
    }),
    ('meson_python', '0.15.0', {
        'modulename': 'mesonpy',
        'checksums': ['fddb73eecd49e89c1c41c87937cd89c2d0b65a1c63ba28238681d4bd9484d26f'],
    }),
    ('patchelf', '0.17.2.1', {
        'modulename': False,
        'checksums': ['a6eb0dd452ce4127d0d5e1eb26515e39186fa609364274bc1b0b77539cfa7031'],
    }),
    ('dbus-python', '1.3.2', {
        'modulename': 'dbus',
        'checksums': ['ad67819308618b5069537be237f8e68ca1c7fcc95ee4a121fe6845b1418248f8'],
    }),
    ('pyxdg', '0.28', {
        'modulename': 'xdg',
        'checksums': ['3267bb3074e934df202af2ee0868575484108581e6f3cb006af1da35395e88b4'],
    }),
    # kernel module for uinput not loaded on hpc systems
    # ('python-uinput', '0.11.2', {
    #     'modulename': 'uinput',
    #     'checksums': ['99392b676c77b5795b86b7d75274db33fe754fd1e06fb3d58b167c797dc47f0c'],
    # }),
    ('ifaddr', '0.2.0', {
        'checksums': ['cc0cbfcaabf765d44595825fb96a99bb12c79716b73b44330ea38ee2b0c4aed4'],
    }),
    ('async-timeout', '4.0.3', {
        'checksums': ['4640d96be84d82d02ed59ea2b7105a0f7b33abe8703703cd0ab0bf87c427522f'],
    }),
    ('zeroconf', '0.127.0', {
        'checksums': ['1ec001989666be7f76630d6bb8b07fb3928d655fa79a1484674a776778c9a1b3'],
    }),
    ('Pillow', '10.1.0', {
        'modulename': 'PIL',
        'checksums': ['e6bf8de6c36ed96c86ea3b6e1d5273c53f46ef518a062464cd7ef5dd2cf92e38'],
    }),
    (name, version, {
        'modulename': False,
        'prebuildopts': ('export INCLUDE_DIRS=${EBROOTBROTLI}/include && '),
        'preinstallopts': ('export INCLUDE_DIRS=${EBROOTBROTLI}/include && '),
        'buildopts': (
            '--without-strict --without-uinput --with-Xdummy '
            '--with-nvenc --with-nvjpeg_encoder --with-enc_x264 '
        ),
        'installopts': (
            '--with-tests --without-service '
            '--without-printing --without-docs '
        ),
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/Xpra-org/%(name)s/archive/'],
        'patches': ['xpra-5.0.3-use_Xorg_on_PATH_first.patch'],
        'use_pip': False,
        'checksums': [
            'a276af27552f47205193e72f0eaad35c06613deb62c3e26e02a678c96389e6c4',
            'bb274e36a12385bd3454d40c5410a00b15d211af6c501bbafb47a4c9e0022d98',
        ],
    }),
    ('xpra-html5', local_xprahtml5_version, {
        'modulename': False,
        'skipsteps': [
            'configure',
            'build',
            'install',
        ],
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/Xpra-org/%(name)s/archive/'],
        'use_pip': False,
        'patches': [
            'xprahtml_timeout.patch',
        ],
        'checksums': [
            'd65c451a2cde6eccc045085b2e9118bb345264fb195a8ee1f5ed4022cd5698eb',
            '86e46d5fb377701e767386b372d7d238c41aa788d560d334596afb662ef897f4',
        ],
    }),
]

postinstallcmds = [
    # link to dirs in installed xpra-egg
    (
        'EGGPATH=%(installdir)s/lib/python%(pyshortver)s/site-packages'
        '/xpra-%(version)s-py%(pyshortver)s-linux-x86_64.egg/ && '
        'mkdir -p %(installdir)s/share && '
        'mv %(installdir)s/share/man %(installdir)s/share/man.bk || true && '
        'ln -s ${EGGPATH}/share/* %(installdir)s/share/ && '
        'mkdir -p %(installdir)s/etc/ && '
        'ln -s ${EGGPATH}/etc/* %(installdir)s/etc/ '
    ),
    # installing xpra-html5
    (
        'pushd %%(builddir)s/xprahtml5/xpra-html5-%s && '
        './setup.py install %%(installdir)s /share/xpra/www /etc/xpra/html5-client && '
        'popd && '
        'pushd %%(installdir)s/share/xpra/www && '
        'ln -sf ../../../etc/xpra/html5-client/default-settings.txt && '
        'popd'
    ) % (local_xprahtml5_version),
    # set specific configurations
    (
        # fix the xvfb call
        "sed -i '/^[[:space:]]* \"${XORG_CONFIG_PREFIX}/c\ "
        "   \"%(installdir)s/etc/xpra/xorg.conf\"'"
        "   %(installdir)s/etc/xpra/conf.d/55_server_x11.conf && "
        # initialize script that can modify the environment of the server
        'touch %(installdir)s/etc/xpra/server.env && '
        "sed -i 's!^source =.*!source = %(installdir)s/etc/xpra/server.env!' "
        "       %(installdir)s/etc/xpra/conf.d/60_server.conf && "
        # limit socket-dirs to /tmp
        "sed -i 's/^socket-dirs =/#&/' "
        "       %(installdir)s/etc/xpra/conf.d/10_network.conf && "
        "sed -i 's/^#socket-dirs = \/tmp/socket-dirs = \/tmp/' "
        "       %(installdir)s/etc/xpra/conf.d/10_network.conf "
    ),
    # make Xpra randomly choose a GPU for acceleration if present
    'mv %(installdir)s/bin/xpra %(installdir)s/bin/xpra.orig',
    'head -1 %(installdir)s/bin/xpra.orig > %(installdir)s/bin/xpra',
    (
        '{ cat >> %(installdir)s/bin/xpra; } << \'EOF\'\n'
        'from os import environ \n'
        'if not \'CUDA_VISIBLE_DEVICES\' in environ: \n'
        '  try: \n'
        '    from pycuda import driver \n'
        '    driver.init() \n'
        '    num_gpus = driver.Device.count() \n'
        '  except: \n'
        '    num_gpus = 0 \n'
        '\n'
        '  if num_gpus > 0: \n'
        '    from random import randint \n'
        '    active_gpuid=randint(0,num_gpus-1) \n'
        '    environ[\'CUDA_VISIBLE_DEVICES\'] = str(active_gpuid) \n'
        'EOF'
    ),
    'tail -n +2 %(installdir)s/bin/xpra.orig >> %(installdir)s/bin/xpra',
    'chmod +x %(installdir)s/bin/xpra',
]

modextravars = {
    'XPRA_SYSTEM_CONF_DIRS': '%(installdir)s/etc/xpra',
    # 'XPRA_XORG_BIN': '%(installdir)s/bin/xpra',  # fails if defined at install time. Added patch instead.
}
modextrapaths = {
    'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages'],
}

sanity_check_paths = {
    'files': ['bin/xpra'],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

moduleclass = 'vis'
