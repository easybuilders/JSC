# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Bundle'

name = 'xpra'
version = '4.3.1'

homepage = "http://www.xpra.org"
description = """Xpra is an open-source multi-platform persistent remote display server and client
for forwarding applications and desktop screens.
"""

toolchain = {'name': 'GCCcore', 'version': '11.2.0'}
toolchainopts = {'pic': True}

builddependencies = [
    ('binutils', '2.37'),
    ('pkg-config', '0.29.2'),
    ('Brotli', '1.0.9'),
    ('uglifyjs', '3.14.3'),
]

dependencies = [
    ('Python', '3.9.6'),
    ('X11', '20210802'),
    ('OpenGL', '2021b'),
    ('SciPy-Stack', '2021b', '', ('gcccoremkl', '11.2.0-2021.4.0')),
    ('PyCairo', '1.20.1'),
    ('PyGObject', '3.42.0'),
    ('Pandoc', '2.16.1', '', SYSTEM),
    ('GTK+', '3.24.23'),
    ('lz4', '1.9.3'),
    ('yuicompressor', '2.4.8'),
    ('x264', '20210613'),
    ('x265', '3.4'),
    ('libvpx', '1.11.0'),
    ('FFmpeg', '4.4.1'),
    ('libwebp', '1.2.0'),
    ('libpng', '1.6.37'),
    ('libspng', '0.7.1'),
    ('libjpeg-turbo', '2.1.1'),
    ('zlib', '1.2.11'),
    ('LibTIFF', '4.3.0'),
    ('nvidia-Video_Codec_SDK', '11.1.5', '', SYSTEM),
    ('freetype', '2.11.0'),
    ('libyuv', '20210428'),
    ('DBus', '1.13.18'),
    ('XServer', '1.20.13'),
    ('CUDA', '11.5', '', SYSTEM),
]

prebuildopts = 'export CFLAGS="-Wno-error=unused-function" && '

# this is a bundle of Python packages
exts_defaultclass = 'PythonPackage'
exts_default_options = {
    'use_pip': True,
    'source_urls': [PYPI_SOURCE],
    'sanity_pip_check':  True,
    'use_pip_for_deps': False,
    'download_dep_fail': True,
}

local_common_opts = {
    'req_py_majver': '3',
    'req_py_minver': '0'
}

exts_list = [
    ('pyinotify', '0.9.6', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '9c998a5d7606ca835065cdabc013ae6c66eb9ea76a00a1e3bc6e0cfe2b4f71f4')]),
    ])),
    ('dbus-python', '1.2.18', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '92bdd1e68b45596c833307a5ff4b217ee6929a1502f5341bae28fd120acf7260')]),
        ('modulename', 'dbus'),
    ])),
    ('pyxdg', '0.27', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '80bd93aae5ed82435f20462ea0208fb198d8eec262e831ee06ce9ddb6b91c5a5')]),
        ('modulename', 'xdg'),
    ])),
    ('python-uinput', '0.11.2', dict(list(local_common_opts.items()) + [
        ('checksums', [('sha256', '99392b676c77b5795b86b7d75274db33fe754fd1e06fb3d58b167c797dc47f0c')]),
        ('modulename', 'uinput'),
    ])),
    ('xpra', '4.3.1', dict(list(local_common_opts.items()) + [
        ('source_urls', ['https://github.com/Xpra-org/%(name)s/archive/']),
        ('source_tmpl', 'v%(version)s.tar.gz'),
        ('patches', ['xpra-4.0.4-use_Xorg_on_PATH_first.patch']),
        ('checksums', [
            ('sha256', '1b90f68cc32a0b51d8bf09c92191b5c8b70ed98f0e9455c49e8a25d141de3660'),
            ('sha256', '83053938421de4dfd4ff8cd5430414180e9f33d5c59b4f1c1428095db6b1fa71'),
        ]),
        ('use_pip', False),
        ('buildopts', '--without-strict --with-nvenc --with-nvjpeg --with-Xdummy'),
        ('installopts', '--with-tests --without-service'),
    ])),
    ('xpra-html5', '4.5.2', dict(list(local_common_opts.items()) + [
        ('source_urls', ['https://github.com/Xpra-org/%(name)s/archive/']),
        ('source_tmpl', 'v%(version)s.tar.gz'),
        ('checksums', [('sha256', '7f4ccea864fdfb8d6c71a77100fcb2ad07af0773eaafc528ec19ff8187d9bfdb')]),
        ('use_pip', False),
        ('skipsteps', ['configure', 'build', 'install']),  # install in postinstallcmds
        ('modulename', 'xpra'),
    ])),
]

postinstallcmds = [
    (
        # installing xpra-html5
        'pushd %(builddir)s/xprahtml5/xpra-html5-4.5.2 && '
        './setup.py install %(installdir)s/share/xpra/www && '
        'popd'
    ),
    # make Xpra randomly choose a GPU for acceleration if present
    'mv %(installdir)s/bin/xpra %(installdir)s/bin/xpra.orig',
    'head -1 %(installdir)s/bin/xpra.orig > %(installdir)s/bin/xpra',
    (
        '{ cat >> %(installdir)s/bin/xpra; } << \'EOF\'\n'
        'from os import environ \n'
        'if not \'CUDA_VISIBLE_DEVICES\' in environ: \n'
        '  try: \n'
        '    from pycuda import driver \n'
        '    driver.init() \n'
        '    num_gpus = driver.Device.count() \n'
        '  except: \n'
        '    num_gpus = 0 \n'
        '\n'
        '  if num_gpus > 0: \n'
        '    from random import randint \n'
        '    active_gpuid=randint(0,num_gpus-1) \n'
        '    environ[\'CUDA_VISIBLE_DEVICES\'] = str(active_gpuid) \n'
        'EOF'
    ),
    'tail -n +2 %(installdir)s/bin/xpra.orig >> %(installdir)s/bin/xpra',
]

modextrapaths = {
    'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages'],
}

sanity_check_paths = {
    'files': ['bin/xpra'],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

moduleclass = 'vis'
