# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Bundle'

name = 'JupyterKernel-Cling'
version = '0.9'
local_jupyterver = '2020.2.6'
versionsuffix = '-' + local_jupyterver

local_pysuffix = '-Python-%(pyver)s'

homepage = 'https://github.com/root-project/cling'
description = """
Native C kernel for Jupyter.
Project Jupyter exists to develop open-source software, open-standards, and services
for interactive computing across dozens of programming languages.
"""


toolchain = {'name': 'gcccoremkl', 'version': '9.3.0-2020.2.254'}
toolchainopts = {'pic': True}

builddependencies = [
    ('binutils', '2.34'),
]

dependencies = [
    ('Python', '3.8.5'),
    ('Jupyter', local_jupyterver, local_pysuffix),
    ('Cling', version),
]

local_jupyter_path = 'share/jupyter'

modextrapaths = {
    'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages'],
    'JUPYTER_PATH': ['share/jupyter'],  # add search path for kernelspecs
}

# Ensure that the user-specific $HOME/.local/share/jupyter is always first entry in JUPYTHER_PATH
modluafooter = """
prepend_path("JUPYTER_PATH", pathJoin(os.getenv("HOME"), ".local/share/jupyter"))
"""

postinstallcmds = [
    # Create virtual environment to ensure we install in the correct directory !!!
    'python3 -m venv %(installdir)s --system-site-packages',
    (
        '{ cat > %%(builddir)s/env.sh; } << \'EOF\'\n'
        '#!/bin/bash\n'
        'source %%(installdir)s/bin/activate\n'
        'export PYTHONPATH=%%(installdir)s/lib/python%%(pyshortver)s/site-packages:${PYTHONPATH}\n'
        'export JUPYTER_DATA_DIR=%%(installdir)s/%s\n'
        'EOF'
    ) % (local_jupyter_path),

    # Jupyter Kernel: Cling (C++)
    (
        'source %(builddir)s/env.sh && '
        '    pip3 install ${EBROOTCLING}/share/cling/Jupyter/kernel && '
        '    jupyter-kernelspec install --prefix=%(installdir)s ${EBROOTCLING}/share/cling/Jupyter/kernel/cling-cpp17'
    ),

    # correct shebang to correct python binary
    (
        'source %(builddir)s/env.sh && '
        '    abs2python="#! ${EBROOTPYTHON}/bin/python" && '
        '    sed "1s@^.*@$abs2python@g" -i %(installdir)s/bin/jupyter-cling-kernel'
    ),
    'source %(builddir)s/env.sh && chmod -R o+x %(installdir)s/share',

    # Ensure we remove the virtuel environment to avoid wrong search path for python packages
    'rm %(installdir)s/pyvenv.cfg',
    'rm %(installdir)s/bin/python',
    'rm %(installdir)s/bin/python3',
    'rm %(installdir)s/bin/activate',
    'rm %(installdir)s/bin/activate*',
    'rm %(installdir)s/bin/easy_install*',
    'rm %(installdir)s/bin/pip*',
]

# specify that Bundle easyblock should run a full sanity check, rather than just trying to load the module
# full_sanity_check = True
sanity_check_paths = {
    'files': [
        'share/jupyter/kernels/cling-cpp17/kernel.json',
    ],
    'dirs': [
        # 'lib/python%(pyshortver)s/site-packages',
        'share/jupyter/kernels/cling-cpp17/',
    ],
}

moduleclass = 'tools'
