# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Bundle'

name = 'JupyterKernel-R'
version = '4.1.2'
local_jupyterver = '2022.3.3'
versionsuffix = '-' + local_jupyterver

homepage = 'https://github.com/IRkernel/IRkernel'
description = """
Native R kernel for Jupyter.
Project Jupyter exists to develop open-source software, open-standards, and services
for interactive computing across dozens of programming languages.
"""

toolchain = {'name': 'gcccoremkl', 'version': '11.2.0-2021.4.0'}
toolchainopts = {'pic': True}

builddependencies = [
    ('binutils', '2.37'),
    ('R', version),
    ('IRkernel', '1.3', '-R-%(version)s'),
]

dependencies = [
    ('Python', '3.9.6'),
    ('Jupyter', local_jupyterver),
]

local_kernel_dir = 'ir40'
local_kernel_name = 'R-%s' % version

modextrapaths = {
    'JUPYTER_PATH': ['share/jupyter'],  # add search path for kernelspecs
}

# Ensure that the user-specific $HOME/.local/share/jupyter is first entry in JUPYTHER_PATH
modluafooter = """
prepend_path("JUPYTER_PATH", pathJoin(os.getenv("HOME"), ".local/share/jupyter"))
"""

postinstallcmds = [
    # create kernel skeleton
    (
        'module purge && '
        'module use $OTHERSTAGES && '
        'module load Stages/${STAGE} && '
        'module load GCCcore/.11.2.0 && '
        'module load Jupyter/%s && '
        'module load R/%s && '
        'module load IRkernel/1.3-R-%s && '
        'R -e \'IRkernel::installspec(name="%s", displayname="%s", prefix="%%(installdir)s")\' && '
        # force options(bitmapType='cairo') -> https://github.com/IRkernel/IRkernel/issues/388
        'sed -i "s#IRkernel::main()#options(bitmapType=\'cairo\') ; IRkernel::main()#g" '
        '       %%(installdir)s/share/jupyter/kernels/%s/kernel.json'
    ) % (local_jupyterver, version, version,
         local_kernel_dir, local_kernel_name, local_kernel_dir),

    # write kernel.sh
    (
        '{ cat > %%(installdir)s/share/jupyter/kernels/%s/kernel.sh; } << EOF \n'
        '#!/bin/bash \n'
        '\n'
        '# Load required modules \n'
        'module purge \n'
        'module use \$OTHERSTAGES \n'
        'module load Stages/\${STAGE} \n'
        'module load GCCcore/.11.2.0 \n'
        'module load R/%s \n'
        'module load IRkernel/1.3-R-%s \n'
        '\n'
        'exec \${EBROOTR}/lib64/R/bin/R "\$@"\n'
        '\n'
        'EOF'
    ) % (local_kernel_dir, version, version),
    'chmod +x %%(installdir)s/share/jupyter/kernels/%s/kernel.sh' % local_kernel_dir,

    # write kernel.json
    (
        'cp %%(installdir)s/share/jupyter/kernels/%s/kernel.json '
        '   %%(installdir)s/share/jupyter/kernels/%s/kernel.json.orig && '
        '{ cat > %%(installdir)s/share/jupyter/kernels/%s/kernel.json; } << \'EOF\'\n'
        '{ \n'
        '  "argv": [ \n'
        '    "%%(installdir)s/share/jupyter/kernels/%s/kernel.sh", \n'
        '    "--slave", \n'
        '    "-e", \n'
        '    "options(bitmapType=\'cairo\') ; IRkernel::main()", \n'
        '    "--args", \n'
        '    "{connection_file}" \n'
        '  ], \n'
        '  "display_name": "%s", \n'
        '  "language": "R", \n'
        '  "name": "%s" \n'
        '}\n'
        'EOF'
    ) % (local_kernel_dir, local_kernel_dir, local_kernel_dir, local_kernel_dir,
         local_kernel_name, local_kernel_dir),
]

# specify that Bundle easyblock should run a full sanity check, rather than just trying to load the module
# full_sanity_check = True
sanity_check_paths = {
    'files': [
        'share/jupyter/kernels/%s/kernel.sh' % local_kernel_dir,
        'share/jupyter/kernels/%s/kernel.json' % local_kernel_dir,
    ],
    'dirs': [
        'share/jupyter/kernels/',
    ],
}

moduleclass = 'tools'
