# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Bundle'

name = 'Vulkan-SDK'
version = '1.3.280'

homepage = 'https://vulkan.lunarg.com/sdk'
description = """
The Vulkan SDK enables Vulkan developers to develop Vulkan applications.
(not included: Vulkan Caps Viewer and Microsoft DirectX Shader Compiler)
"""

toolchain = {'name': 'GCCcore', 'version': '12.3.0'}
toolchainopts = {'pic': True}

builddependencies = [
    ('binutils', '2.40'),
    ('CMake', '3.26.3'),
    ('Python', '3.11.3'),
    ('pkgconf', '1.9.5'),
]

dependencies = [
    ('X11', '20230603'),
    ('JsonCpp', '1.9.5'),
    ('lz4', '1.9.4'),
]

default_easyblock = 'CMakeMake'

components = [
    # Khronos Vulkan-Headers
    ('Vulkan-Headers', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/Vulkan-Headers/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['14caa991988be6451755ad1c81df112f4b6f2bea05f0cf2888a52d4d0f0910f6'],
        'start_dir': '%(name)s-%(version)s',
    }),
    # Khronos Vulkan-Loader
    ('Vulkan-Loader', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/Vulkan-Loader/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['f9317667a180257381dcbc74726083af581189f51e10e0246adaa86df075fe16'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DUPDATE_DEPS=OFF '
            '-DVULKAN_HEADERS_INSTALL_DIR=%(installdir)s '
            '-DBUILD_WSI_WAYLAND_SUPPORT=OFF '
            '-DBUILD_WSI_DIRECTFB_SUPPORT=OFF '
            '-DBUILD_WSI_XLIB_SUPPORT=ON '
            '-DBUILD_WSI_XCB_SUPPORT=ON '
            # https://github.com/KhronosGroup/Vulkan-Loader/blob/master/BUILD.md#build-options
            # '-DFALLBACK_CONFIG_DIRS=%(installdir)s/etc '  # default: $XDG_CONFIG_DIRS, /etc/xdg
            # '-DFALLBACK_DATA_DIRS=%(installdir)s/local '  # default: $XDG_DATA_DIRS, /usr/local/share:/usr/share 
            # for the ICD files we fix the search path to $VK_ICD_FILENAMES later on
        ),
    }),
    # Khronos Vulkan-Utility-Libraries
    ('Vulkan-Utility-Libraries', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/Vulkan-Utility-Libraries/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['075e13f2fdeeca3bb6fb39155c8cc345cf216ab93661549b1a33368aa28a9dea'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DUPDATE_DEPS=OFF '
            '-DVULKAN_HEADERS_INSTALL_DIR=%(installdir)s '
        ),
    }),
    # Khronos SPIRV-Headers
    ('SPIRV-Headers', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/SPIRV-Headers/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['a00906b6bddaac1e37192eff2704582f82ce2d971f1aacee4d51d9db33b0f772'],
        'start_dir': '%(name)s-%(version)s',
    }),
    # Khronos SPIRV-Tools
    ('SPIRV-Tools', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/SPIRV-Tools/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['703c772a850fa7fbe57a2f8dc99b4c1422a59fa5ff098a80c8ce12fcdf6a2613'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DSPIRV-Headers_SOURCE_DIR=%(installdir)s '
        ),
    }),
    # Kronos Vulkan-ValidationLayers
    ('robin-hood-hashing', '3.11.5', {
        'source_urls': ['https://github.com/martinus/robin-hood-hashing/archive/refs/tags/'],
        'sources': ['%(version)s.tar.gz'],
        'checksums': ['3693e44dda569e9a8b87ce8263f7477b23af448a3c3600c8ab9004fe79c20ad0'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DRH_STANDALONE_PROJECT=OFF '
        ),
    }),
    ('Vulkan-ValidationLayers', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/Vulkan-ValidationLayers/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['266a20822397d02422f77183ec383278fee2e679ca44aeb916638c5409ddcebf'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DUPDATE_DEPS=OFF '  # Vulkan headers, SPIRV-Headers, SPIRV-Tools, robin-hood-hashing
            '-DVULKAN_HEADERS_INSTALL_DIR=%(installdir)s '
            '-DBUILD_WSI_WAYLAND_SUPPORT=OFF '
            '-DBUILD_WSI_XLIB_SUPPORT=ON '
            '-DBUILD_WSI_XCB_SUPPORT=ON '
            '-DROBIN_HOOD_HASHING_INSTALL_DIR=%(installdir)s/lib64/cmake/robin_hood/ '
        ),
    }),
    # Volk Vulkan Meta Loader
    ('volk', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/zeux/volk/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['af9c98d09284eef29f6826bb1620bfe551a91a864fce707416b83c255efe3c25'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DVOLK_INSTALL=ON '
            '-DVULKAN_HEADERS_INSTALL_DIR=%(installdir)s '
        ),
    }),
    # Khronos Vulkan-Tools
    ('Vulkan-Tools', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/Vulkan-Tools/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['19af20602fb6aa2a9a979eb2b653362d1b009c9e9c804a496071ec4d78cd5ede'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DUPDATE_DEPS=OFF '
            '-DVULKAN_HEADERS_INSTALL_DIR=%(installdir)s '
            '-DBUILD_WSI_WAYLAND_SUPPORT=OFF '
            '-DBUILD_WSI_XLIB_SUPPORT=ON '
            '-DBUILD_WSI_XCB_SUPPORT=ON '
        ),
    }),
    # Khronos glslang
    ('glslang', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/glslang/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['f0be47a0548aadfbf0bbf38d00166b6d935dcd4a84dd206e7a7d49a9adafe1dc'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DALLOW_EXTERNAL_SPIRV_TOOLS=ON '
        ),
    }),
    # Khronos SPIRV-Cross
    ('SPIRV-Cross', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/SPIRV-Cross/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['eb11e1b3715b2211442b7e5933a1135885b664cc10530a1a022355fe9e1bb4ac'],
        'start_dir': '%(name)s-%(version)s',
    }),
    # Khronos SPIRV-Reflect
    ('SPIRV-Reflect', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/SPIRV-Reflect/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['23934b12e528096d678a318f6590a48f5e0e97d4a89d8146b4fddf48f4ff689a'],
        'start_dir': '%(name)s-%(version)s',
    }),
    # Khronos Vulkan Extension Layer
    ('Vulkan-ExtensionLayer', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/Vulkan-ExtensionLayer/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['bb1eefa43e4b810b3e86823305c28f706bb998f3350830a64113db1cd15b74bc'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DUPDATE_DEPS=OFF '
        ),
    }),

    ('valijson', '1.0.2', {
        'source_urls': ['https://github.com/tristanpenman/valijson/archive/refs/tags/'],
        'sources': ['v%(version)s.tar.gz'],
        'checksums': ['35d86e54fc727f1265226434dc996e33000a570f833537a25c8b702b0b824431'],
        'start_dir': '%(name)s-%(version)s',
    }),
    # Khronos Vulkan Profiles
    ('Vulkan-Profiles', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/KhronosGroup/Vulkan-Profiles/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['7cd2bc95f0ba98419fb49851cea661e942c550ee6ef255201ca88545507f20ba'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DUPDATE_DEPS=OFF '
            '-DVULKAN_HEADERS_INSTALL_DIR=%(installdir)s '
        ),
    }),

    # Google Shaderc
    ('shaderc', '2024.0', {
        'source_urls': ['https://github.com/google/shaderc/archive/refs/tags/'],
        'sources': [{
            'download_filename': 'v%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['c761044e4e204be8e0b9a2d7494f08671ca35b92c4c791c7049594ca7514197f'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DSHADERC_SKIP_TESTS=ON '
            '-DSHADERC_GLSLANG_DIR=%(builddir)s/glslang-vulkan-sdk-1.3.280.0 '
            '-DSHADERC_SPIRV_HEADERS_DIR=%(builddir)s/SPIRV-Headers-vulkan-sdk-1.3.280.0 '
            '-DSHADERC_SPIRV_TOOLS_DIR=%(builddir)s/SPIRV-Tools-vulkan-sdk-1.3.280.0 '
        ),
    }),
    # LunarG Vulkan Tools
    ('VulkanTools', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/LunarG/VulkanTools/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['7ae8e0899cf5ba8cba35f94d3f9136d8c0e4907130270bf62746c0bc361c8afa'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DUPDATE_DEPS=OFF '
            '-DVULKAN_HEADERS_INSTALL_DIR=%(installdir)s '
        ),
    }),
    # LunarG GFXReconstruct
    ('gfxreconstruct', 'vulkan-sdk-1.3.280.0', {
        'source_urls': ['https://github.com/LunarG/gfxreconstruct/archive/refs/tags/'],
        'sources': [{
            'download_filename': '%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['4bcfa6c13f69b19daf961d73f452b59bbbbda6e7066ae9eb050f8d961d40201b'],
        'start_dir': '%(name)s-%(version)s',
        'configopts': (
            '-DVULKAN_HEADER=%(installdir)s/include/vulkan/vulkan_core.h '
            '-DBUILD_WSI_DISPLAY_SUPPORT=OFF '
            '-DBUILD_WSI_WAYLAND_SUPPORT=OFF '
            '-DBUILD_WSI_XLIB_SUPPORT=ON '
            '-DBUILD_WSI_XCB_SUPPORT=ON '
        ),
    }),
    # Vulkan Memory Allocator Library
    ('VulkanMemoryAllocator', '3.0.1', {
        'source_urls': ['https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator/archive/refs/tags/'],
        'sources': [{
            'download_filename': 'v%(version)s.tar.gz',
            'filename': '%(namelower)s-%(version)s.tar.gz'
        }],
        'checksums': ['2a84762b2d10bf540b9dc1802a198aca8ad1f3d795a4ae144212c595696a360c'],
        'start_dir': '%(name)s-%(version)s',
    }),
]

# https://github.com/KhronosGroup/Vulkan-Loader/blob/master/docs/LoaderInterfaceArchitecture.md
# https://github.com/KhronosGroup/Vulkan-Loader/blob/master/docs/LoaderDriverInterface.md#driver-discovery-on-linux
# modluafooter = """
#  prepend_path("VK_ICD_FILENAMES",
#     pathJoin(os.getenv("EBROOTNVIDIAMINDRIVER"), "share/vulkan/icd.d/nvidia_icd.x86_64.json"))
# -- prepend_path("VK_ICD_FILENAMES",
# --     pathJoin(os.getenv("EBROOTMESADOTVULKAN"), "share/vulkan/icd.d/lvp_icd.x86_64.json"))
# """

sanity_check_paths = {
    'files': [
        'include/vulkan/vulkan.h',
        'lib/libvulkan.%s' % SHLIB_EXT,
        'bin/vulkaninfo',
    ],
    'dirs': [
        'include/vulkan',
        'lib/pkgconfig'
    ],
}

moduleclass = 'vis'
