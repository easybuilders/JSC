# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
name = 'PyTorch'
version = '1.11'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://pytorch.org/'
description = """Tensors and Dynamic neural networks in Python with strong GPU acceleration.
PyTorch is a deep learning framework that puts Python first."""

toolchain = {'name': 'gcccoremkl', 'version': '11.2.0-2021.4.0'}
toolchainopts = {'openmp': True}
# toolchainopts = {'cstd': 'c++11'}

sources = [{
    'filename': '%(name)s-%(version)s.tar.gz',
    'git_config': {
        'url': 'https://github.com/pytorch',
        'repo_name': 'pytorch',
        'tag': 'v1.11.0',
        'recursive': True,
    },
}]
patches = [
    'PyTorch-1.7.0_avoid-nan-in-test-torch.patch',
    'PyTorch-1.7.0_disable-dev-shm-test.patch',
    # 'PyTorch-1.7.1_correctly-pass-jit_opt_level.patch',
    'PyTorch-1.8.1_dont-use-gpu-ccc-in-test.patch',
    # 'PyTorch-1.8.1_increase-distributed-test-timeout.patch',
    'PyTorch-1.9.0_limit-world-size-for-zero-redundancy-opt-test.patch',
    'PyTorch-1.10.0_fix-test-dataloader-fixed-affinity.patch',
    # 'PyTorch-1.10.0_fix-alias-violation-in-bitwise-ops.patch',
    # 'PyTorch-1.10.0_fix-faulty-asserts-and-skip-test.patch',
    # 'PyTorch-1.10.0_fix-test-cond-cpu.patch',
    # 'PyTorch-1.10.0_fix-vnni-detection.patch',
    # 'PyTorch-1.10.0_increase_zero_optimizer_test_tolerance.patch',
    # 'PyTorch-1.10.0_skip_failing_ops_tests.patch',
    # 'PyTorch-1.10.0_skip_nan_tests_openblas.patch',
    'PyTorch-1.10.0_skip_cmake_rpath.patch',
    'PyTorch-1.11.0_fix_sharded_imports.patch',
    # 'PyTorch-1.10.0_fix-gcc11-ideep.patch',
    # 'PyTorch-1.10.0_fix_gcc11_nullpointer.patch',
    # 'cub-lint.yaml.patch',
    # 'cub-cub.cuh.patch',
    # ('cub-cub-definitions.patch', 1),
    # 'cub-context_gpu.patch',
    # 'cub-accuracy_op.patch',
    # 'cub-affine-channel_op.patch',
    # 'cub-arg_ops.patch',
    # 'cub-batch_moments_op.patch',
    # 'cub-batch_sparse_to_dense_op.patch',
    # 'cub-boolean_mask_ops.patch',
    # 'cub-cross_entropy.patch',
    # 'cub-distance_op.patch',
    # 'cub-elementwise_div_op.patch',
    # 'cub-elementwise_linear_op.patch',
    # 'cub-elementwise_mul_op.patch',
    # 'cub-elementwise_ops.patch',
    # 'cub-find_op.patch',
    # 'cub-generate_proposals_op.patch',
    # 'cub-normalize_ops.patch',
    # 'cub-one_hot_ops.patch',
    # 'cub-pack_segments.patch',
    # 'cub-prelu_op.patch',
    # 'cub-reduce_front_back_max_ops.patch',
    # 'cub-reduce_front_back_sum_mean_ops.patch',
    # 'cub-reduction_ops.patch',
    # 'cub-rmac_regions_op.patch',
    # 'cub-segment_reduction_op_gpu.patch',
    # 'cub-sequence_ops.patch',
    # 'cub-softmax_ops.patch',
    # 'cub-spatial_batch_norm_op_impl.patch',
    # 'cub-adagrad_fused_op_gpu.patch',
    # 'cub-adagrad_op_gpu.patch',
    # 'cub-adam_op_gpu.patch',
    # ('cub-cub_namespace.patch', 1),
    # 'cub-reduce.patch',
    # 'cub-math-gpu.patch',
    # 'cub-CMake-Dependencies.patch',
    'PyTorch-1.11.0_fix_skip_jit_cuda_fuser.patch',
    'PyTorch-1.11.0_increase-distributed-test-timeout.patch',
    'PyTorch-1.11.0_skip_failing_ops_tests.patch',
    'PyTorch-1.11.0_hostname_endpoints_mismatch.patch',
]
checksums = [
    '6630eb2a2552a833f53fc56c975f40b950ef5b82c2e53f672bb1aa29cb41799e',  # PyTorch-1.11.tar.gz
    'b899aa94d9e60f11ee75a706563312ccefa9cf432756c470caa8e623991c8f18',  # PyTorch-1.7.0_avoid-nan-in-test-torch.patch
    '622cb1eaeadc06e13128a862d9946bcc1f1edd3d02b259c56a9aecc4d5406b8a',  # PyTorch-1.7.0_disable-dev-shm-test.patch
    '89ac7a8e9e7df2e64cf8404fe3a279f5e9b759fee41c9de3aaff9c22f385c2c6',  # PyTorch-1.8.1_dont-use-gpu-ccc-in-test.patch
    # PyTorch-1.9.0_limit-world-size-for-zero-redundancy-opt-test.patch
    'ff573660913ce055e24cfd194ce747ba5685091c631cfd443eae2a99d56b57ea',
    # PyTorch-1.10.0_fix-test-dataloader-fixed-affinity.patch
    '313dca681f45ce3bc7c4557fdcdcbe0b77216d2c708fa30a2ec0e22c44876707',
    'ac05943bb205623f91ef140aa00869efc5fe844184bd666bebf5405808610448',  # PyTorch-1.10.0_skip_cmake_rpath.patch
    '2e3e2093fce314a9ee9fb73ef44477f4c2cedfcf27570f585c6917ae434311f2',  # PyTorch-1.11.0_fix_sharded_imports.patch
    '91e67cd498918baafe3fd58e0ba04b610a3561d1d97cec2c934bfd48fffd8324',  # PyTorch-1.11.0_fix_skip_jit_cuda_fuser.patch
    # PyTorch-1.11.0_increase-distributed-test-timeout.patch
    'bb9709590ea8bd329360ca345c70afb8ff028be80e112af7ee00abba58482316',
    '88a312d4752fe72171a2292d0aa5438ada42b124be113015bb4969c83c723766',  # PyTorch-1.11.0_skip_failing_ops_tests.patch
    # PyTorch-1.11.0_hostname_endpoints_mismatch.patch
    '05e94fc1af406921f020a6af908375beed2090ca864211b9f07e931c24a61975',
]

osdependencies = [OS_PKG_IBVERBS_DEV]

builddependencies = [
    ('CMake', '3.21.1'),
    ('hypothesis', '6.14.6'),
]

dependencies = [
    ('CUDA', '11.5', '', True),
    ('Ninja', '1.10.2'),  # Required for JIT compilation of C++ extensions
    ('Python', '3.9.6'),
    ('protobuf', '3.17.3'),
    ('protobuf-python', '3.17.3'),
    ('pybind11', '2.7.1'),
    ('SciPy-bundle', '2021.10'),
    ('typing-extensions', '3.10.0.0'),
    ('PyYAML', '5.4.1'),
    ('MPFR', '4.1.0'),
    ('GMP', '6.2.1'),
    ('numactl', '2.0.14', '', SYSTEM),
    ('FFmpeg', '4.4.1'),
    ('Pillow-SIMD', '9.0.1'),
    ('cuDNN', '8.3.1.22', '-CUDA-%(cudaver)s', True),
    ('magma', '2.6.1', '-CUDA-%(cudaver)s'),
    ('NCCL', '2.12.7-1', '-CUDA-%(cudaver)s'),
    ('expecttest', '0.1.3'),
]

custom_opts = ["USE_CUPTI_SO=1"]
configopts = 'MKL_THREADING_LAYER=sequential CFLAGS="$CFLAGS -fopenmp" CXXFLAGS="$CXXFLAGS -fopenmp" LDFLAGS=-fopenmp'

excluded_tests = {
    '': [
        # Bad tests: https://github.com/pytorch/pytorch/issues/60260
        'distributed/elastic/utils/distributed_test',
        'distributed/elastic/multiprocessing/api_test',
        # These tests fail on A10s at the very least, they time out forever no matter how long the timeout is.
        # Possibly related to NCCL 2.8.3: https://docs.nvidia.com/deeplearning/nccl/release-notes/rel_2-8-3.html
        # 'distributed/test_distributed_fork',
        'distributed/test_distributed_spawn',
        # Fails on A10s: https://github.com/pytorch/pytorch/issues/63079
        'test_optim',
        'test_jit',  # fails on all systems
        'test_jit_cuda_fuser',  # fails on all systems
        'test_jit_legacy',  # fails on all systems
        'test_jit_profiling',  # fails on all systems
        'test_jit_fuser_te',  # fails on booster and dc
        # 'test_xnnpack_integration',
        'distributed/_shard/sharded_optim/test_sharded_optim',  # fails on booster and dc
        'distributed/_shard/sharded_tensor/ops/test_linear',  # fails on booster and dc
        'distributed/_shard/sharded_tensor/test_megatron_prototype',  # fails on booster and dc
        'distributions/test_distributions',  # fails on all systems
        'test_cpp_extensions_jit',  # fails on al systems
        'test_ops',  # fails on booster, dc, jusuf (works on hdfml?)
        'distributed/fsdp/test_fsdp_memory',  # fails on jusuf and hdfml
        'distributed/fsdp/test_fsdp_overlap',  # fails on jusuf and hdfml

        # Those tests fail when not running from a container or without latest patches
        # 'distributed/rpc/test_tensorpipe_agent',
        # 'test_autograd',  # fails on jureca dc and deep
        # 'test_cuda',  # fails on jureca dc
        # 'test_multiprocessing',  # fails on jureca dc
        # 'test_nn',  # fails on jureca dc
        # 'test_profiler',  # fails on jureca dc
        # 'test_quantization',  # fails on jureca dc
        'distributed/_shard/sharded_tensor/test_sharded_tensor',  # fails on juwels cluster container and deep
        # 'distributed/algorithms/test_join',  # fails on deep and jureca dc
        # 'distributed/fsdp/test_fsdp_checkpoint',  # fails on deep and jureca dc
        # 'distributed/fsdp/test_fsdp_core',  # fails on deep and jureca dc
        # 'distributed/fsdp/test_fsdp_freezing_weights',  # fails on deep and jureca dc
        # 'distributed/fsdp/test_fsdp_memory',  # fails on deep
        # 'distributed/fsdp/test_fsdp_multiple_forward',  # fails on deep and jureca dc
        # 'distributed/fsdp/test_fsdp_multiple_wrapping',  # fails on deep and jureca dc
        # 'distributed/fsdp/test_fsdp_overlap',  # fails on deep
        # 'distributed/fsdp/test_fsdp_pure_fp16',  # fails on deep and jureca dc
        # 'distributed/fsdp/test_fsdp_uneven',  # fails on deep and jureca dc
        # 'distributed/fsdp/test_wrap',  # fails on deep and jureca dc
        # 'distributed/optim/test_zero_redundancy_optimizer',  # fails on deep and jureca dc
        # 'distributed/rpc/cuda/test_tensorpipe_agent',  # fails on deep
        # 'distributed/rpc/test_faulty_agent',  # fails on deep
        # 'distributed/test_c10d_gloo',  # fails on deep
        # 'test_model_dump',  # fails on deep
        # 'distributed/test_c10d_nccl',  # fails on jureca dc
        # 'distributed/test_c10d_spawn_nccl',  # fails on jureca dc
        # 'distributed/test_data_parallel',  # fails on jureca dc
    ]
}

runtest = 'cd test && PYTHONUNBUFFERED=1 %(python)s run_test.py --continue-through-error  --verbose %(excluded_tests)s'

# The readelf sanity check can be taken out once the TestRPATH test from https://github.com/pytorch/pytorch/pull/68912
# is accepted, since it is then checked as part of the PyTorch test suite
local_libcaffe2 = "$EBROOTPYTORCH/lib/python%%(pyshortver)s/site-packages/torch/lib/libcaffe2_nvrtc.%s" % SHLIB_EXT
sanity_check_commands = [
    "python -c 'import torch'",
    "readelf -d %s | egrep 'RPATH|RUNPATH' | grep -v stubs" % local_libcaffe2,
]
tests = ['PyTorch-check-cpp-extension.py']

moduleclass = 'devel'
