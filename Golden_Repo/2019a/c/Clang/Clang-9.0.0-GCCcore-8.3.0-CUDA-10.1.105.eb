# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
name = 'Clang'
version = '9.0.0'

homepage = 'http://clang.llvm.org/'
description = """C, C++, Objective-C compiler, based on LLVM.  Does not
 include C++ standard library -- use libstdc++ from GCC."""

# Clang also depends on libstdc++ during runtime, but this dependency is
# already specified as the toolchain.
toolchain = {'name': 'GCCcore', 'version': '8.3.0'}
# Do not set optarch to True: it will cause the build to fail
toolchainopts = {'optarch': False}

source_urls = ["http://llvm.org/releases/%(version)s"]
sources = [
    'llvm-%(version)s.src.tar.xz',
    'cfe-%(version)s.src.tar.xz',
    'compiler-rt-%(version)s.src.tar.xz',
    'polly-%(version)s.src.tar.xz',
    'openmp-%(version)s.src.tar.xz',
#    # Also include the LLVM linker
    'lld-%(version)s.src.tar.xz',
    'libcxx-%(version)s.src.tar.xz',
    'libcxxabi-%(version)s.src.tar.xz',
]

#checksums = [
#    '8872be1b12c61450cacc82b3d153eab02be2546ef34fa3580ed14137bb26224c',  # llvm-8.0.0.src.tar.xz
#    '084c115aab0084e63b23eee8c233abb6739c399e29966eaeccfc6e088e0b736b',  # cfe-8.0.0.src.tar.xz
#    'b435c7474f459e71b2831f1a4e3f1d21203cb9c0172e94e9d9b69f50354f21b1',  # compiler-rt-8.0.0.src.tar.xz
#    'e3f5a3d6794ef8233af302c45ceb464b74cdc369c1ac735b6b381b21e4d89df4',  # polly-8.0.0.src.tar.xz
#    'f7b1705d2f16c4fc23d6531f67d2dd6fb78a077dd346b02fed64f4b8df65c9d5',  # openmp-8.0.0.src.tar.xz
#    '9caec8ec922e32ffa130f0fb08e4c5a242d7e68ce757631e425e9eba2e1a6e37',  # lld-8.0.0.src.tar.xz
#    'c2902675e7c84324fb2c1e45489220f250ede016cc3117186785d9dc291f9de2',  # libcxx-8.0.0.src.tar.xz
#    'c2d6de9629f7c072ac20ada776374e9e3168142f20a46cdb9d6df973922b07cd',  # libcxxabi-8.0.0.src.tar.xz
#]

gccver = '8.3.0'
binutilsver = '2.32'
cudaver = '10.1.105'
versionsuffix = '-CUDA-%s' % cudaver

dependencies = [
    ('binutils', binutilsver, '', ('GCCcore', gccver)),
    ('GMP', '6.1.2'),
    ('CUDA', cudaver, '', True),
]

builddependencies = [
    ('CMake', '3.14.0'),
    ('Python', '2.7.16'),
    ('libxml2', '2.9.9'),
    ('libffi', '3.2.1'),
]

assertions = False
build_lld = True
usepolly = True
libcxx = True

skip_all_tests = True
configopts = '-DCLANG_OPENMP_NVPTX_DEFAULT_ARCH=sm_37'
configopts += ' -DLIBOMPTARGET_NVPTX_COMPUTE_CAPABILITIES=35,37'
configopts += ' -DCLANG_DEFAULT_STD_CXX=cxx14'
stage3_configopts = '-DLIBOMPTARGET_NVPTX_ENABLE_BCLIB=1'
stage3_configopts += ' -DLIBOMPTARGET_NVPTX_CUDA_COMPILER=%(builddir)s/llvm.obj.2/bin/clang'
stage3_configopts += ' -DLIBOMPTARGET_NVPTX_BC_LINKER=%(builddir)s/llvm.obj.2//bin/llvm-link'

modluafooter = '''
add_property("arch","gpu")
'''

# it should be a compiler, but then we won't be able to load GCC+MPI
moduleclass = 'devel'
