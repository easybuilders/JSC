# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
##
# This file is an EasyBuild reciPY as per https://github.com/hpcugent/easybuild
#
# Authors::  Inge Gutheil <i.gutheil@fz-juelich.de>
# $Id$
#
# This work implements the ELPA library
# http://elpa.rzg.mpg.de
##

easyblock = 'ConfigureMake'
name = 'ELPA'
version = '2016.05.003'
versionsuffix = '-hybrid'

homepage = 'http://elpa.rzg.mpg.de'

description = """Eigenvalue SoLvers for Petaflop-Applications. ELPA has been installed as module in
$EBROOTELPA It is the pure MPI installation. Several assembly kernels have been compiled. They can
be chosen at runtime when calling the library or with the environment variables REAL_ELPA_KERNEL or
COMPLEX_ELPA_KERNEL. An example is

export REAL_ELPA_KERNEL=REAL_ELPA_KERNEL_GENERIC 

which chooses the generic real kernel for elpa2. You can get an overview over the available kernels
by loading elpa and then submitting a batch job with

srun --ntasks=1 $EBROOTELPA/bin/elpa2_print_kernels

The result is written to stderr, so do not throw away stderr. Programs using this ELPA library have
to be compiled with

-I$ELPA_INCLUDE_OPENMP -I$ELPA_INCLUDE_OPENMP/elpa -I$ELPA_MODULES_OPENMP

and linked with

-L$EBROOTELPA/lib -lelpa_openmp -lmkl_scalapack_lp64 -lmkl_blacs_intelmpi_lp64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lstdc++

Examples can be found in $EBROOTELPA/share/doc/elpa/examples. 

"""

toolchain = {'name': 'gpsolf', 'version': '2016b'}
toolchainopts = {'optarch': True, 'usempi': True, 'openmp': True}

source_urls = ['http://elpa.mpcdf.mpg.de/html/Releases/%(version)s/']
sources = [SOURCELOWER_TAR_GZ]

builddependencies = [('Automake', '1.15')]

patches = [('Makefile_examples_hybrid-gcc','test/Fortran')]

configopts = [
    '--enable-openmp FCFLAGS="-fopenmp -I$EBROOTIMKL/mkl/include/intel64/lp64 $FCFLAGS" LIBS="$LIBSCALAPACK"',
#    'FCFLAGS="-I$EBROOTIMKL/mkl/include/intel64/lp64 $FCFLAGS" LIBS="$LIBSCALAPACK"'
]

buildopts = ' V=1 LIBS="$LIBSCALAPACK"'

modextravars = {
    'ELPA_ROOT': '%(installdir)s',
    'ELPAROOT': '%(installdir)s',
    #'ELPA_INCLUDE': '%(installdir)s/include/elpa-%(version)s/',
    'ELPA_INCLUDE': '%(installdir)s/include/elpa_openmp-%(version)s/',
    'ELPA_INCLUDE_OPENMP': '%(installdir)s/include/elpa_openmp-%(version)s/',
    'ELPA_LIB': '%(installdir)s/lib',
    #'ELPA_MODULES': '%(installdir)s/include/elpa-%(version)s/modules',
    'ELPA_MODULES': '%(installdir)s/include/elpa_openmp-%(version)s/modules',
    'ELPA_MODULES_OPENMP': '%(installdir)s/include/elpa_openmp-%(version)s/modules'
}

postinstallcmds = [
    "cp %(builddir)s/elpa-%(version)s/config-f90.h %(installdir)s/include/elpa_openmp-%(version)s/elpa",
    "cp %(builddir)s/elpa-%(version)s/config.h %(installdir)s/include/elpa_openmp-%(version)s/elpa",
    "cp %(builddir)s/elpa-%(version)s/.libs/libelpatest_openmp.a %(installdir)s/lib/",
    "cp %(builddir)s/elpa-%(version)s/.libs/libelpatest_openmp.la %(installdir)s/lib/",
    "cp %(builddir)s/elpa-%(version)s/.libs/libelpa_openmp_private.a %(installdir)s/lib/",
    "cp %(builddir)s/elpa-%(version)s/.libs/libelpa_openmp_public.a %(installdir)s/lib/",
    "cp %(builddir)s/elpa-%(version)s/.libs/libelpa_openmp_private.la %(installdir)s/lib/",
    "cp %(builddir)s/elpa-%(version)s/.libs/libelpa_openmp_public.la %(installdir)s/lib/",
    "cp %(builddir)s/elpa-%(version)s/test/Fortran/Makefile_examples_hybrid-gcc %(installdir)s/share/doc/elpa/examples/Makefile_examples_hybrid",
    "cp %(builddir)s/elpa-%(version)s/test/Fortran/elpa_print_headers.X90 %(installdir)s/share/doc/elpa/examples",
    "cp %(builddir)s/elpa-%(version)s/private_modules/* %(installdir)s/include/elpa_openmp-%(version)s/modules"
]

moduleclass = 'math'
