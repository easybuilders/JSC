# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'CMakeMake'

name = 'OpenCV'
version = '2.4.13'
versionsuffix = '-Python-2.7.11'

homepage = 'http://opencv.org/'
description = """OpenCV (Open Source Computer Vision Library) is an open source computer vision
 and machine learning software library. OpenCV was built to provide
 a common infrastructure for computer vision applications and to accelerate
 the use of machine perception in the commercial products."""

toolchain = {'name': 'gpsolf', 'version': '2016a'}
toolchainopts = {'openmp': True}

source_urls = ['https://github.com/Itseez/opencv/archive/']
sources = ['%(version)s.zip']

builddependencies = [
    ('CMake', '3.4.3'),
]

javaver = '1.8.0_77'
dependencies = [
    ('SciPy-Stack', '2016a', '-Python-2.7.11'),
    ('Python', '2.7.11'),
    ('zlib', '1.2.8'),
    ('FFmpeg', '3.1.2'),
    ('libjpeg-turbo', '1.4.2'),# '-NASM-2.12.01'),
    ('libpng', '1.6.21'),
    ('LibTIFF', '4.0.6'),
    ('JasPer', '1.900.1'),
    ('Java', javaver, '', True),
    ('ant', '1.9.7', '-Java-%s' % javaver, True),
    ('GLib', '2.47.5'),
    ('GTK+', '2.24.28'),
]

configopts = '-DCMAKE_BUILD_TYPE=RELEASE '
configopts += '-DWITH_OPENMP=ON '
configopts += '-DPYTHON_PACKAGES_PATH=%(installdir)s/lib/python%(pyshortver)s/site-packages '
configopts += '-DBUILD_NEW_PYTHON_SUPPORT=ON '
configopts += '-DZLIB_LIBRARY=$EBROOTZLIB/lib/libz.so '
configopts += '-DZLIB_INCLUDE_DIR=$EBROOTZLIB/include '
configopts += '-DTIFF_LIBRARY=$EBROOTLIBTIFF/lib/libtiff.so '
configopts += '-DTIFF_INCLUDE_DIR=$EBROOTLIBTIFF/include '
configopts += '-DPNG_LIBRARY=$EBROOTLIBPNG/lib/libpng.so '
configopts += '-DPNG_INCLUDE_DIR=$EBROOTLIBPNG/include '
configopts += '-DJPEG_LIBRARY=$EBROOTLIBJPEGMINTURBO/lib/libjpeg.so '
configopts += '-DJPEG_INCLUDE_DIR=$EBROOTLIBJPEGMINTURBO/include '
configopts += '-DJASPER_LIBRARY=$EBROOTJASPER/lib/libjasper.a '
configopts += '-DJASPER_INCLUDE_DIR=$EBROOTJASPER/include '
# It seems like OpenCV uses these flags mainly to set the correct compiler flags.
# With EB using -xHost it shouldn't matter. However, to make sure that 
# optimized versions are used (there is at least 1 function optimized for SSE2 
# and not for AVX), we manually enable them
configopts += '-DENABLE_SSE=ON '
configopts += '-DENABLE_SSE2=ON '
configopts += '-DENABLE_SSE3=ON '
configopts += '-DENABLE_SSSE3=ON '
configopts += '-DENABLE_SSE41=ON '
configopts += '-DENABLE_SSE42=ON '
# It seems there are special AVX implementations of some files, that are added
# just on request. Therefore, for AVX we manually enable them.
configopts += '-DENABLE_AVX=ON '
configopts += '-DENABLE_AVX2=ON '
configopts += '-DWITH_CUDA=OFF '

sanity_check_paths = {
    'files': ['lib/libopencv_core.%s' % SHLIB_EXT, 'lib/python%(pyshortver)s/site-packages/cv2.so'] +
             ['bin/opencv_%s' % x for x in ['haartraining', 'createsamples', 'performance', 'traincascade']],
    'dirs': ['include']
}

modextrapaths = {
    'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages',
    'CLASSPATH': 'share/OpenCV/java',
}

moduleclass = 'vis'
