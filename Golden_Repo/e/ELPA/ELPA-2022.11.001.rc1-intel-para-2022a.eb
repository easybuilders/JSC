# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
name = 'ELPA'
version = '2022.11.001.rc1'

homepage = 'https://elpa.rzg.mpg.de'
description = """Eigenvalue SoLvers for Petaflop-Applications. ELPA has been installed as module in
$EBROOTELPA ($ELPA_ROOT is also defined). This installation
contains the pure MPI version and the hybrid MPI/OpenMP version.
Notice: If you want to use OpenMP threads you have to set
export ELPA_DEFAULT_omp=<number of threads per MPI process>
in your batch job and start MPI with MPI_INIT_THREAD(MPI_THREAD_MULTIPLE,....

Several assembly kernels have been compiled. They can be chosen at runtime when calling the library or
with the environment variables REAL_ELPA_KERNEL or COMPLEX_ELPA_KERNEL.

An example is
export REAL_ELPA_KERNEL=REAL_ELPA_KERNEL_GENERIC
which chooses the generic real kernel for elpa2.
Starting with version 2019.11.001 the legacy interface is no longer available.
"""

usage = """You can get an overview over the available kernels by loading ELPA and then submitting a batch job with

srun --ntasks=1 $EBROOTELPA/bin/elpa2_print_kernels

Programs using this ELPA library have to be compiled with

-I$ELPA_INCLUDE[_OPENMP]/ -I$ELPA_INCLUDE[_OPENMP]/elpa -I$ELPA_MODULES[_OPENMP]

and linked with

-L$EBROOTELPA/lib -lelpa[_openmp]
-lmkl_scalapack_lp64 -lmkl_blacs_intelmpi_lp64 -lmkl_intel_lp64
-lmkl_sequential[-lmkl_intel_thread]
-lmkl_core -liomp5 -lpthread -lstdc++
"""

examples = 'Examples can be found in $EBROOTELPA/examples'

toolchain = {'name': 'intel-para', 'version': '2022a'}
toolchainopts = {'openmp': True, 'usempi': True}

source_urls = ['https://gitlab.mpcdf.mpg.de/elpa/elpa/-/archive/new_release_%(version)s/']
sources = ["elpa-new_release_%(version)s.tar.gz"]
patches = ['%(name)s-%(version)s_fix_hardcoded_perl_path.patch']
checksums = [
    {'elpa-new_release_2022.11.001.rc1.tar.gz': 'dfd5fa9cc6da8af4c4c0505feaf3b212df7380a3a58ce34181d0c750c20d018d'},
    {'ELPA-2022.11.001.rc1_fix_hardcoded_perl_path.patch':
     '1088c190a9ccfa3d88ce760bcf9de9300288cd1e4606ff79c2b66f5189a0ac72'},
]

builddependencies = [
    ('Autotools', '20220317'),
    # remove_xcompiler script requires 'python' command,
    ('Python', '3.10.4'),
    ('Perl', '5.34.1'),
]

preconfigopts = './autogen.sh && '
preconfigopts += 'autoreconf && '

configopts = '--without-threading-support-check-during-build '

with_single = False

maxparallel = 1

modextravars = {
    'ELPA_ROOT': '%(installdir)s',
    'ELPAROOT': '%(installdir)s',
    'ELPA_INCLUDE': '%(installdir)s/include/elpa-%(version)s/',
    'ELPA_INCLUDE_OPENMP': '%(installdir)s/include/elpa_openmp-%(version)s/',
    'ELPA_LIB': '%(installdir)s/lib',
    'ELPA_LIB_OPENMP': '%(installdir)s/lib',
    'ELPA_MODULES': '%(installdir)s/include/elpa-%(version)s/modules',
    'ELPA_MODULES_OPENMP': '%(installdir)s/include/elpa_openmp-%(version)s/modules',
}

moduleclass = 'math'
