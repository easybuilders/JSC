# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
name = 'impi'
version = '2019.0.117'

homepage = 'http://software.intel.com/en-us/intel-mpi-library/'
description = """The Intel(R) MPI Library for Linux* OS is a multi-fabric message
 passing library based on ANL MPICH2 and OSU MVAPICH2. The Intel MPI Library for
 Linux OS implements the Message Passing Interface, version 2 (MPI-2) specification.
"""


toolchain = {'version': '2019.3.199-GCC-8.3.0', 'name': 'iccifort'}

sources = ['l_mpi_%(version)s.tgz']

postinstallcmds = [
    "ln -s %(installdir)s/intel64/lib/release_mt/libmpi.so  %(installdir)s/intel64/lib/",
    "ln -s %(installdir)s/intel64/lib  %(installdir)s",
    "ln -s %(installdir)s/intel64/include  %(installdir)s",
    "rm -Rf %(installdir)s/bin",
    "ln -s %(installdir)s/intel64/bin  %(installdir)s",
    # If not removed but psm2 is installed in the system, libfabric crashes. For the booster is not really necessary,
    # but remove verbs anyway to avoid even the chance of it being picked up
    "rm %(installdir)s/intel64/libfabric/lib/prov/libverbs-fi.so",
]

# use a more explicit module name to help our naming scheme
modaltsoftname = 'IntelMPI'
# Add a family for our naming scheme
modluafooter = 'family("mpi")'
dontcreateinstalldir = 'True'
# set up all the mpi commands to work as expected
set_mpi_wrappers_all = 'True'

modextravars = {
#    'I_MPI_OFA_TRANSLATION_CACHE': '0',
#    'I_MPI_DAPL_TRANSLATION_CACHE': '0',
    # Needed for PSM and harmless for InfiniBand. For ParaStation it is set on the pscom module
    'HFI_NO_CPUAFFINITY': 'YES',
    # The default algorithms hang for large core counts
    'I_MPI_ADJUST_GATHER': '1',
    'I_MPI_ADJUST_GATHERV': '3',
}

#modloadmsg =  'This version of Intel MPI have serious issues. Particularly with certain collective functions at large\n'
#modloadmsg += 'core counts. Please load version 2018.4 instead'

moduleclass = 'mpi'
