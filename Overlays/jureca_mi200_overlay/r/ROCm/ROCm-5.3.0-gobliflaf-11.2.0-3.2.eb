# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
# Bundle containing ROCm framework and libraries
#
# The Arch Linux AUR recipes are the reference: https://github.com/rocm-arch/rocm-arch
#
# TODO: hipify-clang needs CUDA (headers?), right now CUDA is excluded in the mi200 partition. Maybe hidden CUDA or
#       allow installation or make a custom package?
# TODO: missing: hipify-clang (see above)
#                miopen-opencl (I think it's either miopen-hip or miopen-opencl but not both)
#                mivisionx (started writing component, but it needs Qt5,OpenCV,FFmpeg and would pull in
#                           CUDA which is disallowed)
#                rocm-validation-suite (started writing component, but need to install pciutils-devel rpm)
#                gpufort (github.com/RocmSoftwarePlatform/openacc-fortran-interfaces.git is required but
#                         is private, ask AMD for access? )
#                        NOTE: This might actually be outdated, but gpufort seems like just a python script?
#
# TODO: missing pkgs that just provide some version numbers:
#       rocm-core
#       rocm-hip-libraries
#       rocm-hip-runtime
#       rocm-hip-sdk
#       rocm-language-runtime
#       rocm-opencl-sdk
# TODO: sanity-check existence of all the libraries
# TODO: some modextrapaths, modextravars might need to be set?
# TODO: Some components are a bit hacked together, writing an easyblock might be better (hipamd, openmp-extras, ...)
# TODO: check if any package is unusable when not compiled on a system with a GPU (code auto-detects GPU).
#       There are some tricks wrt rocm_agent_enumerator (ROCM_TARGET_LST env. var. or target.lst in the same dir)
#
# Other notes:
#  - MIOpen __hipGetPCH missing might be due to some flag in hipamd, for now the patch disables PCH until v5.3
#  - AMDMIGraphX is made to link explicitly against mkl through configopts - this should be handled by cmake
#    either in Blaze or AMDMIGraphX. maybe a patch?

easyblock = 'Bundle'
name = 'ROCm'
version = '5.3.0'

homepage = 'https://github.com/RadeonOpenCompute/ROCm'
description = """AMD ROCm - Open Source Platform for HPC and Ultrascale GPU Computing."""


# toolchain = {'name': 'GCCcore', 'version': '11.2.0'}
# rocALUTION asks for mpi (I think it can build without it though)
# OpenMPI needs ROCm at compile time to support it, so this might be problematic ("ROCm-Bare" package containing only
# what OpenMPI needs?)
toolchain = {'name': 'gobliflaf', 'version': '11.2.0-3.2'}


builddependencies = [
    ("binutils", "2.37"),
    ("CMake",    "3.23.1"),
    ("Ninja",    "1.10.2"),
    ("makeinfo", "6.8"),           # ROCgdb complains about it missing
    # roctracer breaks without this (also the newer robotpy-cppheaderparser doesn't seem to work)
    ("CppHeaderParser", "2.7.4"),
]

dependencies = [
    ("libdrm", "2.4.110"),  # ROCT complains about libdrm not being found
    ("OpenGL", "2021b"),    # hip needs mesa
    ("Python", "3.9.6"),    # rocFFT asks for python headers
    ("guile",  "2.0.14"),   # ROCgdb wants guile-2.0
    ("MPFR",   "4.1.0"),    # also ROCgdb
    ("source-highlight",  "3.1.9"),      # also ROCgdb
    ("babeltrace",        "1.5.8"),      # also ROCgdb
    ("fmt",               "8.1.1"),      # rocSOLVER uses fmt for something
    ("protobuf",          "3.17.3"),     # AMDMIGraphX and some others
    ("nlohmann-json",     "3.10.4"),     # AMDMIGraphX
    ("msgpack-c",         "4.0.0"),      # AMDMIGraphX
    ("msgpack-cpp",       "4.1.1"),      # AMDMIGraphX
    ("pybind11",          "2.7.1"),      # AMDMIGraphX
    ("Blaze",             "3.8.1"),            # AMDMIGraphX
    # dependency
    # ("FFmpeg",            "4.4.1"),                              # MIVisionX
    # ("OpenCV",            "4.5.4", '', ('gcccoremkl','2021b')),  # MIVisionX
    # ("Qt5",               "5.15.2"),                             # MIVisionX
    ("OpenCL-Headers",    "2022.05.18"),  # OpenCL runtime and miopengemm
    ("OpenCL-ICD-Loader", "2022.05.18"),  # OpenCL runtime and miopengemm
]

default_easyblock = 'CMakeNinja'
github_account = "RadeonOpenCompute"

local_gpus = ["gfx90a:xnack-", "gfx90a:xnack+"]
local_amdgpu_targets = ";".join(local_gpus)
local_hip_targets = " ".join(local_gpus)

components = [
    ('ROCT-Thunk-Interface', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['c150be3958fd46e57bfc9db187819ec34b1db8f0cf9b69f8c3f8915001800ab8'],
         'srcdir':     '%(name)s-rocm-%(version)s'
     }),
    ('rocm-cmake', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': ['659a8327f13e6786103dd562d3632e89a51244548fca081f46c753857cf09d04'],
         'srcdir':    '%(name)s-rocm-%(version)s'
     }),
    ('llvm-project', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-llvm-%(version)s.tar.gz',
         }],
         'checksums': ['4e3fcddb5b8ea8dcaa4417e0e31a9c2bbdc9e7d4ac3401635a636df32905c93e'],
         'srcdir':    '%(name)s-rocm-%(version)s/llvm',
         'install_target_subdir': 'llvm',
         'configopts': (" -DLLVM_HOST_TRIPLE=x86_64-linux-gnu "
                        " -DLLVM_BUILD_UTILS=ON "
                        " -DLLVM_ENABLE_BINDINGS=OFF "
                        " -DOCAMLFIND=NO "
                        " -DLLVM_ENABLE_OCAMLDOC=OFF "
                        " -DLLVM_INCLUDE_BENCHMARKS=OFF "
                        " -DLLVM_BUILD_TESTS=OFF "
                        " -DLLVM_ENABLE_PROJECTS='llvm;clang;compiler-rt;lld' "
                        " -DLLVM_TARGETS_TO_BUILD='AMDGPU;X86' "
                        " -DLLVM_BINUTILS_INCDIR=$EBROOTBINUTILS/include ")
     }),
    ('ROCm-Device-Libs', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['f7e1665a1650d3d0481bec68252e8a5e68adc2c867c63c570f6190a1d2fe735c'],
         'srcdir':     '%(name)s-rocm-%(version)s',
         'configopts': " -DLLVM_DIR=%(installdir)s/llvm/lib/cmake/llvm "
     }),
    ('ROCm-CompilerSupport', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['072f849d79476d87d31d62b962e368762368d540a9da02ee2675963dc4942b2c'],
         'srcdir':     '%(name)s-rocm-%(version)s/lib/comgr',
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DCLANGRT_BUILTINS=\"%(installdir)s/llvm/lib/clang"
                        "/15.0.0/lib/linux/libclang_rt.builtins-x86_64.a\"")
     }),
    ('hsa-amd-aqlprofile', version,
     {
         'easyblock':   "Binary",
         'source_urls': ['http://repo.radeon.com/rocm/apt/%(version_major_minor)s/pool/main/h/hsa-amd-aqlprofile/'],
         'sources':     [{
             'download_filename': 'hsa-amd-aqlprofile_1.0.0.50300-63~22.04_amd64.deb',
             'filename':          '%(name)s-%(version)s.deb',
             'extract_cmd':       'ar x %s'
         }],
         'checksums':   ['46635f4f019aba1c3a53665430b0de70b992700e852f08b36f54ff33ca7e3ec7'],
         'install_cmd': """
                 mkdir -p %(builddir)s/%(name)s
                 tar -C "%(builddir)s/%(name)s" -xf data.tar.gz;
                 cp -r %(builddir)s/%(name)s/opt/rocm-%(version)s/%(name)s/ %(installdir)s/hsa
                 cp -r %(builddir)s/%(name)s/opt/rocm-%(version)s/lib/ %(installdir)s/lib
                 cp -r %(builddir)s/%(name)s/opt/rocm-%(version)s/share/ %(installdir)s/share
                 ln -sf %(installdir)s/hsa/lib/lib%(name)s64.so %(installdir)s/lib/lib%(name)s64.so.1
             """
     }),
    ('ROCR-Runtime', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['b51dbedbe73390e0be748b92158839c82d7fa0e514fede60aa7696dc498facf0'],
         'srcdir':     '%(name)s-rocm-%(version)s/src',
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DCMAKE_CXX_FLAGS='-DNDEBUG' ")
     }),
    ('rocminfo', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [],
         'checksums': [
             'c279da1d946771d120611b64974fde751534e787a394ceb6b8e0b743c143d782',
         ],
         'srcdir':     '%(name)s-rocm-%(version)s',
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DROCRTST_BLD_TYPE=Release "
                        " -DCMAKE_INSTALL_LIBDIR=lib ")
     }),
    ('hipamd', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/HIP/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'hip-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/RadeonOpenCompute/ROCm-OpenCL-Runtime/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-opencl-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/ROCclr/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocclr-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/hipamd/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'hipamd-%(version)s.tar.gz',
         }],
         'patches': [
         ],
         'checksums': [
             '05225832fb5a4d24f49a773ac27e315239943a6f24291a50d184e2913f2cdbe0',
             'd251e2efe95dc12f536ce119b2587bed64bbda013969fa72be58062788044a9e',
             '2bf14116b5e2270928265f5d417b3d0f0f2e13cbc8ec5eb8c80d4d4a58ff7e94',
             '81e9bd5209a7b400c986f9bf1d7079bcf7169bbcb06fc4fe843644559a4d612e',
         ],
         'srcdir':                'hipamd-rocm-%(version)s/',
         'install_target_subdir': 'hip',
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DHIP_COMMON_DIR=%(builddir)s/HIP-rocm-%(version)s/ "
                        " -DAMD_OPENCL_PATH=%(builddir)s/ROCm-OpenCL-Runtime-rocm-%(version)s/ "
                        " -DROCCLR_PATH=%(builddir)s/ROCclr-rocm-%(version)s/ "
                        " -DROCCLR_INCLUDE_PATH=%(builddir)s/ROCclr-rocm-%(version)s "
                        " -DHIP_PLATFORM=amd "
                        " -DCMAKE_INSTALL_LIBDIR=lib "),
         'installopts': "install && " + "\n".join([
             "sed -i '/__noinline__/d' %(installdir)s/hip/include/hip/amd_detail/host_defines.h",
             "install -d %(installdir)s/bin",
             "install -d %(installdir)s/include",
             "install -d %(installdir)s/lib/cmake",
             ("for binary in hipcc hipconfig hipcc.pl hipconfig.pl; "
              "  do ln -s %(installdir)s/hip/bin/$binary %(installdir)s/bin/$binary; "
              "done"),
             "ln -s %(installdir)s/hip/lib/libamdhip64.so %(installdir)s/lib/libamdhip64.so",
             "ln -s %(installdir)s/hip/include/hip %(installdir)s/include/hip",
             "ln -s %(installdir)s/hip/lib/cmake/hip %(installdir)s/lib/cmake/hip",
             "ln -s %(installdir)s/hip/lib/cmake/hip-lang %(installdir)s/lib/cmake/hip-lang",
         ]) + "\n echo "
     }),
    ('llvm-project-mlir', version,
     {
         'source_urls': ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         # fix stray ";" in linker flags
         'patches':   [
             ('https://patch-diff.githubusercontent.com/raw/ROCmSoftwarePlatform/llvm-project-mlir/pull/688.patch',
              'rocMLIR-rocm-%(version)s')
         ],
         'checksums': [
             'e8471a13cb39d33adff34730d3162adaa5d20f9544d61a6a94b39b9b5762ad6d',
             '7085543c8726b3b14cae675ecccef54847a2525af3a13d34d6e1d52d2a17907a',
         ],
         'srcdir':         'rocMLIR-rocm-%(version)s',
         'preconfigopts':  'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'prebuildopts':   'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'preinstallopts': 'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'configopts': (
             " -DMLIR_MIOPEN_SQLITE_ENABLED=On "
             " -DBUILD_FAT_LIBMLIRMIOPEN=1 "
             " -DROCM_PATH=%(installdir)s "
             " -DLLVM_TARGETS_TO_BUILD='AMDGPU;X86' ")
     }),
    ('rocm_smi_lib', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('https://patch-diff.githubusercontent.com/raw/RadeonOpenCompute/rocm_smi_lib/pull/107.patch',
              '%(name)s-rocm-%(version)s')],
         'checksums': [
             '8f72ad825a021d5199fb73726b4975f20682beb966e0ec31b53132bcd56c5408',
             'f1d66af131833a55bcfcac63e9af7194cc38cb1bb583fb74427e4f0f89719910',
         ],
         'srcdir':     '%(name)s-rocm-%(version)s',
         'configopts': (" -DCMAKE_SHARED_LINKER_FLAGS=\"-fuse-ld=bfd\" "
                        " -DCMAKE_MODULE_LINKER_FLAGS=\"-fuse-ld=bfd\" "
                        " -DCMAKE_EXE_LINKER_FLAGS=\"-fuse-ld=bfd\" ")
     }),
    ('atmi', version,
     {
         'easyblock': 'CMakeMake',  # Uses cmake in a crappy way breaking ninja
         'sources':   [{
             'source_urls':       [GITHUB_SOURCE],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             'dffc0eb0bc1617843e7f728dbd6c8b12326c5c8baa34369aa267aab40f5deb6a',
         ],
         'srcdir':                '%(name)s-rocm-%(version)s/src',
         'install_target_subdir': 'atmi',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DROCM_VERSION=\"%(version)s\" " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; "
     }),
    ('ROCdbgapi', version,
     {
         'source_urls': ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('https://patch-diff.githubusercontent.com/raw/ROCm-Developer-Tools/ROCdbgapi/pull/4.patch',
              '%(name)s-rocm-%(version)s')],
         'checksums': [
             'afffec78e34fe70952cd41efc3d7ba8f64e43acb2ad20aa35c9b8b591bed48ca',
             '91b29cafec79441e6c311d50ca5653ec8315c401b1cc0f93ce65bfdfdda2e04e',
         ],
         'srcdir': '%(name)s-rocm-%(version)s',
     }),
    ('rocr_debug_agent', version,
     {
         'source_urls': ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':     ['8dfb6aa442ce136207c0c089321c8099042395977b4a488e4ca219661df0cd78'],
         'srcdir':         '%(name)s-rocm-%(version)s',
         'preconfigopts':  'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'prebuildopts':   'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'preinstallopts': 'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'configopts':     " -DCMAKE_HIP_ARCHITECTURES=\"%s\" " % local_hip_targets +\
                           (" -DCMAKE_PREFIX_PATH=\"%(installdir)s;%(installdir)s/hip\" "
                            " -DCMAKE_MODULE_PATH=\"%(installdir)s/hip/cmake;%(installdir)s/hip/lib/cmake/hip\" ")
     }),
    ('ROCgdb', version,
     {
         'easyblock':   'ConfigureMake',
         'source_urls': ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('rocm-gdb-5.3.0-rocm-dbgapi-lib64.patch', '%(name)s-rocm-%(version)s'),
         ],
         'checksums':      [
             '402537baf0779cae586d608505e81173ba85f976fe993f1633e3afe81669350f',
             '3ade58f3a1ac81f1fe7d324bcb83e82670a25159acff7ec1d024056c545ad4bd',
         ],
         'preconfigopts':  'cd %(name)s-rocm-%(version)s && ',
         'prebuildopts':   'cd %(name)s-rocm-%(version)s && ',
         'preinstallopts': 'cd %(name)s-rocm-%(version)s && ',
         'configopts': (
             "  --program-prefix=roc "
             "  --disable-shared "
             "  --disable-nls "
             "  --disable-gprofng "
             "  --enable-source-highlight "
             "  --enable-tui "
             "  --enable-64-bit-bfd "
             "  --enable-targets=\"x86_64-linux-gnu,amdgcn-amd-amdhsa\" "
             "  --with-system-readline "
             "  --with-python=$EBROOTPYTHON/bin/python3 "
             "  --with-rocm-dbgapi=%(installdir)s "
             "  --with-guile=guile-2.0 "
             "  --with-expat "
             "  --with-system-zlib "
             "  --with-babeltrace "
             "  --with-lzma "
             "  --disable-gdbtk "
             "  --disable-ld "
             "  --disable-gas "
             "  --disable-gdbserver "
             "  --disable-sim "
         )
     }),
    ('rocprofiler', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/roctracer/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'roctracer-%(version)s.tar.gz',
         }],
         'patches': [
             ('rocprofiler-5.3.0-aql-and-rocm-paths.patch',
              '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             'b0905a329dc1c97a362b951f3f8ef5da9d171cabb001ed4253bd59a2742e7d39',
             '36f1da60863a113bb9fe2957949c661f00a702e249bb0523cda1fb755c053808',
             'c3df4a644be551e4acd07ecfb1af5c9fa09bf0e8a322f81da41060c8b6f1305e',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                           "export ROCM_PATH=%(installdir)s; "
                           "export HIP_PATH=%(installdir)s/hip; "),
         'prebuildopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                          "export ROCM_PATH=%(installdir)s; "
                          "export HIP_PATH=%(installdir)s/hip; "),
         'configopts':    " -DPROF_API_HEADER_PATH=%(builddir)s/roctracer-rocm-%(version)s/inc/ext",
         'installopts':   "install && " + "\n".join([
             "install -d %(installdir)s/bin",
             "ln -s %(installdir)s/rocprofiler/bin/rocprof %(installdir)s/bin/rocprof",
         ]) + "\n echo "
     }),
    ('roctracer', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('roctracer-5.3.0-test-fpie.patch', '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             '36f1da60863a113bb9fe2957949c661f00a702e249bb0523cda1fb755c053808',
             '04474583e60ad5e5636b4678740e82d157a098c45b737fa1d37412c5b2fb2547',
         ],
         'preconfigopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                           "export ROCM_PATH=%(installdir)s; "
                           "export HIP_PATH=%(installdir)s/hip; "),
         'prebuildopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                          "export ROCM_PATH=%(installdir)s; "
                          "export HIP_PATH=%(installdir)s/hip; "),
         'preinstallopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                            "export ROCM_PATH=%(installdir)s; "
                            "export HIP_PATH=%(installdir)s/hip; "),
         'srcdir':        '%(name)s-rocm-%(version)s',
     }),
    ('rccl', version,
     {
         'source_urls': ['https://github.com/ROCmSoftwarePlatform/rccl/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':     ['51da5099fa58c2be882319cebe9ceabe2062feebcc0c5849e8c109030882c10a'],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; "
     }),
    ('ROCclr', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/RadeonOpenCompute/ROCm-OpenCL-Runtime/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-opencl-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/ROCclr/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocclr-%(version)s.tar.gz',
         }],
         'checksums': [
             'd251e2efe95dc12f536ce119b2587bed64bbda013969fa72be58062788044a9e',
             '2bf14116b5e2270928265f5d417b3d0f0f2e13cbc8ec5eb8c80d4d4a58ff7e94',
         ],
         'srcdir':      '%(name)s-rocm-%(version)s/',
         'configopts':  (" -DAMD_OPENCL_PATH=%(builddir)s/ROCm-OpenCL-Runtime-rocm-%(version)s/ "),
         'installopts': ' && echo ',  # install nothing, just build and use for OpenCL later
     }),
    ('ROCm-OpenCL-Runtime', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/RadeonOpenCompute/ROCm-OpenCL-Runtime/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-opencl-%(version)s.tar.gz',
         }],
         'checksums': [
             'd251e2efe95dc12f536ce119b2587bed64bbda013969fa72be58062788044a9e',
         ],
         'srcdir':     '%(name)s-rocm-%(version)s/',
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(builddir)s/ROCclr-rocm-%(version)s/;%(installdir)s\" "
                        " -DROCCLR_PATH=%(builddir)s/ROCclr-rocm-%(version)s/ "
                        " -DROCCLR_INCLUDE_PATH=%(builddir)s/ROCclr-rocm-%(version)s "
                        " -DROCM_PATH=%(installdir)s"
                        " -DAMD_OPENCL_PATH=%(builddir)s/ROCm-OpenCL-Runtime-rocm-%(version)s/ "),
     }),
    ('clang-ocl', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/RadeonOpenCompute/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '66b80ba050848ad921496bd894e740e66afad0ba1923b385f01f2eeae97999ad',
         ],
         'srcdir':     '%(name)s-rocm-%(version)s/',
         'configopts': (" -DCLANG_BIN=\"%(installdir)s/llvm/bin\" "
                        " -DBITCODE_DIR=\"%(installdir)s/amdgcn/bitcode\" "),
     }),
    ('MIOpenGEMM', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
         ],
         'checksums': [
             '7e299daaca8e514bdb5b5efd9d9d3fc5cbfda68ad0117fe7cdbbf946b3f842cd',
         ],
         'srcdir': '%(name)s-rocm-%(version)s/',
     }),
    ('openmp-extras', version,
     # Very hacky, needs easyblock
     {
         'easyblock': 'ConfigureMake',
         'sources':   [{
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/aomp/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'aomp-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/RadeonOpenCompute/llvm-project/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-llvm-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/RadeonOpenCompute/ROCm-Device-Libs/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-device-libs-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/flang/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'flang-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/aomp-extras/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'aomp-extras-%(version)s.tar.gz',
         }],
         'patches': [
             ('llvm-project-hostrpc-fprintf-decl.patch',
              'llvm-project-rocm-%(version)s'),
             ('aomp-5.3.0-openmp-buildpath.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-5.3.0-openmp-rocm_dir.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-5.3.0-flang-iftypo.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-flang-decouple-out-dir-and-rocm-install.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-flang-5.3.0-libomp-path.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-flang_runtime-5.3.0-flang1-2-path.patch',
              'aomp-rocm-%(version)s'),
             ('flang-rocm-5.3.0-cmake-pgmath.patch',
              'flang-rocm-%(version)s'),
             ('flang-rocm-5.3.0-flang1-2-dep-path.patch',
              'flang-rocm-%(version)s'),
             ('aomp-extras-5.2.0-rocm-dir-llvm.patch',
              'aomp-extras-rocm-%(version)s'),
             ('aomp-5.2.0-extras-version-string.patch',
              'aomp-rocm-%(version)s'),
         ],
         'checksums': [
             '371ed037b95b83fac64fb2ff2fc17313fe7d3befc8671f0a08f0e2072393fa5b',
             '4e3fcddb5b8ea8dcaa4417e0e31a9c2bbdc9e7d4ac3401635a636df32905c93e',
             'f7e1665a1650d3d0481bec68252e8a5e68adc2c867c63c570f6190a1d2fe735c',
             'ef1256ddf6cd9de10a1b88df4736dce48295136983a7e31eadd942fb39b156f7',
             'b3beee383d9c130666c230595c950bdc2ce4c7a99d728b9ddf1bca3963152223',

             'c846bac17580e939492b843bee092c2e1b2b414a683bdb6be2973ae044642424',
             '0752145a45e3b1728c26bc627286e2ced0420107135e0b13eaf1d945c075f711',
             '99401e192cb777f59c61fa02b6071316f05e3e08939b15e9c12263614b4a7061',
             '7c4ef4ad7b8502bb918a2d032bb6e75f20b3606040adeade3fdd2460f7189c95',
             'e82a4f065cc259095bf96778b913b97fe39d7c207e4e25ccf59d8fa264014262',
             '83102ebef534ecc956b2cce1892c713ed81d01fc2216e70cc89c992f7545d810',
             'cce2ce2feeaf798b339d4e711a87c8fd603bbf88cacccab7e539c8c148b3a6d3',
             'c16ed90f3491434e9f7794871d6d2c638395036dc785f6b4d94a121758978352',
             '3011cff58e353fdaa4f69761821e2182b46bc4244ac25c7f7096217a8b9436cf',
             'bae31efe2dd3f6813e9198c210ba3390028ed89e0d47e86366bef741c70c4db7',
             '7c5372078c74facbd7cae451c3a717bf281344dcd5c4103e1c837d980e79ccc9',
         ],
         'configure_cmd': ("ln -fs %(builddir)s/llvm-project-rocm-%(version)s %(builddir)s/llvm-project;"
                           "ln -fs %(builddir)s/flang-rocm-%(version)s %(builddir)s/flang;"
                           "ln -fs %(builddir)s/aomp-extras-rocm-%(version)s %(builddir)s/aomp-extras;"
                           " echo "),  # echo --prefix=...
         'build_cmd': ("export OMPEXTRA_DIR=\"%(builddir)s/openmp-extras\";"
                       "export OUT_DIR=\"$OMPEXTRA_DIR\";"
                       "export AOMP=\"$OUT_DIR/llvm\";"
                       "export AOMP_STANDALONE_BUILD=0;"
                       "export AOMP_REPOS=\"%(builddir)s\";"
                       "export ROCM_DIR=\"%(installdir)s\";"
                       "export DEVICELIBS_ROOT=\"%(builddir)s/ROCm-Device-Libs-rocm-%(version)s\";"
                       "export LLVM_PROJECT_ROOT=\"%(builddir)s/llvm-project\";"
                       "cd \"%(builddir)s/aomp-rocm-%(version)s/bin\";"
                       "./build_extras.sh && "
                       "./build_extras.sh install && "
                       "./build_openmp.sh && "
                       "./build_openmp.sh install && "
                       "./build_pgmath.sh && "
                       "./build_pgmath.sh install && "
                       "./build_flang.sh && "
                       "./build_flang.sh install && "
                       "./build_flang_runtime.sh && "
                       "./build_flang_runtime.sh install && echo "),  # echo -j 64 ...
         # echo install ?
         'install_cmd': ("cp -r %(builddir)s/openmp-extras/llvm/runtime/* %(builddir)s/openmp-extras/llvm/ && "
                         "cp -r %(builddir)s/openmp-extras/llvm/devel/* %(builddir)s/openmp-extras/llvm/ && "
                         "cp -r %(builddir)s/openmp-extras/* %(installdir)s/ && " "echo ")
     }),
    ('rocPRIM', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '4885bd662b038c6e9f058a756fd838203dbd00227bfef6adaf31496010b100e4',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s/',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    (" -Damd_comgr_DIR=%(installdir)s/lib/cmake/amd_comgr "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -DBUILD_TEST=OFF "
                           " -DBUILD_BENCHMARK=OFF ") +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts': "export ROCM_PATH=%(installdir)s; "
     }),
    ('rocFFT', version,
     {
         'source_urls': ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [],
         'checksums': [
             'd655c5541c4aff4267e80e36d002fc3a55c2f84a0ae8631197c12af3bf03fa7d',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; "
     }),
    ('rocRAND', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/hipRAND/archive'],
             'download_filename': '12e2f070337945318295c330bf69c6c060928b9e.tar.gz',
             'filename':          'hiprand-%(version)s.tar.gz',
         }],
         'checksums': [
             'be4c9f9433415bdfea50d9f47b8afb43ac315f205ed39674f863955a6c256dca',
             '6a891b7a420ee629776b2eca792b0f0cf92a35e99f7046515ecc9fd2359eadd3',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': ("export ROCM_PATH=%(installdir)s; "
                           "rm -rf %(builddir)s/%(name)s-rocm-%(version)s/hipRAND; "
                           "ln -sf %(builddir)s/hipRAND-12e2f070337945318295c330bf69c6c060928b9e "
                           " %(builddir)s/%(name)s-rocm-%(version)s/hipRAND && "),
         'configopts':    " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          " -DBUILD_TEST=OFF ",
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
         'installopts':   "install && " + "\n".join([
             "install -d %(installdir)s/include",
             "ln -s %(installdir)s/hiprand/include %(installdir)s/include/hiprand",
             "ln -s %(installdir)s/rocrand/include %(installdir)s/include/rocrand",
         ]) + "\n echo "
     }),
    ('rocBLAS', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('rocBLAS-5.2.0-find-python-if-undefined.patch',
              '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             '8ea7269604cba949a6ea84b78dc92a44fa890427db88334da6358813f6512e34',
             'c01d9235e055a00859bf3571e5afe33e296959296ff895d89a36cd1627d15d71',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; export PATH=%(installdir)s/hip/bin:$PATH; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DCMAKE_PREFIX_PATH=%(installdir)s/llvm/lib/cmake/llvm "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -Damd_comgr_DIR=%(installdir)s/lib/cmake/amd_comgr "
                           " -Dpython=$EBROOTPYTHON/bin/python3 "
                           " -DBUILD_WITH_TENSILE=ON "
                           " -DBUILD_WITH_TENSILE_HOST=ON "
                           " -DTensile_LIBRARY_FORMAT=yaml "
                           " -DTensile_COMPILER=hipcc "
                           " -DTensile_LOGIC=asm_full "
                           " -DTensile_CODE_OBJECT_VERSION=V3 "
                           " -DBUILD_CLIENTS_TESTS=OFF "
                           " -DBUILD_CLIENTS_BENCHMARKS=OFF "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "
                           " -DBUILD_TESTING=OFF "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; export PATH=%(installdir)s/hip/bin:$PATH; ",
     }),
    ('rocWMMA', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [],
         'checksums': [
             '04bac641ba18059118d3faa5f21fe3bf3e285055d40930489ebf27ffc8e5d16e',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    (" -DROCWMMA_BUILD_TESTS=OFF "
                           " -DROCWMMA_BUILD_SAMPLES=OFF "
                           " -DROCWMMA_BUILD_ASSEMBLY=ON "
                           " -DOpenMP_CXX_FLAGS=\"-fopenmp\" "
                           " -DOpenMP_CXX_LIB_NAMES=\"\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc ") +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
     }),
    ('MIOpen', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/half/archive'],
             'download_filename': '1.12.0.tar.gz',
             'filename':          'half-1.12.0.tar.gz',
         }],
         'patches': [
             # This might actually be some missing flag in hipamd, but disable for now
             ('MIOpen-disable-pch-until-5.4.patch',
              '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             'c5819f593d71beeda2eb24b89182912240cc40f83b2b8f9de695a8e230aa4ea6',
             '0a08660b68abb176ebc2a0cdf8de46e3182a7f46c66443bb80dbfaaec98cf969',

             '34fa8daa9fa8715dd38fc6f124ff1d6614fe9723b2af08ec825f90728b26e2d4',
         ],
         'preconfigopts': (
             # This is just completely broken. I think the only dependency missing as of 5.1.3 is "half",
             # which is a single header, so download and copy it
             # " sed -i 's|^sqlite|#\\0|' "
             # " %(builddir)s/%(name)s-rocm-%(version)s/{,min-}requirements.txt; "
             # " sed -i 's|^boost|#\\0|' "
             # " %(builddir)s/%(name)s-rocm-%(version)s/{,min-}requirements.txt; "
             # " sed -i 's|^ROCmSoftwarePlatform/llvm-project-mlir|#\\0|' "
             # " %(builddir)s/%(name)s-rocm-%(version)s/{,min-}requirements.txt; "
             # " cmake -P %(builddir)s/%(name)s-rocm-%(version)s/install_deps.cmake "
             # "--minimum --prefix \"%(builddir)s/%(name)s-rocm-%(version)s/deps\"; "
             " install -d %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include; "
             " cp %(builddir)s/half-1.12.0/include/half.hpp %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include/; "
             " export ROCM_PATH=%(installdir)s; "
             " export MIOPEN_DEBUG_COMGR_HIP_PCH_ENFORCE=0; "
         ),
         'srcdir':     '%(name)s-rocm-%(version)s/',
         'configopts': " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                       (" -DCMAKE_CXX_COMPILER=%(installdir)s/llvm/bin/clang++ "
                        " -DCMAKE_C_COMPILER=%(installdir)s/llvm/bin/clang "
                        " -DHALF_INCLUDE_DIR=%(builddir)s/%(name)s-rocm-%(version)s/deps/half/include "
                        " -DMIOPEN_BACKEND=HIP "),
         'prebuildopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('AMDMIGraphX', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/half/archive'],
             'download_filename': '1.12.0.tar.gz',
             'filename':          'half-1.12.0.tar.gz',
         }],
         'checksums': [
             'd0b7283f42e03fb38b612868b8c94f46f27a6e0b019ae95fde5b9086582a1c69',
             '0a08660b68abb176ebc2a0cdf8de46e3182a7f46c66443bb80dbfaaec98cf969',
         ],
         'preconfigopts': (
             " install -d %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include; "
             " cp %(builddir)s/half-1.12.0/include/half.hpp %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include/; "
             " export ROCM_PATH=%(installdir)s; "
         ),
         'srcdir':     '%(name)s-rocm-%(version)s/',
         'configopts': " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                       (" -DHALF_INCLUDE_DIR=%(builddir)s/%(name)s-rocm-%(version)s/deps/half/include "
                        " -DCMAKE_SHARED_LINKER_FLAGS=\"$LDFLAGS -lblis-mt\" "),  # explicitly link BLIS
         'prebuildopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    # ('MIVisionX', version,
    #  {
    #      'sources' : [{
    #         'source_urls'       : ['https://github.com/GPUOpen-ProfessionalCompute-Libraries/%(name)s/archive'],
    #         'download_filename' : 'rocm-%(version)s.tar.gz',
    #         'filename'          : '%(namelower)s-%(version)s.tar.gz',
    #      }],
    #      'checksums'  : [
    #          '62591d5caedc13832c3ccef629a88d9c2a43c884daad1124ddcb9c5f7d5470e9',
    #      ],
    #      'preconfigopts' : (
    #          " install -d %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include; "
    #          " cp %(builddir)s/half-1.12.0/include/half.hpp "
    #          " %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include/; "
    #          " export ROCM_PATH=%(installdir)s; "
    #      ),
    #      'srcdir'        : '%(name)s-rocm-%(version)s/',
    #      'install_target_subdir' : 'mivisionx',
    #      'configopts'    : " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
    #                        (
    #                            " -DHALF_INCLUDE_DIR=%(builddir)s/%(name)s-rocm-%(version)s/deps/half/include "
    #                            " -DBACKEND=HIP "
    #                            " -DCMAKE_CXX_FLAGS=\"$CXXFLAGS -isystem $EBROOTFFMPEG/include/ffmpeg4.4\" "
    #                            # Not sure why explicit ffmpeg include dir is necessary
    #                        ),
    #      'prebuildopts'  : "export ROCM_PATH=%(installdir)s; ",
    #  }),
    ('rocSOLVER', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [],
         'checksums': [
             '4569f860d240d50e94e77d498050f5cafe5ad11daddaead3e7e9eaa1957878a7',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
     }),
    ('rocSPARSE', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('rocsparse-5.3.0-include-cstdint.patch', '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             '521ca0e7b52f26edbff8507eb1479dc26019f456756d884d7b8b192c3ea518e8',
             'c3562202534bab3d1bb6f49eaf3dd95e3e7f593dcb9b3d72ec1e5054e5305fb2',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -Drocprim_DIR=\"%(installdir)s/rocprim/rocprim/lib/cmake/rocprim\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "),
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
     }),
    ('rocThrust', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '0e11b12f208d2751e3e507e3a32403c9bd45da4e191671d765d33abd727d9b96',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -DBUILD_TEST=OFF "),
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
     }),
    ('rocALUTION', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches':        [
             ('rocALUTION-5.2.0-fix-complex-device-operators.patch',
              '%(name)s-rocm-%(version)s'),
         ],
         'checksums':      [
             'f623449789a5c9c9137ae51d4dbbee5c6940d8813826629cb4b7e84f07fab494',
             'ae7fb5eeba68f7e8af2b81a1b1587c33efeee7d67d3b91cbad8886130e107720',
         ],
         'srcdir':         '%(name)s-rocm-%(version)s',
         'preconfigopts':  "export ROCM_PATH=%(installdir)s; ",
         'configopts':     " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                           " -DROCM_PATH=\"%(installdir)s\" ",
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipCUB', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '4016cfc240b3cc1a97b549ecc4a5b76369610d46247661834630846391e5fad2',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipBLAS', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
         ],
         'checksums': [
             '873d55749479873994679840906c4257316dfb09a6200411204ad4a8c2480565',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "
                           " -DBUILD_CLIENTS_TESTS=OFF "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipFFT', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             'ebbe2009b86b688809b6b4d5c3929fc589db455218d54a37790f21339147c5df',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "
                           " -DCMAKE_MODULE_PATH=\"%(installdir)s/hip/cmake\" "
                           " -DBUILD_CLIENTS_TESTS=OFF "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipfort', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '9e2aa142de45b2d2c29449d6f82293fb62844d511fbf51fa597845ba05c700fa',
         ],
         'install_target_subdir': 'hipfort',
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          " -DROCM_PATH=\"%(installdir)s\" ",
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipSOLVER', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '6e920a59ddeefd52c9a6d164c33bc097726529e1ede3c417c711697956655b15',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipSPARSE', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '691b32b916952ed9af008aa29f60cc190322b73cfc098bb2eda3ff68c89c7b35',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -DCMAKE_CXX_STANDARD=20 "
                           " -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "
                           " -DAMDDeviceLibs_DIR=\"%(installdir)s/lib/cmake/AMDDeviceLibs\" "
                           " -Dhip_DIR=\"%(installdir)s/hip/lib/cmake/hip\" "
                           " -Drocsparse_DIR=\"%(installdir)s/rocsparse/lib/cmake/rocsparse\" "
                           " -DBUILD_CLIENTS_TESTS=OFF "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    # ('ROCmValidationSuite', version,
    #  {
    #      'sources' : [{
    #         'source_urls'       : ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
    #         'download_filename' : 'rocm-%(version)s.tar.gz',
    #         'filename'          : '%(namelower)s-%(version)s.tar.gz',
    #      }],
    #      # This just adds detection of Arch Linux, so probably not important?
    #      'patches'       : [
    #          ('https://github.com/acxz/ROCmValidationSuite/commit/eb1a4bf5de8d8ba25f21ee13d6af1c46416e3961.patch',
    #           '%(name)s-rocm-%(version)s')],
    #      'checksums'     : [
    #         '0140a4128c31749c078d9e1dc863cbbd690efc65843c34a4b80f0056e5b8c7b6',
    #      ],
    #      'srcdir'        : '%(name)s-rocm-%(version)s',
    #      'preconfigopts' : ("export ROCM_PATH=%(installdir)s; "
    #                        ),
    #      'configopts'    : " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
    #                         (" -DROCM_PATH=\"%(installdir)s\" "
    #                         ),
    #      'prebuildopts'  : "export ROCM_PATH=%(installdir)s; ",
    #      'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
    #  }),
]


postinstallcmds = ["mkdir -p %(installdir)s/rocm_targets/",
                   *("echo %s >> %%(installdir)s/rocm_targets/targets.lst" % gpu for gpu in local_gpus)]

modextravars = {
    'ROCM_PATH': '%(installdir)s',
    'ROCM_TARGET_LST': '%(installdir)s/rocm_targets/targets.lst',
}

modextrapaths = {
    'PATH': [
        # TODO: more binaries
        'mivisionx/bin',
        'rvs/bin',
    ],
    'LD_LIBRARY_PATH': [
        'hip/lib',
        'hipblas/lib',
        'hipfft/lib',
        'hipfort/lib',
        'hipsolver/lib',
        'hipsparse/lib',
        'hsa/lib',
        'llvm/lib',
        'miopen/lib',
        'oam/lib',
        'rccl/lib',
        'rocblas/lib',
        'rocfft/lib',
        'rocm_smi/lib',
        'rocprim/lib',
        'rocsolver/lib',
        'rocsparse/lib',
    ],
    'LIBRARY_PATH': [
        'hip/lib',
        'hipblas/lib',
        'hipfft/lib',
        'hipfort/lib',
        'hipsolver/lib',
        'hipsparse/lib',
        'hsa/lib',
        'llvm/lib',
        'miopen/lib',
        'oam/lib',
        'rccl/lib',
        'rocblas/lib',
        'rocfft/lib',
        'rocm_smi/lib',
        'rocprim/lib',
        'rocsolver/lib',
        'rocsparse/lib',
    ],
}

moduleclass = 'devel'
