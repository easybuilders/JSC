# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'CMakeMake'

name = 'Umpire'
version = '2023.06.0'
versionsuffix = '-nompi'

homepage = 'https://github.com/LLNL/Umpire'
description = """
An application-focused API for memory management on NUMA & GPU architectures
"""

toolchain = {'name': 'GCCcore', 'version': '12.3.0'}
toolchainopts = {'pic': True}

github_account = 'LLNL'
source_urls = [GITHUB_SOURCE]
sources = ['v%(version)s.tar.gz']
checksums = ['56542f4ec2645e18681535dfe980e4c3fb62da51037fba112349a34c4e529357']

builddependencies = [
    ('binutils', '2.40'),
    ('CMake', '3.26.3'),
    ('blt', '0.5.3'),
]

dependencies = [
    ('camp', '2023.06.0'),
    ('CUDA', '12', '', SYSTEM),
]

separate_build_dir = True

configopts = "-DCMAKE_VERBOSE_MAKEFILE=ON "
configopts += "-DBUILD_SHARED_LIBS=ON "
configopts += "-DBLT_SOURCE_DIR=${EBROOTBLT} "

configopts += "-DENABLE_CUDA=ON "
configopts += '-DCMAKE_CUDA_ARCHITECTURES="%(cuda_cc_cmake)s" '

configopts += "-DENABLE_OPENMP=ON "
configopts += "-DENABLE_FORTRAN=OFF "  # req. for Ascent

configopts += "-Dcamp_DIR=${EBROOTCAMP} "

sanity_check_paths = {
    'files': ['include/umpire/Umpire.hpp'],
    'dirs': ['bin', 'include', 'lib'],
}

moduleclass = 'vis'
