# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
name = 'PyTorch'
version = '1.8.1'
versionsuffix = '-Python-%(pyver)s'

homepage = 'https://pytorch.org/'
description = """Tensors and Dynamic neural networks in Python with strong GPU acceleration.
PyTorch is a deep learning framework that puts Python first."""

toolchain = {'name': 'gcccoremkl', 'version': '10.3.0-2021.2.0'}


osdependencies = [OS_PKG_IBVERBS_DEV]
local_cudaver = '11.3'

builddependencies = [
    ('CMake', '3.18.0', '', SYSTEM),
    ('hypothesis', '5.41.5', versionsuffix),
]

dependencies = [
    ('Ninja', '1.10.0'),  # Required for JIT compilation of C++ extensions
    ('CUDA', local_cudaver, '', SYSTEM),
    ('Python', '3.8.5'),
    ('protobuf', '3.17.3'),
    ('protobuf-python', '3.17.3'),
    ('pybind11', '2.5.0', versionsuffix),
    ('SciPy-Stack', '2021', versionsuffix, ('gcccoremkl', '10.3.0-2021.2.0')),
    ('typing-extensions', '3.7.4'),
    ('MPFR', '4.1.0'),
    ('GMP', '6.2.0'),
    ('numactl', '2.0.14', '', SYSTEM),
    ('FFmpeg', '4.3.1'),
    ('Pillow-SIMD', '7.0.0.post3', versionsuffix),
    ('magma', '2.5.4'),
    ('NCCL', '2.10.3-1', '-CUDA-%s' % local_cudaver),
    ('cuDNN', '8.2.1.32', '-CUDA-%s' % local_cudaver, SYSTEM),
    ('LLVM', '10.0.1'),
    ('libvpx', '1.9.0'),
]

# default CUDA compute capabilities to use (override via --cuda-compute-capabilities)
cuda_compute_capabilities = ['7.0', '7.2', '7.5', '8.0', '8.6']

custom_opts = ["USE_CUPTI_SO=1"]

sources = [{
    'filename': '%(name)s-%(version)s.tar.gz',
    'git_config': {
        'url': 'https://github.com/pytorch',
        'repo_name': 'pytorch',
        'tag': 'v%(version)s',
        'recursive': True,
    },
}]
patches = [
    'PyTorch-1.6.0_fix-test-dataloader-fixed-affinity.patch',
    'PyTorch-1.7.0_avoid-nan-in-test-torch.patch',
    'PyTorch-1.7.0_disable-dev-shm-test.patch',
    'PyTorch-1.7.1_correctly-pass-jit_opt_level.patch',
    'PyTorch-1.7.1_disable-tf32-in-distributed-tests.patch',
    'PyTorch-1.7.1_fix-alias-violation-in-bitwise-ops.patch',
    'PyTorch-1.7.1_fix-use-after-destruct-in-cudaipctypes.patch',
    'PyTorch-1.8.0_correct-skip-tests-decorators.patch',
    'PyTorch-1.8.1_dont-sync-gpu-for-cpu-test.patch',
    'PyTorch-1.8.0_fix-noMKL-linear-algebra.patch',
    'PyTorch-1.8.1_dont-use-gpu-ccc-in-test.patch',
    'PyTorch-1.8.1_fix-arange-on-VSX.patch',
    'PyTorch-1.8.1_fix-faulty-asserts-and-skip-test.patch',
    'PyTorch-1.8.1_fix-testnn-on-A100.patch',
    'PyTorch-1.8.1_fix-vsx-vector-functions.patch',
    'PyTorch-1.8.1_honor_shared_cupti-setting.patch',
    'PyTorch-1.8.1_increase-distributed-test-timeout.patch',
    'PyTorch-1.8.1_limit_world_size_for_zero_redundancy_opt_test.patch',
    'PyTorch-1.8.1_skip-complex-grad-check-on-ppc.patch',
    'PyTorch-1.8.1_skip_dist_autograd_sync_streams.patch',
    'PyTorch-1.8.1_skip-nccl-error-tests.patch',
    'PyTorch-1.8.1_fix_test_collect_shards.patch',
]

excluded_tests = {
    'POWER': [
        # https://github.com/pytorch/pytorch/issues/57617
        'test_autograd',
    ],
    '': [
        # Test from this suite timeout often. The process group backend is deprecated anyway
        'distributed/rpc/test_process_group_agent',
        # Potentially problematic save/load issue with test_lstm on only some machines. Tell users to verify save&load!
        # https://github.com/pytorch/pytorch/issues/43209
        'test_quantization',
        # Jsc: as we constantly have the "nvidia driver mismatch", I'm skipping this one.
        'distributed/pipeline/sync/test_transparency',
        'distributed/rpc/test_tensorpipe_agent',
        'distributed/pipeline/sync/skip/test_gpipe',
        'distributed/pipeline/sync/skip/test_leak',
        'distributed/pipeline/sync/test_bugs',
        'distributed/pipeline/sync/test_inplace',
        'distributed/pipeline/sync/test_pipe',
        # These fail on hdfml
        'test_jit_cuda_fuser',
        'test_jit',
        'test_optim',
        'test_jit_profiling',
        'test_jit_legacy',
        'test_jit_fuser_legacy',
        'test_jit_fuser_te',
        'test_tensorexpr',
        # Test_dataloader freezes jurecaDC
        'test_dataloader',
        'distributed/optim/test_zero_redundancy_optimizer',
        'distributed/test_distributed_fork',
        'distributed/test_distributed_spawn',
    ]
}

runtest = 'cd test && PYTHONUNBUFFERED=1 %(python)s run_test.py --continue-through-error  --verbose %(excluded_tests)s'

sanity_check_commands = ["python -c 'import caffe2.python'"]
tests = ['PyTorch-check-cpp-extension.py']

moduleclass = 'devel'
