# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Bundle'

name = 'JupyterKernel-LFortran'
version = '0.30.0'

homepage = 'https://lfortran.org'
description = """LFortran is a modern open-source (BSD licensed)
interactive Fortran compiler built on top of LLVM.
"""

toolchain = {'name': 'GCCcore', 'version': '12.3.0'}
toolchainopts = {'pic': True}

builddependencies = [
    ('binutils', '2.40'),
    ('lfortran', version),
]

components = [
    ('logos', '1.0', {
        'easyblock': 'Binary',
        'sources': [
            {'filename': 'logo-32x32.png.base64', 'extract_cmd': "base64 -d %s > %%(builddir)s/logo-32x32.png"},
            {'filename': 'logo-64x64.png.base64', 'extract_cmd': "base64 -d %s > %%(builddir)s/logo-64x64.png"},
            {'filename': 'logo-128x128.png.base64', 'extract_cmd': "base64 -d %s > %%(builddir)s/logo-128x128.png"},
        ],
        'checksums': [
            'd162d9812aaf7d4714e45613db327da31dcba2110fe81d88a070f1530bcd3ac2',  # logo-32x32.png.base64
            '268ef2bfe4fb722190c43f0b84b36f6ace176914abb0c62f920390251cb86527',  # logo-64x64.png.base64
            '2b999729524a16a31fb2b623b6e02a7b8e9dd502145d92ca1fd7ce6feedfbafe',  # logo-128x128.png.base64
        ],
    }),
]

local_jupyter_path = 'share/jupyter'

modextrapaths = {
    'JUPYTER_PATH': ['share/jupyter'],  # add search path for kernelspecs
}

local_kernel_dir = 'lfortran'
local_kernel_name = 'LFortran-%s' % version

# Ensure that the user-specific $HOME/.local/share/jupyter is always first entry in JUPYTHER_PATH
modluafooter = """
remove_path("JUPYTER_PATH", pathJoin(os.getenv("HOME"), ".local/share/jupyter"))
prepend_path("JUPYTER_PATH", pathJoin(os.getenv("HOME"), ".local/share/jupyter"))
"""

postinstallcmds = [
    # create kernel skeleton
    (
        'mkdir -p  %%(installdir)s/share/jupyter/kernels/%s && '
        'mv %%(installdir)s/logo-32x32.png   %%(installdir)s/share/jupyter/kernels/%s/logo-32x32.png && '
        'mv %%(installdir)s/logo-64x64.png   %%(installdir)s/share/jupyter/kernels/%s/logo-64x64.png && '
        'mv %%(installdir)s/logo-128x128.png %%(installdir)s/share/jupyter/kernels/%s/logo-128x128.png'
    ) % (local_kernel_dir, local_kernel_dir, local_kernel_dir, local_kernel_dir),
    # write kernel.sh
    (
        '{ cat > %%(installdir)s/share/jupyter/kernels/%s/kernel.sh; } << EOF\n'
        '#!/bin/bash \n'
        '\n'
        '# Load required modules \n'
        'module purge\n'
        'module load Stages/${STAGE} \n'
        'module load GCCcore/.12.3.0 \n'
        'module load %s/.%s \n'
        '\n'
        'module load lfortran/%s \n'
        '\n'
        'exec lfortran \$@\n'
        '\n'
        'EOF'
    ) % (local_kernel_dir, name, version, version),
    'chmod +x %%(installdir)s/share/jupyter/kernels/%s/kernel.sh' % local_kernel_dir,

    # Jupyter Kernel: LFortan
    (
        '{ cat > %%(installdir)s/share/jupyter/kernels/%s/kernel.json; } << EOF\n'
        '{\n'
        '  "argv": [\n'
        '    "%%(installdir)s/share/jupyter/kernels/%s/kernel.sh", \n'
        '    "kernel",\n'
        '    "-f",\n'
        '    "{connection_file}"\n'
        '  ],\n'
        '  "display_name": "%s", \n'
        '  "language": "fortran",\n'
        '  "name": "%s"\n'
        '}\n'
        'EOF'
    ) % (local_kernel_dir, local_kernel_dir, local_kernel_name, local_kernel_name),
]

sanity_check_paths = {
    'files': [
        'share/jupyter/kernels/lfortran/kernel.json',
    ],
    'dirs': [
        'share/jupyter/kernels/lfortran/',
    ],
}

moduleclass = 'tools'
