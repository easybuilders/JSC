# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'CMakeMake'

name = 'ParaView'
version = '5.8.1'
versionsuffix = '-Python-%(pyver)s'

homepage = "http://www.paraview.org"
description = """Paraview is a scientific parallel visualizer.
"""


toolchain = {'name': 'gpsmkl', 'version': '2020'}
toolchainopts = {'pic': True, 'usempi': True}

local_dwnlsfx_src = 'download.php?submit=Download&version=v%(version_major_minor)s&type=source&os=Sources&downloadFile='
local_dwnlsfx_dat = 'download.php?submit=Download&version=v%(version_major_minor)s&type=data&os=Sources&downloadFile='
local_dwnlsfx_tdat = 'download.php?submit=Download&version=v%(version_major_minor)s&type=data&os=Sources&downloadFile='

source_urls = [('http://www.paraview.org/paraview-downloads/%s' % local_dwnlsfx_src),
               ('http://www.paraview.org/paraview-downloads/%s' % local_dwnlsfx_dat)]
#              ('http://www.paraview.org/paraview-downloads/%s' % local_dwnlsfx_tdat),

sources = [("ParaView-v%(version)s.tar.gz"),
           ("ParaViewData-v%(version)s.tar.gz")]
#          ("ParaViewTestingData-v%(version)s.tar.gz"),

checksums = [('sha256', '384241fc69bbdb412465dcb5ef88b88ee7ae0e92e7d7cde53be54b19296cf9fa'),
             ('sha256', '9bf8f6acc4533520143ba2e19a04f6c34b1537c0b9c95d8e975623eafe3acea9')]

patches = [
    ("python-5.8.1-simpleCatalystSupport_0.4.patch"),
]

builddependencies = [
    ('CMake', '3.18.0'),
    ('git', '2.28.0'),
]

dependencies = [
    ('Python', '3.8.5'),
    ('Boost', '1.74.0', '', ('gpsmpi', '2020')),
    ('X11', '20200222'),
    ('bzip2', '1.0.8'),
    ('HDF5', '1.10.6'),
    ('FFmpeg', '4.3.1'),
    ('Embree', '3.8.0'),
    ('OSPRay', '1.8.4'),
    ('libpng', '1.6.37'),
    ('expat', '2.2.9'),
    ('freetype', '2.10.1'),
    ('libjpeg-turbo', '2.0.5'),
    ('libxml2', '2.9.10'),
    ('LibTIFF', '4.1.0'),
    ('zlib', '1.2.11'),
    ('netCDF', '4.7.4'),
    ('netCDF-C++4', '4.3.1'),
    ('netCDF-Fortran', '4.5.3'),
    ('mpi4py', '3.0.3', '-Python-%(pyver)s'),
    ('nlohmann-json', '3.9.1'),  # for ParFlow plugin
    # ('VTK', '8.2.0', '-Python-%(pyver)s', ('gcccoremkl', '8.3.0-2019.3.199')),
    # ('VTKm','1.1.0','-AVX2'),
    ('Qt5', '5.14.2'),
    ('SciPy-Stack', '2020', '-Python-%(pyver)s', ('gcccoremkl', '9.3.0-2020.2.254')),
    ('VirtualGL', '2.6.4'),
    ('OpenGL', '2020'),
]

separate_build_dir = True
# parallel = 24

########################################################################################
# check ParaView Superbuild options                                                    #
# https://gitlab.kitware.com/paraview/paraview-superbuild/tree/master                  #
#                                                                                      #
# check ParaView Build documenation                                                    #
# https://gitlab.kitware.com/paraview/paraview/blob/master/Documentation/dev/build.md  #
########################################################################################

configopts = '-DCMAKE_POLICY_DEFAULT_CMP0074=OLD '
configopts += '-DCMAKE_POLICY_DEFAULT_CMP0077=OLD '

# --- general settings --- #
configopts += '-DCMAKE_CXX_STANDARD=11 '
configopts += '-DCXX_STANDARD_REQUIRED=ON '
configopts += '-DCMAKE_CXX_EXTENSIONS=OFF '  # eg.-std=c++11 rather than -std=gnu++11
configopts += '-DVTK_USE_CXX11_FEATURES=ON '
# configopts  = '-DCMAKE_VERBOSE_MAKEFILE=ON '

configopts += '-DBUILD_TESTING=OFF '  # Without internet connection turn off testing
# Or consult https://gitlab.kitware.com/vtk/vtk/blob/master/Documentation/dev/git/data.md
# and download ExternalData to $EASYBUILD_SOURCEPATH and adjust -DExternalData_OBJECT_STORES accordingly
# configopts += '-DExternalData_OBJECT_STORES=%(builddir)s/ExternalData '

configopts += '-DBUILD_EXAMPLES=ON '

configopts += '-DCMAKE_BUILD_TYPE=Release '
configopts += '-DZLIB_LIBRARY_DEBUG=$EBROOTZLIB/lib/libz.so '

# https://forum.openframeworks.cc/t/nvidia-drivers-pthreads-and-segfaults/2524
configopts += '-DCMAKE_CXX_FLAGS="-lpthread $CMAKE_CXX_FLAGS" '
configopts += '-DCMAKE_C_FLAGS="-lpthread $CMAKE_C_FLAGS" '

configopts += '-DPARAVIEW_BUILD_EDITION=CANONICAL '
configopts += '-DPARAVIEW_BUILD_WITH_KITS=OFF '
configopts += '-DPARAVIEW_USE_QT=ON '
configopts += '-DPARAVIEW_QT_VERSION=5 '
configopts += '-DPARAVIEW_ENABLE_WEB=ON '

configopts += '-DPARAVIEW_SHARED_LIBS=ON '
configopts += '-DPARAVIEW_USE_PYTHON=ON '
configopts += '-DPARAVIEW_PYTHON_VERSION=3 '
configopts += "-DPYTHON_EXECUTABLE=$EBROOTPYTHON/bin/python "

configopts += '-DVTK_PYTHON_VERSION=3 '
configopts += '-DVTK_NO_PYTHON_THREADS=OFF '
configopts += '-DVTK_PYTHON_FULL_THREADSAFE=OFF '  # visibility depends on VTK_NO_PYTHON_THREADS=OFF
# If you pass VTK_PYTHON_FULL_THREADSAFE to true, then each and every call to python will be protected with GIL,
# ensuring that you can have eg. other python interpreter in your application and still use python wrapping in vtk.
# configopts += '-DUSE_EXTERNAL_VTK:BOOL=ON '

# --- parallel (on-node) --- #
# https://blog.kitware.com/simple-parallel-computing-with-vtksmptools-2/
configopts += '-DVTK_SMP_IMPLEMENTATION_TYPE=OpenMP '

# --- parallel (distributed) --- #
configopts += '-DMPIEXEC_MAX_NUMPROCS=24 '
configopts += '-DPARAVIEW_USE_MPI=ON '

# --- IO --- #
configopts += '-DXDMF_BUILD_MPI=ON '
configopts += '-DPARAVIEW_ENABLE_XDMF3=ON '

# --- large data --- #
configopts += '-DVTK_USE_64BIT_IDS=ON '
configopts += '-DVTK_USE_LARGE_DATA=ON '

# --- rendering --- #
configopts += '-DVTK_RENDERING_BACKEND:STRING=OpenGL2 '

# OpenGL (hardware)
#  https://kitware.github.io/paraview-docs/latest/cxx/Offscreen.html
#    If VTK_OPENGL_HAS_EGL or VTK_OPENGL_HAS_OSMESA is ON, the build supports headless rendering,
#       otherwise VTK_USE_X must be ON and the build does not support headless,
#       but can still support offscreen rendering.
#    If VTK_USE_X is OFF, then either VTK_OPENGL_HAS_OSMESA or VTK_OPENGL_HAS_EGL must be ON. 
#       Then the build does not support onscreen rendering, but only headless rendering.
#    If PARAVIEW_BUILD_QT_GUI is ON and VTK_USE_X is ON, while ParaView command line tools won't link against
#       or use X calls, Qt will and hence an accessible X server is still needed to run the desktop client.
#    If VTK_OPENGL_HAS_OSMESA is ON, and VTK_USE_X is ON, 
#       then all the OpenGL and OSMesa variables should point to the Mesa libraries.
#    Likewise, if VTK_OPENGL_HAS_EGL is ON and VTK_USE_X is ON, then all the OpenGL and EGL variables
#       should point to the system libraries providing both, typically the NVidia libraries.

configopts += '-DOpenGL_GL_PREFERENCE=GLVND '
configopts += '-DVTK_REPORT_OPENGL_ERRORS_IN_RELEASE_BUILDS=OFF '

configopts += "-DOPENGL_INCLUDE_DIR=${EBROOTOPENGL}/include "
configopts += "-DOPENGL_GLX_INCLUDE_DIR=${EBROOTOPENGL}/include "
configopts += "-DOPENGL_EGL_INCLUDE_DIR=${EBROOTOPENGL}/include "
# configopts += "-DOPENGL_xmesa_INCLUDE_DIR=IGNORE "

configopts += "-DOPENGL_opengl_LIBRARY=${EBROOTOPENGL}/lib/libOpenGL.so.0 "
configopts += "-DOPENGL_gl_LIBRARY=${EBROOTOPENGL}/lib/libGL.so "
configopts += "-DOPENGL_glx_LIBRARY=${EBROOTOPENGL}/lib/libGLX.so.0 "
configopts += "-DOPENGL_glu_LIBRARY=${EBROOTOPENGL}/lib/libGLU.so "
configopts += "-DOPENGL_egl_LIBRARY=${EBROOTOPENGL}/lib/libEGL.so.1 "

# OpenGL over X
configopts += '-DVTK_USE_X=ON '  # OFF:headless rendering
# already considered by Qt (https://gitlab.kitware.com/lorensen/vtk/commit/b29f6db3f746d84f830c81e4212e48db192e4dbb)
configopts += '-DVTK_DEFAULT_RENDER_WINDOW_OFFSCREEN=OFF '
configopts += '-DVTK_OPENGL_HAS_OSMESA=OFF '  # http://www.paraview.org/Wiki/ParaView_And_Mesa_3D

# EGL (off-screen rendering with OpenGL, but without the need for X)
# call pvserver with –egl-device-index=0 or 1 and –disable-xdisplay-test
# configopts += '-DVTK_OPENGL_HAS_EGL=ON '
# configopts += '-DVTK_OPENGL_HAS_OSMESA=OFF '  # http://www.paraview.org/Wiki/ParaView_And_Mesa_3D
# configopts += '-DVTK_USE_X=OFF '
# configopts += '-DVTK_DEFAULT_EGL_DEVICE_INDEX=0 '
# #configopts += '-DEGL_INCLUDE_DIR=${EBROOTOPENGL}/include/EGL/ ' # https://www.khronos.org/registry/EGL/
# #configopts += '-DEGL_LIBRARY=${EBROOTOPENGL}/lib/libEGL.so.1 '
# #configopts += '-DEGL_opengl_LIBRARY=${EBROOTOPENGL}/lib/libOpenGL.so.0 '
# #configopts += '-DEGL_gldispatch_LIBRARY=${EBROOTOPENGL}/lib/libGLdispatch.so.0 ' # <path_to_libGLdispatch.so.0>

# OSMesa (software)
# With OSMesa the DISPLAY variable has no meaning and is not needed
# When ON, implies that ParaView can use OSMesa to support headless modes of operation.
# configopts += '-DVTK_OPENGL_HAS_OSMESA=ON ' # http://www.paraview.org/Wiki/ParaView_And_Mesa_3D
# configopts += '-DVTK_USE_X=OFF '
# configopts += '-DVTK_DEFAULT_RENDER_WINDOW_OFFSCREEN=ON '
# configopts += '-DOSMESA_INCLUDE_DIR=${EBROOTOPENGL}/include '
# configopts += '-DOSMESA_LIBRARY=${EBROOTOPENGL}/lib/libOSMesa.so '

# Raytracing
configopts += '-DPARAVIEW_ENABLE_RAYTRACING=ON '
configopts += '-DVTK_ENABLE_OSPRAY=ON '
configopts += '-DVTK_ENABLE_VISRTX=OFF '

configopts += '-DPARAVIEW_USE_OSPRAY=ON '
configopts += "-Dospray_DIR=${EBROOTOSPRAY} "
configopts += "-Dembree_DIR=${EBROOTEMBREE}/lib64/cmake/embree-3.8.0 "
configopts += '-DModule_vtkRenderingOSPRay=ON '
configopts += '-DVTKOSPRAY_ENABLE_DENOISER=OFF '

# --- extra libs --- #
# configopts += "-DVTKm_DIR=$EBROOTVTKM/lib/cmake/vtkm-1.1/ "
configopts += '-DPARAVIEW_USE_VTKM=ON '
configopts += '-DModule_vtkAcceleratorsVTKm=ON '
configopts += '-DVTKm_Vectorization=AVX2 '
configopts += '-DVTKm_ENABLE_OPENMP=ON '
# configopts += '-DVTKm_ENABLE_MPI=ON '
# configopts += '-DVTKm_ENABLE_LOGGING=ON '
# configopts += '-DVTKm_ENABLE_CUDA=ON '

configopts += "-DFFMPEG_ROOT=$EBROOTFFMPEG "
configopts += '-DPARAVIEW_ENABLE_FFMPEG=ON '
configopts += '-DModule_vtkIOFFMPEG=ON '
configopts += '-DModule_vtkIOVideo=ON '

configopts += '-DModule_SignedTensor=ON '

configopts += '-DModule_vtkDICOM=ON '

# configopts += '-DModule_vtkFiltersMatlab=OFF '
configopts += '-DModule_vtkFiltersReebGraph=ON '
configopts += '-DModule_vtkFiltersSMP=ON '
configopts += '-DModule_vtkFiltersSelection=ON '
# configopts += '-DModule_vtkFiltersStatisticsGnu=OFF '
configopts += '-DModule_vtkFiltersTopology=ON '

# --- coupling --- #
# configopts += '-DPARAVIEW_ENABLE_CATALYST=ON '  # variable is obsolete and no longer has any effect

# --- development & testing --- #
configopts += '-DPARAVIEW_INSTALL_DEVELOPMENT_FILES=ON '
configopts += '-DPARAVIEW_BUILD_DEVELOPER_DOCUMENTATION=OFF '
configopts += '-DPARAVIEW_BUILD_EXAMPLES=OFF '
configopts += '-DPARAVIEW_BUILD_TESTING=OFF '
configopts += '-DPARAVIEW_BUILD_VTK_TESTING=OFF '
configopts += '-DCTEST_TEST_TIMEOUT=10800 '
configopts += '-DExternalData_TIMEOUT_INACTIVITY=0 '

# --- XDMF options --- #
configopts += '-DXDMF_USE_BZIP2=ON '
configopts += '-DXDMF_USE_GZIP=ON '

# --- VTK external libraries --- #
configopts += '-DVTK_USE_SYSTEM_EXPAT=ON '
configopts += '-DVTK_USE_SYSTEM_FREETYPE=ON '
configopts += '-DVTK_USE_SYSTEM_HDF5=ON '
configopts += '-DVTK_USE_SYSTEM_JPEG=ON '
configopts += '-DVTK_USE_SYSTEM_LIBXML2=ON '
configopts += '-DVTK_USE_SYSTEM_MPI4PY=ON '
configopts += '-DVTK_USE_SYSTEM_NETCDF=ON '
configopts += '-DVTK_USE_SYSTEM_PNG=ON '
configopts += '-DVTK_USE_SYSTEM_PYGMENTS=ON '
configopts += '-DVTK_USE_SYSTEM_SIX=ON '
configopts += '-DVTK_USE_SYSTEM_TIFF=ON '
configopts += '-DVTK_USE_SYSTEM_ZLIB=ON '
configopts += '-DNETCDF_CXX_ROOT=$EBROOTNETCDFMINCPLUSPLUS '
configopts += '-DNETCDF_F77_ROOT=$EBROOTNETCDFMINFORTRAN '
configopts += '-DNETCDF_F90_ROOT=$EBROOTNETCDFMINFORTRAN '

# --- ParaView Extra-Reader --- #
configopts += '-DPARAVIEW_PLUGIN_ENABLE_ParFlow=ON '

# https://gitlab.kitware.com/paraview/visitbridge/-/blob/master/databases/CMakeLists.txt
configopts += '-DPARAVIEW_ENABLE_VISITBRIDGE=ON '
configopts += '-DVISIT_BUILD_READER_Nek5000=ON '
# configopts += '-DVISIT_BUILD_READER_Boxlib3D=ON '  # req. external dependency
# configopts += '-DVISIT_BUILD_READER_Mili=ON '  # req. external dependency
# configopts += '-DVISIT_BUILD_READER_Silo=ON '  # req. external dependency

# --- ParaView Plugin Autoload --- #
# configopts += '-DPARAVIEW_AUTOLOAD_PLUGIN_AnalyzeNIfTIIO=ON '
# configopts += '-DPARAVIEW_AUTOLOAD_PLUGIN_SurfaceLIC=ON '  # can result in error
#                     ( 489.245s) [paraview ]vtkOpenGLVertexArrayObj:293 ERR| vtkOpenGLVertexArrayObject (0x3cd7bc0)
#                     ( 489.245s) [paraview ]vtkOpenGLRenderUtilitie:78 WARN| Error setting 'vertexMC' in shader VAO.
#                                https://www.paraview.org/pipermail/paraview/2016-March/036518.html

# --- infos
# -- Plugin: AcceleratedAlgorithms - Testing plugin : Enabled
#  -- Plugin: AdiosReader - Reader for *.bp files based on Adios : Disabled
#  -- Plugin: AdiosStagingReader - Performs staging reads from simulations using ADIOS : Disabled
# -- Plugin: AnalyzeNIfTIIO - Reader/Writer for Analyze and NifTI files : Enabled
# -- Plugin: ArrowGlyph - Glyph with customizable Arrows : Enabled
# -- Plugin: CDIReader - ICON netCDF/CDI Reader : Enabled
# -- Plugin: DigitalRockPhysics - Digital Rock Physics analysis filters : Enabled
# -- Plugin: EmbossingRepresentations - Embossing representations : Enabled
# -- Plugin: EyeDomeLighting - Add 3D View with eye-dome Lighting support : Enabled
# -- Plugin: GMVReader - Reader for binary or ASCII files stored in General Mesh Viewer file format : Enabled
# -- Plugin: GenericIOReader - GenericIO Reader for HACC data : Enabled
# -- Plugin: GeodesicMeasurement - Geodesic Measurement : Enabled
#  -- Plugin: GmshReader - Reader for visualization of high-order polynomial solutions under the Gmsh format : off
#  -- Plugin: InSituExodus - Experimental memory-conserving Exodus II file reader. : Disabled
# -- Plugin: LagrangianParticleTracker - Highly customizable filter for particle tracking : Enabled
# -- Plugin: MooseXfemClip - Clip partial elements generated by MOOSE XFEM : Enabled
# -- Plugin: Moments - Filters for Flux and Circulation Fields : Enabled
# -- Plugin: NetCDFTimeAnnotationPlugin - Provides NetCDF Time Annotation filter : Enabled
#            netcdftime Python module not found! NetCDFTimeAnnotationPlugin not be available until it is installed.
# -- Plugin 'NetCDFTimeAnnotationPlugin' lists plugin library named 'NetCDFTimeAnnotationPlugin'
# -- Plugin: NonOrthogonalSource - Non Orthogonal Source code sample : Enabled
#  -- Plugin: OpenVR - OpenVR Support : Disabled
#  -- Plugin: PythonQtPlugin - PythonQt Plugin : Disabled
# -- Plugin: SLACTools - SLAC Tools : Enabled
# -- Plugin: SierraPlotTools - Sierra Plotting Tools : Enabled
# -- Plugin: StreamLinesRepresentation - Add animated Stream Lines representation for any type of dataset : Enabled
# -- Plugin: StreamingParticles - Render Particles with Streaming : Enabled
# -- Plugin: SurfaceLIC - Add Surface-LIC vector visualization support : Enabled
#  -- Plugin: TemporalParallelismScriptGenerator - Plugin for creating Python spatio-temporal processing scripts : off
# -- Plugin: PacMan - Testing plugin : Enabled
# -- Plugin: ThickenLayeredCells - Filter to thicken layered cells : Enabled
#  -- Plugin: VRPlugin - Virtual Reality Devices and Interactor styles : Disabled
# -- Plugin: VTKmFilters - VTKm many-core filters : Enabled
#  -- Plugin: VaporPlugin - Plugin to read NCAR VDR files : Disabled
# -- Plugin: pvNVIDIAIndeX - Plugin for NVIDIA IndeX : Enabled

# #########################################################
# The ParaView server can be cranky, test downloads are quite often failing
# Using ; insted of && gives a second chance to download the test files, if the first serial attempt would fail.
# prebuildopts = 'make VTKData ;' # only if: configopts += '-DBUILD_TESTING=ON'

postinstallcmds = ['python -m compileall %(installdir)s/lib64/python3.6/site-packages/']
#    'cp -a %(builddir)s/ParaView-v%(version)s/  %(installdir)s/src', # copy source from build dir to install dir
#    '', # move debug info to separate files: 
#          http://stackoverflow.com/questions/866721/how-to-generate-gcc-debug-symbol-outside-the-build-target
#    '', # debugedit -i --base-dir=%(builddir)s/ParaView-v%(version)s --dest-dir= %(installdir)s/src <file.debug>
#        # change path to source in debug info    

modextravars = {'CUDA_VISIBLE_DEVICES': '0,1'}

# OpenSWR fully supports OpenGL 3.0 and most of 3.3, but ParaView requires 3.3 -> clame to fully support 3.3
modextravars = {'MESA_GL_VERSION_OVERRIDE': '3.3'}
modextravars = {'MESA_GLSL_VERSION_OVERRIDE': '330'}

modextravars = {
    #  OpenMP will choose an optimum number of threads by default, which is usually the number of cores
    # 'OMP_NUM_THREADS': '28', # fix number of threads used by paraview filters and parallel sections in the code
    #  threads used by ospray - details https://github.com/ospray/ospray/blob/release-2.0.x/ospray/api/Device.cpp#L88
    #  unset => OSPRAY uses all hardware threads
    # 'OSPRAY_THREADS': '14',     # OSPRay <  2.0
    # 'OSPRAY_NUM_THREADS': '14', # OSPRay >= 2.0
    #  When TBB is used for OSPRAY: tbb::task_scheduler_init::default_num_threads() is default if no OSPRAY_NUM_THREADS
    #    https://github.com/ospray/ospcommon/blob/master/ospcommon/tasking/detail/tasking_system_init.cpp#L47
    #    https://www.threadingbuildingblocks.org/docs/doxygen/a00150.html
    #  more ospray definitions: https://www.ospray.org/documentation.html#environment-variables
    'KNOB_MAX_WORKER_THREADS': '65535',  # max. threads used by OpenSWR (limited by number of hardware threads)
    #  details in https://gitlab.version.fz-juelich.de/vis/vis-software/issues/14
    #  more knob defs: https://github.com/mesa3d/mesa/blob/master/src/gallium/docs/source/drivers/openswr/knobs.rst
}

modextrapaths = {'PYTHONPATH': 'lib64/python%(pyshortver)s/site-packages'}

moduleclass = 'vis'
