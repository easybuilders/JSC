# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Bundle'
name = 'SciPy-Stack'
version = '2018b'
versionsuffix = '-Python-%(pyver)s'

numpyversion = '1.15.2'

homepage = 'http://www.scipy.org'
description = """SciPy Stack is a collection of open source software for scientific computing in Python."""


toolchain = {'name': 'gcccoremkl', 'version': '7.3.0-2019.0.117'}
toolchainopts = { 'pic' : True }

builddependencies = [
    ('unzip', '6.0'),
]

###########################################################################
# WARNING: "six" is picked up from GC3Pie if it is loaded, causing an error
# To proceed, unload GC3Pie
###########################################################################

dependencies = [
    ('Python', '2.7.15'),
    ('freetype', '2.9.1'),
    ('libpng', '1.6.35'),
    ('libreadline', '7.0'),
    ('SQLite', '3.22.0'),
]

common_opts = {
    'req_py_majver': '2',
    'req_py_minver': '0'
}

# this is a bundle of Python packages
exts_defaultclass = 'PythonPackage'
exts_filter = ('python -c "import %(ext_name)s"', '')
exts_download_dep_fail = True

exts_list = [
    ('Cycler', '0.10.0', dict(common_opts.items() + [
        ('source_urls', ['https://pypi.python.org/packages/source/C/Cycler']),
        ('source_tmpl', 'cycler-%(version)s.tar.gz'),
        ('modulename', 'cycler'),
    ])),
    ('mpmath', '1.0.0', dict(common_opts.items() + [
        ('source_urls', ['https://pypi.python.org/packages/source/m/mpmath']),
    ])),
    ('numpy', numpyversion, dict(common_opts.items() + [
        #'source_urls': ['https://pypi.python.org/packages/source/n/numpy'],
        ('source_urls', ['https://github.com/numpy/numpy/releases/download/v%s/' % numpyversion]),
        ('patches', [
            'numpy-1.14.2-mkl.patch',
            'numpy-1.14.2-xhost.patch',
        ]),
    ])),
    ('scipy', '1.1.0', dict(common_opts.items() + [
        ('source_urls', ['https://pypi.python.org/packages/source/s/scipy']),
    ])),
    ('sympy', '1.3', dict(common_opts.items() + [
        ('source_urls', ['https://pypi.python.org/packages/source/s/sympy']),
    ])),
    ('pandas', '0.23.4', dict(common_opts.items() + [
        ('source_urls', ['https://pypi.python.org/packages/source/p/pandas']),
    ])),
    ('backports.functools_lru_cache', '1.5', dict(common_opts.items() + [
        ('source_urls', ['https://pypi.python.org/packages/source/b/backports.functools_lru_cache']),
    ])),
    ('kiwisolver', '1.0.1', dict(common_opts.items() + [
        ('source_urls', ['https://pypi.python.org/packages/source/k/kiwisolver']),
    ])),
    ('matplotlib', '2.2.3', dict(common_opts.items() + [
        ('source_urls', ['https://pypi.python.org/packages/source/m/matplotlib']),
    ])),
    ('xarray', '0.10.8', dict(common_opts.items() + [
        ('source_urls', ['https://pypi.python.org/packages/source/x/xarray']),
    ])),
]

# specify that Bundle easyblock should run a full sanity check, rather than just trying to load the module
full_sanity_check = True

sanity_check_paths = {
    'files': [],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

modextrapaths = {'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages']}

moduleclass = 'vis'
