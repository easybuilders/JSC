# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Tarball'

name = 'NAG'
version = 'Mark24'


homepage = 'http://www.nag.com/numeric/numerical_libraries.asp'
description = """NAG (Numerical Algorithms Group) FORTRAN Library Mark 24 (double precisions). NAG FORTRAN Mark 24 offers more than 1,700 functions covering
a wide range of mathematical and statistical areas. 

The library is licensed. The necessary licence is provided through the
environment variable NAG_KUSARI_FILE. By default the resource manager exports
all variables to the compute nodes, if you disable this behaviour you will need
to make the environment variable known to the compute nodes by adding: 

  --exports=NAG_KUSARI_FILE

in the srun statement.

Compiling and linking can be done in the following manner:

ifort -I$EBROOTNAG/nag_interface_blocks driver.f -L$MKLPATH\
 -lnag -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread


To see how to use a special NAG routine please call the script nag_example, 
e.g.: 

 nag_example e04ucf

An example program and the input data (if necessary) are copied to the current 
directory. The example program is compiled, linked and executed. 

To enhance the performance, the BLAS and LAPACK routines of the MKL are used. 

The complete documentation is available online with

http://www.nag.com/numeric/fl/nagdoc_fl24/html/FRONTMATTER/manconts.html

"""

toolchain = {'name': 'intel-para', 'version': '2017a.1'}
sources = [SOURCELOWER_TAR_GZ]
source_urls = []

modextravars={
    'NAG_KUSARI_FILE': '/usr/local/software/licenses/NAG/license.lic',
}
modtclfooter='setenv MKLPATH "$::env(MKLROOT)/lib/intel64"'
modluafooter='setenv("MKLPATH", pathJoin(os.getenv("MKLROOT"),"lib/intel64"))'
moduleclass = 'numlib'
