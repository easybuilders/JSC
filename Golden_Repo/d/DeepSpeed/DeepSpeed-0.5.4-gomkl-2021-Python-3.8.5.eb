# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'PythonPackage'

name = 'DeepSpeed'
version = '0.5.4'
local_pytorch_version = '1.8.1'
local_tf_version = '2.5.0'
versionsuffix = '-Python-%(pyver)s'
local_pysuffix = '-Python-%(pyver)s'
local_gcccoremkl = ('gcccoremkl', '10.3.0-2021.2.0')
local_cudaver = '11.3'

homepage = 'https://www.deepspeed.ai'
description = """Microsofto DeepSpeed is a deep learning optimization library that makes distributed 
training easy, efficient, and effective."""


toolchain = {'name': 'gomkl', 'version': '2021'}

sources = ['v%(version)s.tar.gz']
source_urls = ['https://github.com/microsoft/DeepSpeed/archive/']

download_dep_fail = True

builddependencies = [
    ('binutils', '2.36.1'),
    ('CMake', '3.18.0', '', SYSTEM),
]

dependencies = [
    ('CUDA', local_cudaver, '', SYSTEM),
    ('Python', '3.8.5'),
    ('PyTorch', local_pytorch_version, local_pysuffix, local_gcccoremkl),
    ('Ninja-Python', '1.10.0', local_pysuffix),
    ('torchvision', '0.9.1', local_pysuffix, local_gcccoremkl),
    ('SciPy-Stack', '2021', local_pysuffix, local_gcccoremkl),
    ('tensorboardX', '2.4', local_pysuffix, local_gcccoremkl),
    ('mpi4py', '3.0.3', versionsuffix, ('gompi', '2020')),  # Adam
    ('tqdm', '4.62.3', local_pysuffix),
    ('NCCL', '2.10.3-1', '-CUDA-%s' % local_cudaver),
    ('libaio', '0.3.112'),
]

# this is a bundle of Python packages
exts_defaultclass = 'PythonPackage'
exts_download_dep_fail = True
exts_default_options = {'source_urls': [PYPI_SOURCE],
                        'use_pip': True,
                        'sanity_pip_check': True,
                        'download_dep_fail': True,
                        'use_pip_for_deps': False,
                        }
exts_list = [
    ('sphinx', '3.5.1', {
        'source_tmpl': 'Sphinx-%(version)s-py3-none-any.whl',
        'unpack_sources': False,
    }),
    ('sphinx-rtd-theme', '0.5.1', {
        'source_tmpl': 'sphinx_rtd_theme-%(version)s-py2.py3-none-any.whl',
        'unpack_sources': False,
    }),
    # Shpinx deps
    ('alabaster', '0.7.12',
     ),
    ('babel', '2.9.0', {
        'source_tmpl': 'Babel-%(version)s-py2.py3-none-any.whl',
        'unpack_sources': False,
    }),
    ('docutils', '0.16',
     ),
    ('imagesize', '1.2.0',
     ),
    ('snowballstemmer', '2.1.0',
     ),
    ('sphinxcontrib-applehelp', '1.0.2', {
        'modulename': False,
    }),
    ('sphinxcontrib-devhelp', '1.0.2', {
        'modulename': False,
    }),
    ('sphinxcontrib-htmlhelp', '1.0.3', {
        'modulename': False,
    }),
    ('sphinxcontrib-jsmath', '1.0.1', {
        'modulename': False,
    }),
    ('sphinxcontrib-qthelp', '1.0.3', {
        'modulename': False,
    }),
    ('sphinxcontrib-serializinghtml', '1.1.4', {
        'modulename': False,
    }),
    # recommonmark deps
    ('commonmark', '0.9.1',
     ),
    # pre-commit deps
    ('cfgv', '3.2.0',
     ),
    ('identify', '1.5.14',
     ),
    ('nodeenv', '1.5.0',
     ),
    ('virtualenv', '20.4.2',
     ),
    # deps of virtualenv
    ('distlib', '0.3.1', {
        'source_tmpl': 'distlib-%(version)s-py2.py3-none-any.whl',
        'unpack_sources': False,
    }),
    ('filelock', '3.0.12',
     ),
    # Other deps from DeepSpeed
    ('pre-commit', '2.10.1', {
        'source_tmpl': 'pre_commit-%(version)s-py2.py3-none-any.whl',
        'unpack_sources': False,
    }),
    ('clang-format', '9.0.0', {
        'source_tmpl': 'clang_format-%(version)s-py2.py3-none-manylinux1_x86_64.whl',
        'unpack_sources': False,
    }),
    ('recommonmark', '0.7.1',
     ),
    ('triton', '0.4.2', {
        # 'triton-%(version)s-cp38-cp38-manylinux-2010_x86_64.whl',
        'source_tmpl': 'triton-0.4.2-cp38-cp38-manylinux2010_x86_64.whl',
        'unpack_sources': False,
    }),
]

patches = ['tensorboard_version.patch',
           ]

# Deepspeed specifies them ; -separated, not ,.
preinstallopts = ' FORCE_CUDA=1 TORCH_CUDA_ARCH_LIST="7.0;7.5;8.0;8.6" '
preinstallopts += 'DS_BUILD_OPS=1 '
preinstallopts += 'DS_BUILD_FUSED_ADAM=1 DS_BUILD_FUSED_LAMB=1 DS_BUILD_TRANSFORMER=1 '
preinstallopts += 'DS_BUILD_STOCHASTIC_TRANSFORMER=1 DS_BUILD_UTILS=1 '
preinstallopts += 'CUDA_HOME="$EBROOTCUDA" '

installopts = '-v'

use_pip = True
sanity_pip_check = True

moduleclass = 'devel'
