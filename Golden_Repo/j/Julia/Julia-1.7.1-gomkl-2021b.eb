# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
name = 'Julia'
version = '1.7.1'

homepage = 'https://julialang.org/'
description = """Julia was designed from the beginning for high performance.
Julia programs compile to efficient native code for multiple platforms via LLVM
"""

toolchain = {'name': 'gomkl', 'version': '2021b'}
toolchainopts = {'usempi': True, 'pic': True}

source_urls = ['https://github.com/JuliaLang/julia/releases/download/v%(version)s/']
sources = ['julia-%(version)s-full.tar.gz']
checksums = ['add869121b7e788ff487a234fd39484469dbb3ded29b17041c63c4757515dd58']

builddependencies = [
    ('binutils', '2.37'),
    ('git', '2.33.1', '-nodocs'),
    ('CMake', '3.21.1', '', SYSTEM),
]

dependencies = [
    ('Python', '3.9.6'),
    ('GMP', '6.2.1'),
    ('CUDA', '11.5', '', SYSTEM),
    ('SciPy-bundle', '2021.10', '', ('gcccoremkl', '11.2.0-2021.4.0')),
    ('matplotlib', '3.4.3', '', ('gcccoremkl', '11.2.0-2021.4.0')),
    ('OpenGL', '2021b'),
    ('OpenSSL', '1.1', '', SYSTEM),
]

skipsteps = ['configure']
buildopts = " USE_SYSTEM_GMP=1 USE_INTEL_MKL=1 "
installopts = "prefix=%(installdir)s "

arch_name = 'gpu'

exts_defaultclass = 'JuliaPackage'
exts_list = [
    # General Purpose
    ('PackageCompiler.jl', '2.0.2', {
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/JuliaLang/PackageCompiler.jl/archive/'],
        'checksums': ['1f82248057d57acbcb41bc7420d2955174cafa07865fca7e2e6f92a552fca841'],
    }),
    ('HTTP.jl', '0.9.17', {
        'source_tmpl': 'v0.9.17.tar.gz',
        'source_urls': ['https://github.com/JuliaWeb/HTTP.jl/archive/'],
        'checksums': ['ce66e5a58c5439c9716e44d97fd03e9856718755dd2276789b5097eeb8d31ca4'],
    }),
    ('Parsers.jl', '2.1.2', {
        'source_tmpl': 'v2.1.2.tar.gz',
        'source_urls': ['https://github.com/JuliaData/Parsers.jl/archive/'],
        'checksums': ['5c9dcf1607d6f7d199c0d3e1f58c7235b63a6fa9d14d41e41d222a7943f73558'],
    }),
    ('VersionParsing.jl', '1.2.0', {
        'source_tmpl': 'v1.2.0.tar.gz',
        'source_urls': ['https://github.com/JuliaInterop/VersionParsing.jl/archive/'],
        'checksums': ['329f62b69dac7675cd12ede1d91fc1da2147f3e74c0d86606cb616b4d2719f51'],
    }),
    ('JSON.jl', '0.21.2', {
        'source_tmpl': 'v0.21.2.tar.gz',
        'source_urls': ['https://github.com/JuliaIO/JSON.jl/archive/'],
        'checksums': ['505668060495089bde44e14f5865425654e17715158ea80c8e0badcfd5d2893d'],
    }),
    ('WebIO.jl', '0.8.16', {
        'source_tmpl': 'v0.8.16.tar.gz',
        'source_urls': ['https://github.com/JuliaGizmos/WebIO.jl/archive/'],
        'checksums': ['c727d9f015f3c9b54972b2d10738ed26bc1ddd8a5fcb1fac7f26d4e665193a4e'],
    }),
    ('ProgressMeter.jl', '1.7.1', {
        'source_tmpl': 'v1.7.1.tar.gz',
        'source_urls': ['https://github.com/timholy/ProgressMeter.jl/archive/'],
        'checksums': ['b9eaea12ec5b4e8e58069f9476321e23c5434027218cf596acbfe4ae9222c694'],
    }),
    ('Conda.jl', '1.6.0', {
        'source_tmpl': 'v1.6.0.tar.gz',
        'source_urls': ['https://github.com/JuliaPy/Conda.jl/archive/'],
        'checksums': ['f1bd98719c059dfc115631bc23460910b7e2ae557d3246002936f2b3750f98b7'],
    }),
    ('PyCall.jl', '1.92.5', {
        'source_tmpl': 'v1.92.5.tar.gz',
        'source_urls': ['https://github.com/JuliaPy/PyCall.jl/archive/'],
        'checksums': ['b441e41c5af1cd7ac39e200902b4f070138a2219fad46d6e49501a192af6775a'],
    }),
    ('LaTeXStrings.jl', '1.3.0', {
        'source_tmpl': 'v1.3.0.tar.gz',
        'source_urls': ['https://github.com/stevengj/LaTeXStrings.jl/archive/'],
        'checksums': ['9754cee3991d3a92827112b60064b381bec62e383634984dc0cad1fbc3301bda'],
    }),
    ('DocumentFormat.jl', '3.2.4', {
        'source_tmpl': 'v3.2.4.tar.gz',
        'source_urls': ['https://github.com/julia-vscode/DocumentFormat.jl/archive/'],
        'checksums': ['d282bb08aded9c9f46731837022d3667fa94f9a2e7446cfcf3e33d54d0bc99e2'],
    }),
    # Data Science
    ('CSV.jl', '0.9.1', {
        'source_tmpl': 'v0.9.1.tar.gz',
        'source_urls': ['https://github.com/JuliaData/CSV.jl/archive/'],
        'checksums': ['1c8a67f4f06cb4c85349d2901f486a8d4d5d9b0c5a453876013d49fd6e56f40c'],
    }),
    ('DataFrames.jl', '1.2.2', {
        'source_tmpl': 'v1.2.2.tar.gz',
        'source_urls': ['https://github.com/JuliaData/DataFrames.jl/archive/'],
        'checksums': ['9bd034e4185f0b8d5e85bcc0ea3596c068b7387acef2c3b2f92bb800581ab6e7'],
    }),
    ('Arrow.jl', '2.2.0', {
        'source_tmpl': 'v2.2.0.tar.gz',
        'source_urls': ['https://github.com/JuliaData/Arrow.jl/archive/'],
        'checksums': ['af0d92896fda48eb559971529cfb30be5cf5c4a3fa5e67723ae50c22ec32a67f'],
    }),
    ('OnlineStats.jl', '1.5.13', {
        'source_tmpl': 'v1.5.13.tar.gz',
        'source_urls': ['https://github.com/joshday/OnlineStats.jl/archive/'],
        'checksums': ['72d38bbdd65caf069dbd5d216658334817eeae5d0dae03f483fb3459cf884edc'],
    }),
    ('Query.jl', '1.0.0', {
        'source_tmpl': 'v1.0.0.tar.gz',
        'source_urls': ['https://github.com/queryverse/Query.jl/archive/'],
        'checksums': ['76c05e3ffc8f3c2ce2cd3f6824f40a107cdba6fc58c4ce42de2289132de988e0'],
    }),
    # Scientific Domains
    ('GSL.jl', '1.0.1', {
        'source_tmpl': 'v1.0.1.tar.gz',
        'source_urls': ['https://github.com/JuliaMath/GSL.jl/archive/refs/tags/'],
        'checksums': ['91a5acbb752610c5989b9acef126f2231f612debb7ba6d1d4625c68d2af5776e'],
    }),
    ('DifferentialEquations.jl', '6.20.0', {
        'source_tmpl': 'v6.20.0.tar.gz',
        'source_urls': ['https://github.com/SciML/DifferentialEquations.jl/archive/'],
        'checksums': ['6cb82c5df713c762bdbdd2e3e320c2f8e7bdf47d0a840e229d044223f408a067'],
    }),
    ('Distributions.jl', '0.24.18', {
        'source_tmpl': 'v0.24.18.tar.gz',
        'source_urls': ['https://github.com/JuliaStats/Distributions.jl/archive/'],
        'checksums': ['471464cf0a60be21338b9252464e5cf9f0f34a48ade1d24270fd27439e6218ac'],
    }),
    ('Optim.jl', '1.5.0', {
        'source_tmpl': 'v1.5.0.tar.gz',
        'source_urls': ['https://github.com/JuliaNLSolvers/Optim.jl/archive/'],
        'checksums': ['a26b2e2f006494c26d3ec94c2c019e3e63017cf83b94dda25edf53210200bca7'],
    }),
    ('IterativeSolvers.jl', '0.9.2', {
        'source_tmpl': 'v0.9.2.tar.gz',
        'source_urls': ['https://github.com/JuliaLinearAlgebra/IterativeSolvers.jl/archive/'],
        'checksums': ['95fbfa39aa68e989ae6bad2f51ce0fe5635ba3f3375d0ea4d9422e77ff924a9b'],
    }),
    ('AbstractFFTs.jl', '1.0.1', {
        'source_tmpl': 'v1.0.1.tar.gz',
        'source_urls': ['https://github.com/JuliaMath/AbstractFFTs.jl/archive/'],
        'checksums': ['91a5acbb752610c5989b9acef126f2231f612debb7ba6d1d4625c68d2af5776e'],
    }),
    ('OrdinaryDiffEq.jl', '5.68.0', {
        'source_tmpl': 'v5.68.0.tar.gz',
        'source_urls': ['https://github.com/SciML/OrdinaryDiffEq.jl/archive/'],
        'checksums': ['f6ba667089421cc0eac68036a39eb041b2e4c8bb6f72c19ea98cc5e229c97070'],
    }),
    ('SpecialFunctions.jl', '1.8.1', {
        'source_tmpl': 'v1.8.1.tar.gz',
        'source_urls': ['https://github.com/JuliaMath/SpecialFunctions.jl/archive/'],
        'checksums': ['94d061a62a379024010b9b4aac5eee075133617c683e27681f8bedcf3f16c76e'],
    }),
    ('JuMP.jl', '0.22.1', {
        'source_tmpl': 'v0.22.1.tar.gz',
        'source_urls': ['https://github.com/jump-dev/JuMP.jl/archive/'],
        'checksums': ['96b77527641aa5771240dba23290727c84da3c631e2cc5a1a85342262bf8beee'],
    }),
    # Visualization
    ('GR.jl', '0.62.1', {
        'source_tmpl': 'v0.62.1.tar.gz',
        'source_urls': ['https://github.com/jheinen/GR.jl/archive/'],
        'checksums': ['7da2bb2b689a5e6ea123625f6332ca7e2d71f9c31f3ea5a284b540df484a67b6'],
    }),
    ('PlotlyJS.jl', '0.18.8', {
        'source_tmpl': 'v0.18.8.tar.gz',
        'source_urls': ['https://github.com/JuliaPlots/PlotlyJS.jl/archive/'],
        'checksums': ['4ede1001b496420dc128b8f9fd52c762ca2a554c0b4a8e53c151783c988447c0'],
    }),
    ('PyPlot.jl', '2.10.0', {
        'source_tmpl': 'v2.10.0.tar.gz',
        'source_urls': ['https://github.com/JuliaPy/PyPlot.jl/archive/'],
        'checksums': ['49a5be38b894a31843b1d4c8eba849c3581d0505d9325f76d6c471a947338fe3'],
    }),
    ('Plots.jl', '1.24.2', {
        'source_tmpl': 'v1.24.2.tar.gz',
        'source_urls': ['https://github.com/JuliaPlots/Plots.jl/archive/'],
        'checksums': ['a021e6ed039616c2a407fe479da83baf8be33902eb88db9d232e5d5fed34b8c1'],
    }),
    ('UnicodePlots.jl', '2.5.0', {
        'source_tmpl': 'v2.5.0.tar.gz',
        'source_urls': ['https://github.com/Evizero/UnicodePlots.jl/archive/'],
        'checksums': ['aec66957ff453f85195001022d9b4e5fd9beaa38e5b66d1a2c85d3b3b6479eeb'],
    }),
    ('StatsPlots.jl', '0.14.29', {
        'source_tmpl': 'v0.14.29.tar.gz',
        'source_urls': ['https://github.com/JuliaPlots/StatsPlots.jl/archive/'],
        'checksums': ['d3ff91e1d8d6e16136607cb7ceae0aaa675adfe5ceb27ac55020981ef6c09560'],
    }),
    # MPI
    ('MPI.jl', '0.19.2', {
        'mpi_path': '$EBROOTOPENMPI',
        'mpiexec': 'srun',
        'source_tmpl': 'v0.19.2.tar.gz',
        'source_urls': ['https://github.com/JuliaParallel/MPI.jl/archive/'],
        'checksums': ['5edcc1baf35c5535c1688c45b355bc67d91ac95ea717f7f92c4f26a6e2ff2283'],
    }),
    # CUDA
    ('CUDA.jl', '3.5.0', {
        'source_tmpl': 'v3.5.0.tar.gz',
        'source_urls': ['https://github.com/JuliaGPU/CUDA.jl/archive/'],
        'checksums': ['4c09ccfa78c5b9fba183edf2faa96b015c218305a0ae3ba318df5437e1746818'],
    }),
]

modextravars = {
    'JULIA_MPICC': 'mpicc',
    'JULIA_MPIEXEC': 'srun',
    #  'JULIA_MPIEXEC_ARGS': '',
    'JULIA_MPI_ABI': 'OpenMPI',
    'JULIA_MPI_BINARY': 'system',
    'JULIA_MPI_PATH': '$::env(EBROOTOPENMPI)',
    'JULIA_CUDA_USE_BINARYBUILDER': 'false',
}

sanity_check_paths = {
    'files': ['bin/julia', 'include/julia/julia.h', 'lib/libjulia.so'],
    'dirs': ['bin', 'etc', 'include', 'lib', 'share']
}

moduleclass = 'lang'
