# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
# Bundle containing ROCm framework and libraries
#
# The Arch Linux AUR recipes are the reference: https://github.com/rocm-arch/rocm-arch
#
# TODO: hipify-clang needs CUDA (headers?), right now CUDA is excluded in the mi200 partition. Maybe hidden CUDA or
#       allow installation or make a custom package?
# TODO: missing: hipify-clang (see above)
#                miopen-opencl (I think it's either miopen-hip or miopen-opencl but not both)
#                mivisionx (started writing component, but it needs Qt5,OpenCV,FFmpeg and would pull in
#                           CUDA which is disallowed)
#                rocm-validation-suite (started writing component, but need to install pciutils-devel rpm)
#                gpufort (github.com/RocmSoftwarePlatform/openacc-fortran-interfaces.git is required but
#                         is private, ask AMD for access? )
#                        NOTE: This might actually be outdated, but gpufort seems like just a python script?
#
# TODO: missing pkgs that just provide some version numbers:
#       rocm-core
#       rocm-hip-libraries
#       rocm-hip-runtime
#       rocm-hip-sdk
#       rocm-language-runtime
#       rocm-opencl-sdk
# TODO: sanity-check existence of all the libraries
# TODO: some modextrapaths, modextravars might need to be set?
# TODO: Some components are a bit hacked together, writing an easyblock might be better (hipamd, openmp-extras, ...)
# TODO: check if any package is unusable when not compiled on a system with a GPU (code auto-detects GPU).
#       There are some tricks wrt rocm_agent_enumerator (ROCM_TARGET_LST env. var. or target.lst in the same dir)
#
# Other notes:
#  - MIOpen __hipGetPCH missing might be due to some flag in hipamd, for now the patch disables PCH until v5.3
#  - AMDMIGraphX is made to link explicitly against mkl through configopts - this should be handled by cmake
#    either in Blaze or AMDMIGraphX. maybe a patch?

easyblock = 'Bundle'
name = 'ROCm'
version = '5.4.0'

homepage = 'https://github.com/RadeonOpenCompute/ROCm'
description = """AMD ROCm - Open Source Platform for HPC and Ultrascale GPU Computing."""


# toolchain = {'name': 'GCCcore', 'version': '11.2.0'}
# rocALUTION asks for mpi (I think it can build without it though)
# OpenMPI needs ROCm at compile time to support it, so this might be problematic ("ROCm-Bare" package containing only
# what OpenMPI needs?)
toolchain = {'name': 'gobliflaf', 'version': '11.2.0-3.2'}


builddependencies = [
    ("binutils", "2.37"),
    ("CMake",    "3.23.1"),
    ("Ninja",    "1.10.2"),
    ("makeinfo", "6.8"),           # ROCgdb complains about it missing
    # roctracer breaks without this (also the newer robotpy-cppheaderparser doesn't seem to work)
    ("CppHeaderParser", "2.7.4"),
    # MIOpen needs some files that have to be pulled with git lfs
    ("git-lfs", "2.11.0", '', SYSTEM),
]

dependencies = [
    ("libdrm", "2.4.110"),  # ROCT complains about libdrm not being found
    ("OpenGL", "2021b"),    # hip needs mesa
    ("Python", "3.9.6"),    # rocFFT asks for python headers
    ("guile",  "2.0.14"),   # ROCgdb wants guile-2.0
    ("MPFR",   "4.1.0"),    # also ROCgdb
    ("source-highlight",  "3.1.9"),      # also ROCgdb
    ("babeltrace",        "1.5.8"),      # also ROCgdb
    ("fmt",               "8.1.1"),      # rocSOLVER uses fmt for something
    ("protobuf",          "3.17.3"),     # AMDMIGraphX and some others
    ("nlohmann-json",     "3.10.4"),     # AMDMIGraphX
    ("msgpack-c",         "4.0.0"),      # AMDMIGraphX
    ("msgpack-cpp",       "4.1.1"),      # AMDMIGraphX
    ("pybind11",          "2.7.1"),      # AMDMIGraphX
    ("Blaze",             "3.8.1"),            # AMDMIGraphX
    # dependency
    # ("FFmpeg",            "4.4.1"),                              # MIVisionX
    # ("OpenCV",            "4.5.4", '', ('gcccoremkl','2021b')),  # MIVisionX
    # ("Qt5",               "5.15.2"),                             # MIVisionX
    ("OpenCL-Headers",    "2022.05.18"),  # OpenCL runtime and miopengemm
    ("OpenCL-ICD-Loader", "2022.05.18"),  # OpenCL runtime and miopengemm
]

default_easyblock = 'CMakeNinja'
github_account = "RadeonOpenCompute"

local_gpus = ["gfx90a:xnack-", "gfx90a:xnack+"]
local_gpuarchs = ["gfx90a"]
local_first_gpu = local_gpus[0]
local_amdgpu_targets = ";".join(local_gpus)
local_hip_targets = " ".join(local_gpus)
local_gpuarchs_list = " ".join(local_gpuarchs)

# composable_kernel commit hash (currently not following rocm versioning scheme)
local_ck_commit = "d156709432b363a24e19dd33af632c3e328fdac5"

components = [
    ('ROCT-Thunk-Interface', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['690a78a6e67ae2b3f518dbc4a1e267237d6a342e1063b31eef297f4a04d780f8'],
         'srcdir':     '%(name)s-rocm-%(version)s'
     }),
    ('rocm-cmake', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': ['617faa9a1e51db3c7a59bd0393e054ab67e57be357d59cb0cd9b677f47824946'],
         'srcdir':    '%(name)s-rocm-%(version)s'
     }),
    ('llvm-project', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-llvm-%(version)s.tar.gz',
         }],
         'checksums': ['ff54f45a17723892cd775c1eaff9e5860527fcfd33d98759223c70e3362335bf'],
         'srcdir':    '%(name)s-rocm-%(version)s/llvm',
         'install_target_subdir': 'llvm',
         'configopts': (" -DGCC_INSTALL_PREFIX=$EBROOTGCCCORE "
                        " -DLLVM_HOST_TRIPLE=x86_64-linux-gnu "
                        " -DLLVM_BUILD_UTILS=ON "
                        " -DLLVM_ENABLE_BINDINGS=OFF "
                        " -DOCAMLFIND=NO "
                        " -DLLVM_ENABLE_OCAMLDOC=OFF "
                        " -DLLVM_INCLUDE_BENCHMARKS=OFF "
                        " -DLLVM_BUILD_TESTS=OFF "
                        " -DLLVM_ENABLE_PROJECTS='llvm;clang;compiler-rt;lld' "
                        " -DLLVM_TARGETS_TO_BUILD='AMDGPU;X86' "
                        " -DLLVM_BINUTILS_INCDIR=$EBROOTBINUTILS/include "
                        # use dlopened libhsa, otherwise if there is libhsa-runtime64.so
                        # somewhere on the system it will link against it
                        " -DAMDGPU_ARCH_FORCE_DLOPEN_LIBHSA=ON ")
     }),
    ('ROCm-Device-Libs', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['d68813ded47179c39914c8d1b76af3dad8c714b10229d1e2246af67609473951'],
         'srcdir':     '%(name)s-rocm-%(version)s',
         'configopts': " -DLLVM_DIR=%(installdir)s/llvm/lib/cmake/llvm "
     }),
    ('ROCm-CompilerSupport', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['f4b83b27ff6195679d695c3f41fa25456e9c50bae6d978f46d3541b472aef757'],
         'srcdir':     '%(name)s-rocm-%(version)s/lib/comgr',
         'preconfigopts': "module unload ROCm-rtonly && ",
         'configopts': " -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
     }),
    ('hsa-amd-aqlprofile', version,
     {
         'easyblock':   "Binary",
         'source_urls': ['https://repo.radeon.com/rocm/rhel8/%(version_major_minor)s/main/'],
         'sources':     [{
             'download_filename': 'hsa-amd-aqlprofile-1.0.0.50400-72.el8.x86_64.rpm',
             'filename':          '%(name)s-%(version)s.rpm',
             'extract_cmd':       'rpm2cpio  %s > data.cpio'
         }],
         'checksums':   ['1b2121a891a2a9385ac3db3cabc3fcdd27af9374b0ac0abad740580159e54d5a'],
         'install_cmd': """
                 mkdir -p %(builddir)s/%(name)s
                 cpio -idmvD %(builddir)s/%(name)s < data.cpio;
                 cp -r %(builddir)s/%(name)s/opt/rocm-%(version)s/%(name)s/ %(installdir)s/hsa
                 cp -r %(builddir)s/%(name)s/opt/rocm-%(version)s/lib/ %(installdir)s/lib
                 cp -r %(builddir)s/%(name)s/opt/rocm-%(version)s/share/ %(installdir)s/share
             """
     }),
    ('ROCR-Runtime', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['476cd18500cc227d01f6b44c00c7adc8574eb8234b6b4daefc219650183fa090'],
         'srcdir':     '%(name)s-rocm-%(version)s/src',
         'preconfigopts': "export ROCM_PATH=%(installdir)s && ",
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DCMAKE_CXX_FLAGS='-DNDEBUG' "),
         'prebuildopts': "export ROCM_PATH=%(installdir)s && ",
     }),
    ('rocminfo', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [],
         'checksums': [
             '79123b92992cce75ae679caf9a6bf57b16d24e96e54b36eb002511f3800e29c6',
         ],
         'srcdir':     '%(name)s-rocm-%(version)s',
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DROCRTST_BLD_TYPE=Release "
                        " -DCMAKE_INSTALL_LIBDIR=lib ")
     }),
    ('hipamd', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/HIP/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'hip-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/RadeonOpenCompute/ROCm-OpenCL-Runtime/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-opencl-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/ROCclr/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocclr-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/hipamd/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'hipamd-%(version)s.tar.gz',
         }],
         'patches': [
             ('hipamd-5.4.0-unconst-then-reinterpret.patch',
              'hipamd-rocm-%(version)s'),
         ],
         'checksums': [
             'e290f835d69ef23e8b5833a7e616b0a989ff89ada4412d9742430819546efc6c',
             'a294639478e76c75dac0e094b418f9bd309309b07faf6af126cdfad9aab3c5c7',
             '46a1579310b3ab9dc8948d0fb5bed4c6b312f158ca76967af7ab69e328d43138',
             'c4b79738eb6e669160382b6c47d738ac59bd493fc681ca400ff012a2e8212955',

             '274869fef3bb9e0efdcc4383a77960405048f3f877a2b587d3db9d401de7e62a',
         ],
         'srcdir':                'hipamd-rocm-%(version)s/',
         'install_target_subdir': 'hip',
         'preconfigopts': "export ROCM_PATH=%(installdir)s && ",
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DHIP_COMMON_DIR=%(builddir)s/HIP-rocm-%(version)s/ "
                        " -DAMD_OPENCL_PATH=%(builddir)s/ROCm-OpenCL-Runtime-rocm-%(version)s/ "
                        " -DROCCLR_PATH=%(builddir)s/ROCclr-rocm-%(version)s/ "
                        " -DROCCLR_INCLUDE_PATH=%(builddir)s/ROCclr-rocm-%(version)s "
                        " -DHIP_PLATFORM=amd "
                        " -DCMAKE_C_COMPILER=%(installdir)s/llvm/bin/clang "
                        " -DCMAKE_CXX_COMPILER=%(installdir)s/llvm/bin/clang++ "
                        " -DCMAKE_SHARED_LINKER_FLAGS=\"$LDFLAGS -fuse-ld=lld\" "
                        " -DCMAKE_EXE_LINKER_FLAGS=\"$LDFLAGS -fuse-ld=lld\" "
                        " -DCMAKE_INSTALL_LIBDIR=lib "),
         'prebuildopts': "export ROCM_PATH=%(installdir)s && ",
         'installopts': "install && " + "\n".join([
             "sed -i '/__noinline__/d' %(installdir)s/hip/include/hip/amd_detail/host_defines.h",
             "install -d %(installdir)s/bin",
             "install -d %(installdir)s/include",
             "install -d %(installdir)s/lib/cmake",
             ("for binary in hipcc hipconfig hipcc.pl hipconfig.pl; "
              "  do ln -s %(installdir)s/hip/bin/$binary %(installdir)s/bin/$binary; "
              "done"),
             "ln -s %(installdir)s/hip/lib/libamdhip64.so %(installdir)s/lib/libamdhip64.so",
             "ln -s %(installdir)s/hip/include/hip %(installdir)s/include/hip",
             "ln -s %(installdir)s/hip/lib/cmake/hip %(installdir)s/lib/cmake/hip",
             "ln -s %(installdir)s/hip/lib/cmake/hip-lang %(installdir)s/lib/cmake/hip-lang",
         ]) + "\n echo "
     }),
    ('llvm-project-mlir', version,
     {
         'source_urls': ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         # fix stray ";" in linker flags
         'patches':   [
         ],
         'checksums': [
             '3823f455ee392118c3281e27d45fa0e5381f3c4070eb4e06ba13bc6b34a90a60',
         ],
         'srcdir':         'rocMLIR-rocm-%(version)s',
         'preconfigopts':  'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'prebuildopts':   'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'preinstallopts': 'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'configopts': (
             " -DMLIR_MIOPEN_SQLITE_ENABLED=On "
             " -DBUILD_FAT_LIBMLIRMIOPEN=1 "
             " -DBUILD_FAT_LIBROCKCOMPILER=1 "
             " -DROCM_PATH=%(installdir)s "
             " -DLLVM_TARGETS_TO_BUILD='AMDGPU;X86' ") +\
         " -DROCM_TEST_CHIPSET=%s " % local_first_gpu,
     }),
    ('rocm_smi_lib', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('https://patch-diff.githubusercontent.com/raw/RadeonOpenCompute/rocm_smi_lib/pull/107.patch',
              '%(name)s-rocm-%(version)s')],
         'checksums': [
             '4b110c9ec104ec39fc458b1b6f693662ab75395b75ed402b671d8e58c7ae63fe',
             'f1d66af131833a55bcfcac63e9af7194cc38cb1bb583fb74427e4f0f89719910',
         ],
         'srcdir':     '%(name)s-rocm-%(version)s',
         'configopts': (" -DCMAKE_SHARED_LINKER_FLAGS=\"-fuse-ld=bfd\" "
                        " -DCMAKE_MODULE_LINKER_FLAGS=\"-fuse-ld=bfd\" "
                        " -DCMAKE_EXE_LINKER_FLAGS=\"-fuse-ld=bfd\" ")
     }),
    ('atmi', version,
     {
         'easyblock': 'CMakeMake',  # Uses cmake in a crappy way breaking ninja
         'sources':   [{
             'source_urls':       [GITHUB_SOURCE],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             'b5cce10d7099fecbb40a0d9c2f29a7675315471fe145212b375e37e4c8ba5618',
         ],
         'srcdir':                '%(name)s-rocm-%(version)s/src',
         'install_target_subdir': 'atmi',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DROCM_VERSION=\"%(version)s\" " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; "
     }),
    ('ROCdbgapi', version,
     {
         'source_urls': ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('https://patch-diff.githubusercontent.com/raw/ROCm-Developer-Tools/ROCdbgapi/pull/4.patch',
              '%(name)s-rocm-%(version)s')],
         'checksums': [
             '895eb7056864daada40c3f9cd37645b0bdf4b6dc408b5f8cc974fc4cd9ab7ccb',
             '91b29cafec79441e6c311d50ca5653ec8315c401b1cc0f93ce65bfdfdda2e04e',
         ],
         'srcdir': '%(name)s-rocm-%(version)s',
     }),
    ('rocr_debug_agent', version,
     {
         'source_urls': ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':     ['94bef73ea0a6d385dab2292ee591ca1dc268a5585cf9f1b5092a1530949f575e'],
         'srcdir':         '%(name)s-rocm-%(version)s',
         'preconfigopts':  'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'prebuildopts':   'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'preinstallopts': 'export ROCM_PATH=%(installdir)s; export HIP_PATH=%(installdir)s/hip;  ',
         'configopts':     " -DCMAKE_HIP_ARCHITECTURES=\"%s\" " % local_hip_targets +\
                           (" -DCMAKE_PREFIX_PATH=\"%(installdir)s;%(installdir)s/hip\" "
                            " -DCMAKE_MODULE_PATH=\"%(installdir)s/hip/cmake;%(installdir)s/hip/lib/cmake/hip\" ")
     }),
    ('ROCgdb', version,
     {
         'easyblock':   'ConfigureMake',
         'source_urls': ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('rocm-gdb-5.3.0-rocm-dbgapi-lib64.patch', '%(name)s-rocm-%(version)s'),
         ],
         'checksums':      [
             '7ee984d99818da04733030b140c1f0929639bc719a5e418d53cc2c2a8cbc9a79',
             '3ade58f3a1ac81f1fe7d324bcb83e82670a25159acff7ec1d024056c545ad4bd',
         ],
         'preconfigopts':  'cd %(name)s-rocm-%(version)s && ',
         'prebuildopts':   'cd %(name)s-rocm-%(version)s && ',
         'preinstallopts': 'cd %(name)s-rocm-%(version)s && ',
         'configopts': (
             "  --program-prefix=roc "
             "  --disable-shared "
             "  --disable-nls "
             "  --disable-gprofng "
             "  --enable-source-highlight "
             "  --enable-tui "
             "  --enable-64-bit-bfd "
             "  --enable-targets=\"x86_64-linux-gnu,amdgcn-amd-amdhsa\" "
             "  --with-system-readline "
             "  --with-python=$EBROOTPYTHON/bin/python3 "
             "  --with-rocm-dbgapi=%(installdir)s "
             "  --with-guile=guile-2.0 "
             "  --with-expat "
             "  --with-system-zlib "
             "  --with-babeltrace "
             "  --with-lzma "
             "  --disable-gdbtk "
             "  --disable-ld "
             "  --disable-gas "
             "  --disable-gdbserver "
             "  --disable-sim "
         )
     }),
    ('rocprofiler', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/roctracer/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'roctracer-%(version)s.tar.gz',
         }],
         'patches': [
             ('rocprofiler-5.3.0-aql-and-rocm-paths.patch',
              '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             '0322cbe5d1d3182e616f472da31f0707ad6040833c38c28f2b39381a85210f43',
             '04c1e955267a3e8440833a177bb976f57697aba0b90c325d07fc0c6bd4065aea',
             'c3df4a644be551e4acd07ecfb1af5c9fa09bf0e8a322f81da41060c8b6f1305e',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                           "export ROCM_PATH=%(installdir)s; "
                           "export HIP_PATH=%(installdir)s/hip; "),
         'prebuildopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                          "export ROCM_PATH=%(installdir)s; "
                          "export HIP_PATH=%(installdir)s/hip; "),
         'configopts':    " -DPROF_API_HEADER_PATH=%(builddir)s/roctracer-rocm-%(version)s/inc/ext",
         'installopts':   "install && " + "\n".join([
             "install -d %(installdir)s/bin",
             "ln -s %(installdir)s/rocprofiler/bin/rocprof %(installdir)s/bin/rocprof",
         ]) + "\n echo "
     }),
    ('roctracer', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('roctracer-5.3.0-test-fpie.patch', '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             '04c1e955267a3e8440833a177bb976f57697aba0b90c325d07fc0c6bd4065aea',
             '04474583e60ad5e5636b4678740e82d157a098c45b737fa1d37412c5b2fb2547',
         ],
         'preconfigopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                           "export ROCM_PATH=%(installdir)s; "
                           "export HIP_PATH=%(installdir)s/hip; "),
         'configopts': ("-DCMAKE_INSTALL_LIBDIR=lib "),
         'prebuildopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                          "export ROCM_PATH=%(installdir)s; "
                          "export HIP_PATH=%(installdir)s/hip; "),
         'preinstallopts': ("export ROCM_ROOT_DIR=%(installdir)s; "
                            "export ROCM_PATH=%(installdir)s; "
                            "export HIP_PATH=%(installdir)s/hip; "),
         'srcdir':        '%(name)s-rocm-%(version)s',
     }),
    ('rccl', version,
     {
         'source_urls': ['https://github.com/ROCmSoftwarePlatform/rccl/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':     ['213f4f3d75389be588673e43f563e5c0d6908798228b0b6a71f27138fd4ed0c7'],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; "
     }),
    ('ROCclr', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/RadeonOpenCompute/ROCm-OpenCL-Runtime/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-opencl-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/ROCclr/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocclr-%(version)s.tar.gz',
         }],
         'checksums': [
             'a294639478e76c75dac0e094b418f9bd309309b07faf6af126cdfad9aab3c5c7',
             '46a1579310b3ab9dc8948d0fb5bed4c6b312f158ca76967af7ab69e328d43138',
         ],
         'srcdir':      '%(name)s-rocm-%(version)s/',
         'configopts':  (" -DAMD_OPENCL_PATH=%(builddir)s/ROCm-OpenCL-Runtime-rocm-%(version)s/ "),
         'installopts': ' && echo ',  # install nothing, just build and use for OpenCL later
     }),
    ('ROCm-OpenCL-Runtime', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/RadeonOpenCompute/ROCm-OpenCL-Runtime/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-opencl-%(version)s.tar.gz',
         }],
         'checksums': [
             'a294639478e76c75dac0e094b418f9bd309309b07faf6af126cdfad9aab3c5c7',
         ],
         'srcdir':     '%(name)s-rocm-%(version)s/',
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(builddir)s/ROCclr-rocm-%(version)s/;%(installdir)s\" "
                        " -DROCCLR_PATH=%(builddir)s/ROCclr-rocm-%(version)s/ "
                        " -DROCCLR_INCLUDE_PATH=%(builddir)s/ROCclr-rocm-%(version)s "
                        " -DROCM_PATH=%(installdir)s"
                        " -DAMD_OPENCL_PATH=%(builddir)s/ROCm-OpenCL-Runtime-rocm-%(version)s/ "),
     }),
    ('clang-ocl', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/RadeonOpenCompute/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '602f8fb1f36587543cc0ee95fd1938f8eeb03de79119101e128150332cc8d89c',
         ],
         'srcdir':     '%(name)s-rocm-%(version)s/',
         'configopts': (" -DCLANG_BIN=\"%(installdir)s/llvm/bin\" "
                        " -DBITCODE_DIR=\"%(installdir)s/amdgcn/bitcode\" "),
     }),
    ('MIOpenGEMM', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
         ],
         'checksums': [
             'a39faa8f4ab73e0cd6505a667bf10c07f93b9612af0711405c65043c4755129d',
         ],
         'srcdir': '%(name)s-rocm-%(version)s/',
     }),
    ('openmp-extras', version,
     # Very hacky, needs easyblock
     {
         'easyblock': 'ConfigureMake',
         'sources':   [{
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/aomp/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'aomp-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/RadeonOpenCompute/llvm-project/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-llvm-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/RadeonOpenCompute/ROCm-Device-Libs/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-device-libs-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/flang/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'flang-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/aomp-extras/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'aomp-extras-%(version)s.tar.gz',
         }],
         'patches': [
             ('llvm-project-hostrpc-fprintf-decl.patch',
              'llvm-project-rocm-%(version)s'),
             ('aomp-5.3.0-openmp-buildpath.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-5.3.0-openmp-rocm_dir.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-rocm-5.4.0-openmp-use-lld.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-5.3.0-flang-iftypo.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-flang-decouple-out-dir-and-rocm-install.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-flang-5.3.0-libomp-path.patch',
              'aomp-rocm-%(version)s'),
             ('aomp-flang_runtime-5.3.0-flang1-2-path.patch',
              'aomp-rocm-%(version)s'),
             ('flang-rocm-5.3.0-cmake-pgmath.patch',
              'flang-rocm-%(version)s'),
             ('flang-rocm-5.3.0-flang1-2-dep-path.patch',
              'flang-rocm-%(version)s'),
             ('aomp-extras-5.2.0-rocm-dir-llvm.patch',
              'aomp-extras-rocm-%(version)s'),
             ('aomp-5.2.0-extras-version-string.patch',
              'aomp-rocm-%(version)s'),
         ],
         'checksums': [
             'bbca540897848fa95fd0f14fc05ab6deda31299a061424972d5e2bc09c7543dc',
             'ff54f45a17723892cd775c1eaff9e5860527fcfd33d98759223c70e3362335bf',
             'd68813ded47179c39914c8d1b76af3dad8c714b10229d1e2246af67609473951',
             'fae8195a5e1b3778e31dbc6cbeedeae9998ea4b5a54215534af41e91fdcb8ba0',
             '2546becd4b182d1e366f47660c731c8ff7366b6306782f04706b6a7bf4e2094c',

             'c846bac17580e939492b843bee092c2e1b2b414a683bdb6be2973ae044642424',
             '0752145a45e3b1728c26bc627286e2ced0420107135e0b13eaf1d945c075f711',
             '99401e192cb777f59c61fa02b6071316f05e3e08939b15e9c12263614b4a7061',
             '64cd96ddc7e05d507bc5606722f40728dd1b54d045e469fd04ca87ffdd215f3f',
             '7c4ef4ad7b8502bb918a2d032bb6e75f20b3606040adeade3fdd2460f7189c95',
             'e82a4f065cc259095bf96778b913b97fe39d7c207e4e25ccf59d8fa264014262',
             '83102ebef534ecc956b2cce1892c713ed81d01fc2216e70cc89c992f7545d810',
             'cce2ce2feeaf798b339d4e711a87c8fd603bbf88cacccab7e539c8c148b3a6d3',
             'c16ed90f3491434e9f7794871d6d2c638395036dc785f6b4d94a121758978352',
             '3011cff58e353fdaa4f69761821e2182b46bc4244ac25c7f7096217a8b9436cf',
             'bae31efe2dd3f6813e9198c210ba3390028ed89e0d47e86366bef741c70c4db7',
             '7c5372078c74facbd7cae451c3a717bf281344dcd5c4103e1c837d980e79ccc9',
         ],
         'configure_cmd': ("ln -fs %(builddir)s/llvm-project-rocm-%(version)s %(builddir)s/llvm-project;"
                           "ln -fs %(builddir)s/flang-rocm-%(version)s %(builddir)s/flang;"
                           "ln -fs %(builddir)s/aomp-extras-rocm-%(version)s %(builddir)s/aomp-extras;"
                           " echo "),  # echo --prefix=...
         'build_cmd': ("export OMPEXTRA_DIR=\"%(builddir)s/openmp-extras\";"
                       "export OUT_DIR=\"$OMPEXTRA_DIR\";"
                       "export AOMP=\"$OUT_DIR/llvm\";"
                       "export AOMP_STANDALONE_BUILD=0;"
                       "export AOMP_REPOS=\"%(builddir)s\";"
                       "export ROCM_DIR=\"%(installdir)s\";"
                       "export DEVICELIBS_ROOT=\"%(builddir)s/ROCm-Device-Libs-rocm-%(version)s\";"
                       "export LLVM_PROJECT_ROOT=\"%(builddir)s/llvm-project\";") +\
         "export GFXLIST=\"%s\";" % local_gpuarchs_list +\
         ("cd \"%(builddir)s/aomp-rocm-%(version)s/bin\";"
          "./build_extras.sh && "
          "./build_extras.sh install && "
          "./build_openmp.sh && "
          "./build_openmp.sh install && "
          "./build_pgmath.sh && "
          "./build_pgmath.sh install && "
          "./build_flang.sh && "
          "./build_flang.sh install && "
          "./build_flang_runtime.sh && "
          "./build_flang_runtime.sh install && echo "),  # echo -j 64 ...
         # echo install ?
         'install_cmd': ("cp -r %(builddir)s/openmp-extras/llvm/runtime/* %(builddir)s/openmp-extras/llvm/ && "
                         "cp -r %(builddir)s/openmp-extras/llvm/devel/* %(builddir)s/openmp-extras/llvm/ && "
                         "cp -r %(builddir)s/openmp-extras/* %(installdir)s/ && " "echo ")
     }),
    ('rocPRIM', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '1740dca11c70ed350995331c292f7e3cb86273614e4a5ce9f0ea64dea5364318',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s/',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    (" -Damd_comgr_DIR=%(installdir)s/lib/cmake/amd_comgr "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -DBUILD_TEST=OFF "
                           " -DBUILD_BENCHMARK=OFF ") +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts': "export ROCM_PATH=%(installdir)s; "
     }),
    ('rocFFT', version,
     {
         'source_urls': ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('rocFFT-5.4.0-memory_gfx-cstdint.patch',
              '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             'd35a67332f4425fba1824eed78cf98d5c9a17a422614ff3f4cba2461df952336',
             'dd33559f47554c541d76c7bcffdec1517f891afcae5ac59feb30dfe0c49a2088',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; "
     }),
    ('rocRAND', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/hipRAND/archive'],
             'download_filename': '991f4f3600ddef03c9f1bae78ced9d79316ec23a.tar.gz',
             'filename':          'hiprand-%(version)s.tar.gz',
         }],
         'checksums': [
             '0f6a0279b8b5a6dfbe32b45e1598218fe804fee36170d5c1f7b161c600544ef2',
             'b932bcab788a078278631fd17025d90d3d8561cece28d8c8ac25a173b3243b7a',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': ("export ROCM_PATH=%(installdir)s; "
                           "rm -rf %(builddir)s/%(name)s-rocm-%(version)s/hipRAND; "
                           "ln -sf %(builddir)s/hipRAND-991f4f3600ddef03c9f1bae78ced9d79316ec23a "
                           " %(builddir)s/%(name)s-rocm-%(version)s/hipRAND && "),
         'configopts':    " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          " -DBUILD_TEST=OFF ",
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
         'installopts':   "install && " + "\n".join([
             "install -d %(installdir)s/include",
             "ln -s %(installdir)s/hiprand/include %(installdir)s/include/hiprand",
             "ln -s %(installdir)s/rocrand/include %(installdir)s/include/rocrand",
         ]) + "\n echo "
     }),
    ('rocBLAS', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('rocBLAS-5.2.0-find-python-if-undefined.patch',
              '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             '261e05375024a01e68697c5d175210a07f0f5fc63a756234d996ddedffde78a2',
             'c01d9235e055a00859bf3571e5afe33e296959296ff895d89a36cd1627d15d71',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; export PATH=%(installdir)s/hip/bin:$PATH; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DCMAKE_PREFIX_PATH=%(installdir)s/llvm/lib/cmake/llvm "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -Damd_comgr_DIR=%(installdir)s/lib/cmake/amd_comgr "
                           " -Dpython=$EBROOTPYTHON/bin/python3 "
                           " -DBUILD_WITH_TENSILE=ON "
                           " -DBUILD_WITH_TENSILE_HOST=ON "
                           " -DTensile_LIBRARY_FORMAT=yaml "
                           " -DTensile_COMPILER=hipcc "
                           " -DTensile_LOGIC=asm_full "
                           " -DTensile_CODE_OBJECT_VERSION=V3 "
                           " -DBUILD_CLIENTS_TESTS=OFF "
                           " -DBUILD_CLIENTS_BENCHMARKS=OFF "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "
                           " -DBUILD_TESTING=OFF "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; export PATH=%(installdir)s/hip/bin:$PATH; ",
     }),
    ('rocWMMA', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [],
         'checksums': [
             'a18724c3b45d171e54ef9f85c269124ce8d29b6a2f9dbd76a4806bda2933f7a7',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    (" -DROCWMMA_BUILD_TESTS=OFF "
                           " -DROCWMMA_BUILD_SAMPLES=OFF "
                           " -DROCWMMA_BUILD_ASSEMBLY=ON "
                           " -DOpenMP_CXX_FLAGS=\"-fopenmp\" "
                           " -DOpenMP_CXX_LIB_NAMES=\"\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc ") +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
     }),
    ('composable_kernel', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': '%s.tar.gz' % local_ck_commit,
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('ck-5.4.0-sqrtf-to-sqrt-cmath.patch',
              '%%(name)s-%s' % local_ck_commit),
         ],
         'checksums': [
             'c8773da5862a65742fc27b0a8163e7a13e30cfa43b6a4125c44431fd2043df6c',
             '165cb8604f83a38e518ca19382e54ade7bc6cc1cc3d597bb26d896944719e62f',
         ],
         'preconfigopts': (" export ROCM_PATH=%(installdir)s; "),
         'srcdir':     '%%(name)s-%s/' % local_ck_commit,
         'configopts': " -DGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                       (" -DCMAKE_CXX_COMPILER=%(installdir)s/bin/hipcc "
                        " -DCMAKE_C_COMPILER=%(installdir)s/bin/hipcc "
                        " -DCMAKE_CXX_FLAGS=\"$CXXFLAGS -D__HIP_PLATFORM_AMD__=1 --include hip/hip_runtime.h\""
                        " -DCMAKE_C_FLAGS=\"$CFLAGS -D__HIP_PLATFORM_AMD__=1 --include hip/hip_runtime.h\""
                        " -DBUILD_DEV=OFF "),
         'prebuildopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('MIOpen', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             # 'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
             # We need the .git folder to pull lfs files
             'git_config': {
                 'url': 'https://github.com/ROCmSoftwarePlatform',
                 'repo_name': '%(name)s',
                 'tag': 'rocm-%(version)s',
                 'keep_git_dir': True,
                 'clone_into': '%(name)s-rocm-%(version)s',
             },
         }, {
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/half/archive'],
             'download_filename': '1.12.0.tar.gz',
             'filename':          'half-1.12.0.tar.gz',
         }],
         'patches': [
             # This might actually be some missing flag in hipamd, but disable for now
             ('MIOpen-disable-pch-until-5.5.patch',
              '%(name)s-rocm-%(version)s'),
             ('MIOpen-5.4.0-no-json_fwd.patch',
              '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             '1ce792326743791c8e5e9ff5461c56de606e9d8e7f04ff8fc5e8206fc3d4cee8',  # miopen-5.4.0.tar.gz
             '0a08660b68abb176ebc2a0cdf8de46e3182a7f46c66443bb80dbfaaec98cf969',  # half-1.12.0.tar.gz

             '75a9fece2fefd8d72202e57dd62c0b2bcd3fbfe1f37f2bbddf00872f5f2c13a7',  # MIOpen-disable-pch-until-5.5.patch
             '25201f49122675fa0f211d4a093aac42a38322510c298b9f0181c580fd3b42ba',  # MIOpen-5.4.0-no-json_fwd.patch
         ],
         'preconfigopts': (
             # This is just completely broken. I think the only dependency missing as of 5.1.3 is "half",
             # which is a single header, so download and copy it
             # " sed -i 's|^sqlite|#\\0|' "
             # " %(builddir)s/%(name)s-rocm-%(version)s/{,min-}requirements.txt; "
             # " sed -i 's|^boost|#\\0|' "
             # " %(builddir)s/%(name)s-rocm-%(version)s/{,min-}requirements.txt; "
             # " sed -i 's|^ROCmSoftwarePlatform/llvm-project-mlir|#\\0|' "
             # " %(builddir)s/%(name)s-rocm-%(version)s/{,min-}requirements.txt; "
             # " cmake -P %(builddir)s/%(name)s-rocm-%(version)s/install_deps.cmake "
             # "--minimum --prefix \"%(builddir)s/%(name)s-rocm-%(version)s/deps\"; "
             " install -d %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include; "
             " cp %(builddir)s/half-1.12.0/include/half.hpp %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include/; "
             " pwd && "
             " git -C ../%(name)s-rocm-%(version)s lfs pull --exclude= && "
             " export ROCM_PATH=%(installdir)s && "
             " export MIOPEN_DEBUG_COMGR_HIP_PCH_ENFORCE=0 && "
         ),
         'srcdir':     '%(name)s-rocm-%(version)s/',
         'configopts': " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                       (" -DCMAKE_CXX_COMPILER=%(installdir)s/llvm/bin/clang++ "
                        " -DCMAKE_C_COMPILER=%(installdir)s/llvm/bin/clang "
                        " -DHALF_INCLUDE_DIR=%(builddir)s/%(name)s-rocm-%(version)s/deps/half/include "
                        " -DMIOPEN_USE_MIOPENGEMM=On "
                        " -DMIOPEN_BACKEND=HIP "),
         'prebuildopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('AMDMIGraphX', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/half/archive'],
             'download_filename': '1.12.0.tar.gz',
             'filename':          'half-1.12.0.tar.gz',
         }],
         'checksums': [
             'b6e7f4a1bf445ea0dae644ed5722369cde66fbee82a5917722f5d3f8c48b0a8c',
             '0a08660b68abb176ebc2a0cdf8de46e3182a7f46c66443bb80dbfaaec98cf969',
         ],
         'preconfigopts': (
             " install -d %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include; "
             " cp %(builddir)s/half-1.12.0/include/half.hpp %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include/; "
             " export ROCM_PATH=%(installdir)s; "
         ),
         'srcdir':     '%(name)s-rocm-%(version)s/',
         'configopts': " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                       (" -DHALF_INCLUDE_DIR=%(builddir)s/%(name)s-rocm-%(version)s/deps/half/include "
                        " -DCMAKE_SHARED_LINKER_FLAGS=\"$LDFLAGS -lblis-mt\" "),  # explicitly link BLIS
         'prebuildopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    # ('MIVisionX', version,
    #  {
    #      'sources' : [{
    #         'source_urls'       : ['https://github.com/GPUOpen-ProfessionalCompute-Libraries/%(name)s/archive'],
    #         'download_filename' : 'rocm-%(version)s.tar.gz',
    #         'filename'          : '%(namelower)s-%(version)s.tar.gz',
    #      }],
    #      'checksums'  : [
    #          '62591d5caedc13832c3ccef629a88d9c2a43c884daad1124ddcb9c5f7d5470e9',
    #      ],
    #      'preconfigopts' : (
    #          " install -d %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include; "
    #          " cp %(builddir)s/half-1.12.0/include/half.hpp "
    #          " %(builddir)s/%(name)s-rocm-%(version)s/deps/half/include/; "
    #          " export ROCM_PATH=%(installdir)s; "
    #      ),
    #      'srcdir'        : '%(name)s-rocm-%(version)s/',
    #      'install_target_subdir' : 'mivisionx',
    #      'configopts'    : " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
    #                        (
    #                            " -DHALF_INCLUDE_DIR=%(builddir)s/%(name)s-rocm-%(version)s/deps/half/include "
    #                            " -DBACKEND=HIP "
    #                            " -DCMAKE_CXX_FLAGS=\"$CXXFLAGS -isystem $EBROOTFFMPEG/include/ffmpeg4.4\" "
    #                            # Not sure why explicit ffmpeg include dir is necessary
    #                        ),
    #      'prebuildopts'  : "export ROCM_PATH=%(installdir)s; ",
    #  }),
    ('rocSOLVER', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [],
         'checksums': [
             '69690839cb649dee43353b739d3e6b2312f3d965dfe66705c0ea910e57c6a8cb',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc " +\
                          " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets,
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
     }),
    ('rocSPARSE', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
             ('rocsparse-5.3.0-include-cstdint.patch', '%(name)s-rocm-%(version)s'),
         ],
         'checksums': [
             'c8f0e920a8ec15b9ae40564c68191363356cc4d793c16247bb6e11ef5293ed11',
             'c3562202534bab3d1bb6f49eaf3dd95e3e7f593dcb9b3d72ec1e5054e5305fb2',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -Drocprim_DIR=\"%(installdir)s/rocprim/rocprim/lib/cmake/rocprim\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "),
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
     }),
    ('rocThrust', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             'a4799fb1086da3f70c9b95effb1f5f9033c861685e960a8759278463cc55a971',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -DBUILD_TEST=OFF "),
         'prebuildopts':  "export ROCM_PATH=%(installdir)s; ",
     }),
    ('rocALUTION', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches':        [
             ('rocALUTION-5.2.0-fix-complex-device-operators.patch',
              '%(name)s-rocm-%(version)s'),
         ],
         'checksums':      [
             'dccf004434e0fee6d0c7bedd46827f5a2af0392bc4807a08403b130e461f55eb',
             'ae7fb5eeba68f7e8af2b81a1b1587c33efeee7d67d3b91cbad8886130e107720',
         ],
         'srcdir':         '%(name)s-rocm-%(version)s',
         'preconfigopts':  "export ROCM_PATH=%(installdir)s; ",
         'configopts':     " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                           " -DROCM_PATH=\"%(installdir)s\" ",
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipCUB', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '78db2c2ea466a4c5d84beedc000ae934f6d0ff1793eae90bb8d02b2dbff8932c',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipBLAS', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [
         ],
         'checksums': [
             '341d61adff8d08cbf70aa07bd11a088bcd0687fc6156870a1aee9eff74f3eb4f',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "
                           " -DBUILD_CLIENTS_TESTS=OFF "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipFFT', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             'd0a8e790182928b3d19774b8db1eece9b881a422f6a7055c051b12739fded624',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "
                           " -DCMAKE_MODULE_PATH=\"%(installdir)s/hip/cmake\" "
                           " -DBUILD_CLIENTS_TESTS=OFF "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipfort', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             'a781bc6d1dbb508a4bd6cc3df931696fac6c6361d4fd35efb12c9a04a72e112c',
         ],
         'install_target_subdir': 'hipfort',
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          " -DROCM_PATH=\"%(installdir)s\" ",
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipSOLVER', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             'd53d81c55b458ba5e6ea0ec6bd24bcc79ab06789730391da82d8c33b936339d9',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    ('hipSPARSE', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCmSoftwarePlatform/%(name)s/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': [
             '47420d38483c8124813b744971e428a0352c83d9b62a5a50f74ffa8f9b785b20',
         ],
         'srcdir':        '%(name)s-rocm-%(version)s',
         'preconfigopts': "export ROCM_PATH=%(installdir)s; ",
         'configopts':    " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
                          (" -DROCM_PATH=\"%(installdir)s\" "
                           " -DCMAKE_CXX_COMPILER=%(installdir)s/hip/bin/hipcc "
                           " -DCMAKE_CXX_STANDARD=20 "
                           " -Damd_comgr_DIR=\"%(installdir)s/lib/cmake/amd_comgr\" "
                           " -DAMDDeviceLibs_DIR=\"%(installdir)s/lib/cmake/AMDDeviceLibs\" "
                           " -Dhip_DIR=\"%(installdir)s/hip/lib/cmake/hip\" "
                           " -Drocsparse_DIR=\"%(installdir)s/rocsparse/lib/cmake/rocsparse\" "
                           " -DBUILD_CLIENTS_TESTS=OFF "
                           " -DBUILD_CLIENTS_SAMPLES=OFF "),
         'prebuildopts':   "export ROCM_PATH=%(installdir)s; ",
         'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
     }),
    # ('ROCmValidationSuite', version,
    #  {
    #      'sources' : [{
    #         'source_urls'       : ['https://github.com/ROCm-Developer-Tools/%(name)s/archive'],
    #         'download_filename' : 'rocm-%(version)s.tar.gz',
    #         'filename'          : '%(namelower)s-%(version)s.tar.gz',
    #      }],
    #      # This just adds detection of Arch Linux, so probably not important?
    #      'patches'       : [
    #          ('https://github.com/acxz/ROCmValidationSuite/commit/eb1a4bf5de8d8ba25f21ee13d6af1c46416e3961.patch',
    #           '%(name)s-rocm-%(version)s')],
    #      'checksums'     : [
    #         '0140a4128c31749c078d9e1dc863cbbd690efc65843c34a4b80f0056e5b8c7b6',
    #      ],
    #      'srcdir'        : '%(name)s-rocm-%(version)s',
    #      'preconfigopts' : ("export ROCM_PATH=%(installdir)s; "
    #                        ),
    #      'configopts'    : " -DAMDGPU_TARGETS=\"%s\" " % local_amdgpu_targets +\
    #                         (" -DROCM_PATH=\"%(installdir)s\" "
    #                         ),
    #      'prebuildopts'  : "export ROCM_PATH=%(installdir)s; ",
    #      'preinstallopts': "export ROCM_PATH=%(installdir)s; ",
    #  }),
]


postinstallcmds = ["mkdir -p %(installdir)s/rocm_targets/",
                   *("echo %s >> %%(installdir)s/rocm_targets/targets.lst" % gpu for gpu in local_gpus)]

modextravars = {
    'ROCM_PATH': '%(installdir)s',
    'ROCM_TARGET_LST': '%(installdir)s/rocm_targets/targets.lst',
}

modextrapaths = {
    'PATH': [
        # TODO: more binaries
        'mivisionx/bin',
        'rvs/bin',
    ],
    'LD_LIBRARY_PATH': [
        'hip/lib',
        'hipblas/lib',
        'hipfft/lib',
        'hipfort/lib',
        'hipsolver/lib',
        'hipsparse/lib',
        'hsa/lib',
        'llvm/lib',
        'miopen/lib',
        'oam/lib',
        'rccl/lib',
        'rocblas/lib',
        'rocfft/lib',
        'rocm_smi/lib',
        'rocprim/lib',
        'rocsolver/lib',
        'rocsparse/lib',
    ],
    'LIBRARY_PATH': [
        'hip/lib',
        'hipblas/lib',
        'hipfft/lib',
        'hipfort/lib',
        'hipsolver/lib',
        'hipsparse/lib',
        'hsa/lib',
        'llvm/lib',
        'miopen/lib',
        'oam/lib',
        'rccl/lib',
        'rocblas/lib',
        'rocfft/lib',
        'rocm_smi/lib',
        'rocprim/lib',
        'rocsolver/lib',
        'rocsparse/lib',
    ],
}

moduleclass = 'devel'
