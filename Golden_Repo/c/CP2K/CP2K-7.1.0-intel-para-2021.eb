# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
name = 'CP2K'
version = '7.1.0'

homepage = 'http://www.cp2k.org/'
description = """CP2K is a freely available (GPL) program, written in Fortran 95, to perform atomistic and molecular
 simulations of solid state, liquid, molecular and biological systems. It provides a general framework for different
 methods such as e.g. density functional theory (DFT) using a mixed Gaussian and plane waves approach (GPW), and
 classical pair and many-body potentials. 
 The default eigensolver is set to Scalapack. This setting can be overridden by specifiying 
 PREFERRED_DIAG_LIBRARY ELPA in the global section of the cp2k input. Note, that application-dependent 
 - in particular for small basis sizes - the use of the ELPA eigensolver library can cause dead-locks:
 the program might be killed with a corresponding message from the MPI library ( parastation mpi) 
 or even hang (openmpi). The user is advised to check whether the particular application is prone to 
 deadlocks if ELPA is switched on.
"""


toolchain = {'name': 'intel-para', 'version': '2021'}
toolchainopts = {'pic': True}

local_dbcsr_version = '2.0.1'

sources = [
    'v%(version)s.tar.gz',
    'v%s.tar.gz' % local_dbcsr_version,
]
source_urls = [
    'https://github.com/cp2k/cp2k/archive/',
    'https://github.com/cp2k/dbcsr/archive/'
]

patches = [
    'CP2K-7.1_fftw3_lib.patch',
    'CP2K-7.1_elpa.patch',
]


dependencies = [
    ('Libint', '2.7.0-beta.6', '_cp2k_lmax5', ('intel-compilers', '2021.2.0-GCC-10.3.0')),
    ('ELPA', '2020.11.001'),
    ('libxsmm', '1.16.1', '', ('intel-compilers', '2021.2.0-GCC-10.3.0')),
    ('libxc', '4.3.4', '', ('intel-compilers', '2021.2.0-GCC-10.3.0')),
    ('FFTW', '3.3.8'),
    ('PLUMED', '2.6.1'),
]

builddependencies = [
    ('flex', '2.6.4'),
    ('Bison', '3.7.6'),
    ('Python', '3.8.5'),
]

# Add PLUMED support
plumed = True

# Disable CUDA
cuda = False

# explicit unrolled loops up to __MAX_CONTR, 4 gives excessive compiler times
configopts = '-D__MAX_CONTR=3'

# popt or psmp
type = 'psmp'

# run tests separately (2 nodes of juwels approx 1 hour)
runtest = False

# regression test reports failures
ignore_regtest_fails = False

modextravars = {
    'CP2K_DATA_DIR': '%(installdir)s/data',
}

moduleclass = 'chem'
