# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
# the purpose of the easyconfig is to build a Mesa for software rendering,
# not hardware rendering. This means you want at least SSE4.2. We build:
# - llvmpipe: the high-performance Gallium LLVM driver
# - swr: Intel's OpenSWR
# - A vendor neutral dispatch layer

easyblock = 'Bundle'

name = 'Mesa'
version = '19.0.1'

homepage = 'http://www.mesa3d.org/'
description = """
Mesa is an open-source implementation of the OpenGL specification -
 a system for rendering interactive 3D graphics.
"""


toolchain = {'name': 'GCCcore', 'version': '8.3.0'}
# swr detects and builds parts specific for AVX and AVX2. If we use
# -xHost, this always gets overwritten and will fail.
toolchainopts = {'optarch': False}

source_urls = [
    'https://mesa.freedesktop.org/archive/%(version)s',
    'ftp://ftp.freedesktop.org/pub/mesa/%(version)s',
    'ftp://ftp.freedesktop.org/pub/mesa/older-versions/%(version_major)s.x/%(version)s',
    'ftp://ftp.freedesktop.org/pub/mesa/',
    'https://github.com/NVIDIA/libglvnd/archive/'
]

pyver = '3.6.8'

builddependencies = [
    ('binutils', '2.32'),
    ('flex', '2.6.4'),
    ('Bison', '3.3.2'),
    ('Autotools', '20180311'),
    ('pkg-config', '0.29.2'),
    ('expat', '2.2.6'),
    ('Python', pyver),
    ('libxml2', '2.9.9', '-Python-%s' % pyver),
    ('Meson', '0.50.0', '-Python-%s' % pyver),
    ('Ninja', '1.9.0'),
    ('CMake', '3.14.0'),
]

dependencies = [
    ('zlib', '1.2.11'),
    ('nettle', '3.4'),
    ('libdrm', '2.4.97'),
    ('LLVM', '8.0.0'),
    ('X11', '20190311'),
    ('libunwind', '1.3.1'),
]

default_easyblock = 'ConfigureMake'

default_component_specs = {
    'sources': [SOURCE_TAR_GZ],
    'start_dir': '%(name)s-%(version)s',
}

components = [
    ('libglvnd', '1.1.1', {
        'sources': [ 'v%(version)s.tar.gz' ],
        'preconfigopts': './autogen.sh && '
    }),
    (name, version, {
        'easyblock': 'MesonNinja',
        'sources': [SOURCELOWER_TAR_XZ],
        'start_dir': '%(namelower)s-%(version)s',
        'patches': ['Mesa-19.0.1-LLVM-8.patch'],
        'preconfigopts': 'PKG_CONFIG_PATH=$PKG_CONFIG_PATH:%(installdir)s/lib/pkgconfig:%(installdir)s/lib64/pkgconfig',
        'configopts': ' -Dlibdir=%(installdir)s/lib' # take the same libdir as the NVIDIA driver does
                      ' -Dgbm=true'
                      ' -Dglx=auto' # auto, disabled, dri, xlib, gallium-xlib
                      ' -Dosmesa=gallium' # none, classic, gallium
                      ' -Dllvm=true'
                      ' -Dshared-llvm=true'
                      ' -Ddri-drivers=""' # '', 'auto', 'i915', 'i965', 'r100', 'r200', 'nouveau', 'swrast'
                      ' -Dgallium-drivers="swrast,swr"' # '', 'auto', 'kmsro', 'radeonsi', 'r300', 'r600', 'nouveau', 'freedreno', 'swrast', 'v3d', 'vc4', 'etnaviv', 'tegra', 'i915', 'svga', 'virgl', 'swr'
                      ' -Dvulkan-drivers=""' # '', 'auto', 'amd', 'intel'
                      ' -Dplatforms=x11' # '', 'auto', 'x11', 'wayland', 'drm', 'surfaceless', 'haiku', 'android'
                      ' -Dglvnd=true'
                      ' -Dtexture-float=true'
                      ' -Dgles1=true -Dgles2=true'
                      ' -Dgallium-media=omx,va,vdpau,xvmc',
    }),
]

modextravars = {
    'GALLIUM_DRIVER' : 'swr'
}

# Create a symlink so applications compiled against Mesa before bundling it with libglvnd are not broken.
# Can be removed in the next stage
postinstallcmds = [
    'ln -s %(installdir)s/lib %(installdir)s/lib64'
]

sanity_check_paths = {
    'files': ['lib/libEGL_mesa.%s' % SHLIB_EXT, 'lib/libOSMesa.%s' % SHLIB_EXT,
              'lib/libGLESv1_CM.%s' % SHLIB_EXT, 'lib/libGLESv2.%s' % SHLIB_EXT,
              'include/GL/glext.h', 'include/GL/gl_mangle.h', 'include/GL/glx.h',
              'include/GL/osmesa.h', 'include/GL/gl.h', 'include/GL/glxext.h',
              'include/GL/glx_mangle.h', 'include/GLES/gl.h', 'include/GLES2/gl2.h', 'include/GLES3/gl3.h',
              'lib/libOpenGL.%s' % SHLIB_EXT],
    'dirs': []
}

moduleclass = 'vis'
