# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
# This is an easyconfig file for EasyBuild, see https://github.com/hpcugent/easybuild
# Copyright:: Copyright 2014 Juelich Supercomputing Centre, Germany
# Authors::   Alexandre Strube <surak@surak.eti.br>
# License::   New BSD
#
# This work is based from experiences from the UNITE project
# http://apps.fz-juelich.de/unite/
##

name = "TotalView"
version = "2017.2.11"

homepage = 'http://www.roguewave.com/products-services/totalview'

description = """TotalView breaks down barriers to understanding what's going on with your high-performance
 computing (HPC) and supercomputing applications. Purpose-built for multicore and parallel computing,
 TotalView provides a set of tools providing unprecedented control over processes and thread execution,
 along with deep visibility into program states and data.

 By allowing the simultaneous debugging of many processes and threads in a single window, you get complete
 control over program execution: running, stepping, and halting line-by-line through code within a single
 thread or within arbitrary groups of processes or threads. You can also work backwards from failure through
 reverse debugging, isolating the root cause faster by eliminating the need to repeatedly restart the
 application, reproduce and troubleshoot difficult problems that can occur in concurrent programs that take
 advantage of threads, OpenMP, MPI, GPUs, or coprocessors.

 With customizable displays of the state of your running program, memory leaks, deadlocks, and race
 conditions are things of the past. Whether you're a scientific and technical computing veteran, or new to
 the development challenges of multicore or parallel applications, TotalView gives you the insight to find
 and correct errors quickly, validate prototypes early, verify calculations accurately, and above all, certify
 code correctly.

 TotalView works with C, C++, and Fortran applications written for Linux (including the Cray and Blue Gene
 platforms), UNIX, Mac OS X, and Xeon Phi coprocessor, and supports OpenMP, MPI, and OpenACC / CUDA.
 """



toolchain = {'name': 'dummy', 'version': 'dummy'}

sources = [
    '%(namelower)s_%(version)s_linux_x86-64.tar',
    '%(namelower)s.%(version)s-doc.tar',
]

checksums = ('8dc11b72ac57b4e4906e0d08a6affd8d', 'c8e29bb208befc3c974e39a846b4be7e')

install_cmd = "cd %(namelower)s.%(version)s; ./Install -agree -platform linux-x86-64 -nosymlink -install totalview -directory %(installdir)s"


sanity_check_paths = {
    'files': ["toolworks/%(namelower)s.%(version)s/bin/totalview"],
    'dirs': []
}

moduleclass = 'debugger'
