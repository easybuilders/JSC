# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'EB_Python'

name = 'SciPy-Stack'
version = '2017a'
versionsuffix = '-Python-%(pyver)s'

numpyversion = '1.12.0'

homepage = 'http://www.scipy.org'
description = """SciPy Stack is a collection of open source software for scientific computing in Python.

This bundle contains Cycler, mpmath, numpy, scipy, sympy, pandas, subprocess32, matplotlib, ipython_genutils, traitlets,
ptyprocess, scandir, pathlib2, pickleshare, pexpect, simplegeneric, ipython, ipykernel, jupyter_client, jupyter_core,
pyzmq, backports_abc, certifi, singledispatch, tornado, futures and ipyparallel

"""

toolchain = {'name': 'gpsolf', 'version': '2017a'}
toolchainopts = { 'pic' : True }

# We replace the interpreter to get exp and trigonometrical functions from libimf
source_urls = ['http://www.python.org/ftp/python/%(pyver)s/']
sources = ['Python-%(pyver)s.tgz']

builddependencies = [
    ('unzip', '6.0'),
]

dependencies = [
    ('Python', '2.7.13'),
    ('freetype', '2.7.1'),
    ('libpng', '1.6.28'),
    ('libreadline', '7.0'),
    ('SQLite', '3.17.0'),
]

prebuildopts = 'export LDSHARED="$CC -shared" && '

# this is a bundle of Python packages
exts_defaultclass = 'PythonPackage'
exts_filter = ('python -c "import %(ext_name)s"', '')

exts_list = [
    ('Cycler', '0.10.0', {
        'source_urls': ['https://pypi.python.org/packages/source/C/Cycler'],
        'source_tmpl': 'cycler-%(version)s.tar.gz',
        'modulename': 'cycler',
    }),
    ('mpmath', '0.19', {
        'source_urls': ['https://pypi.python.org/packages/source/m/mpmath'],
    }),
    ('numpy', numpyversion, {
        #'source_urls': ['https://pypi.python.org/packages/source/n/numpy'],
        'source_urls': ['https://github.com/numpy/numpy/releases/download/v%s/' % numpyversion],
        'patches': [
            'numpy-%s-mkl.patch' % numpyversion,
            'numpy-1.11.2-xhost.patch',
        ],
    }),
    ('scipy', '0.19.0', {
        'source_urls': ['https://pypi.python.org/packages/source/s/scipy'],
        'source_tmpl': 'scipy-%(version)s.zip',
    }),
    ('sympy', '1.0', {
        'source_urls': ['https://pypi.python.org/packages/source/s/sympy'],
    }),
    ('pandas', '0.19.2', {
        'source_urls': ['https://pypi.python.org/packages/source/p/pandas'],
    }),
    ('subprocess32', '3.2.7', {
        'source_urls': ['https://pypi.python.org/packages/source/s/subprocess32'],
    }),
    ('matplotlib', '2.0.0', {
        'source_urls': ['https://pypi.python.org/packages/source/m/matplotlib'],
    }),
    ('ipython_genutils', '0.2.0', {
        'source_urls': ['https://pypi.python.org/packages/source/i/ipython_genutils'],
    }),
    ('traitlets', '4.3.2', {
        'source_urls': ['https://pypi.python.org/packages/source/t/traitlets'],
    }),
    ('ptyprocess', '0.5.1', {
        'source_urls': ['https://pypi.python.org/packages/source/p/ptyprocess'],
    }),
    ('scandir', '1.5', {
        'source_urls': ['https://pypi.python.org/packages/source/s/scandir'],
    }),
    ('pathlib2', '2.2.1', {
        'source_urls': ['https://pypi.python.org/packages/source/p/pathlib2'],
    }),
    ('pickleshare', '0.7.4', {
        'source_urls': ['https://pypi.python.org/packages/source/p/pickleshare'],
    }),
    ('pexpect', '4.2.1', {
        'source_urls': ['https://pypi.python.org/packages/source/p/pexpect'],
    }),
    ('simplegeneric', '0.8.1', {
        'source_tmpl': 'simplegeneric-0.8.1.zip',
        'source_urls': ['https://pypi.python.org/packages/source/s/simplegeneric'],
    }),
    ('ipython', '5.3.0', {
        'source_urls': ['https://pypi.python.org/packages/source/i/ipython'],
        'modulename': 'IPython',
    }),
    ('ipykernel', '4.5.2', {
        'source_urls': ['https://pypi.python.org/packages/source/i/ipykernel'],
    }),
    ('jupyter_client', '5.0.0', {
        'source_urls': ['https://pypi.python.org/packages/source/j/jupyter-client'],
    }),
    ('jupyter_core', '4.3.0', {
        'source_urls': ['https://pypi.python.org/packages/source/j/jupyter-core'],
    }),
    ('pyzmq', '16.0.2', {
        'source_urls': ['https://pypi.python.org/packages/source/p/pyzmq'],
        'modulename': 'zmq',
    }),
    ('backports_abc', '0.5', {
        'source_urls': ['https://pypi.python.org/packages/source/b/backports_abc'],
    }),
    ('certifi', '2017.1.23', {
        'source_urls': ['https://pypi.python.org/packages/source/c/certifi'],
    }),
    ('singledispatch', '3.4.0.3', {
        'source_urls': ['https://pypi.python.org/packages/source/s/singledispatch'],
    }),
    ('tornado', '4.4.2', {
        'source_urls': ['https://pypi.python.org/packages/source/t/tornado'],
    }),
    ('futures', '3.0.5', {
        'source_urls': ['https://pypi.python.org/packages/source/f/futures'],
        'modulename': 'concurrent.futures',
    }),
    ('ipyparallel', '6.0.2', {
        'source_urls': ['https://pypi.python.org/packages/source/i/ipyparallel'],
    }),
]

# specify that Bundle easyblock should run a full sanity check, rather than just trying to load the module
full_sanity_check = True

sanity_check_paths = {
    'files': [],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

modextrapaths = {'PYTHONPATH': ['lib/python%(pyshortver)s/site-packages']}

moduleclass = 'vis'
