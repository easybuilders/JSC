# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
# Just enough ROCm to build UCX with ROCm support

easyblock = 'Bundle'
name = 'ROCm-rtonly'
version = '5.4.0'

homepage = 'https://github.com/RadeonOpenCompute/ROCm'
description = """AMD ROCm - Open Source Platform for HPC and Ultrascale GPU Computing."""


toolchain = {'name': 'GCCcore', 'version': '11.2.0'}


builddependencies = [
    ("binutils", "2.37"),
    ("CMake",    "3.23.1"),
    ("Ninja",    "1.10.2"),
    ("Python",   "3.9.6"),
    ("CppHeaderParser", "2.7.4"),
]

dependencies = [
    ("libdrm", "2.4.110"),  # ROCT complains about libdrm not being found
    ("OpenGL", "2021b"),    # hip needs mesa
]

default_easyblock = 'CMakeNinja'
github_account = "RadeonOpenCompute"

local_gpus = ["gfx90a:xnack-", "gfx90a:xnack+"]
local_amdgpu_targets = ";".join(local_gpus)
local_hip_targets = " ".join(local_gpus)

components = [
    ('ROCT-Thunk-Interface', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['690a78a6e67ae2b3f518dbc4a1e267237d6a342e1063b31eef297f4a04d780f8'],
         'srcdir':     '%(name)s-rocm-%(version)s'
     }),
    ('rocm-cmake', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums': ['617faa9a1e51db3c7a59bd0393e054ab67e57be357d59cb0cd9b677f47824946'],
         'srcdir':    '%(name)s-rocm-%(version)s'
     }),
    ('llvm-project', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-llvm-%(version)s.tar.gz',
         }],
         'checksums': ['ff54f45a17723892cd775c1eaff9e5860527fcfd33d98759223c70e3362335bf'],
         'srcdir':    '%(name)s-rocm-%(version)s/llvm',
         'install_target_subdir': 'llvm',
         'configopts': (" -DGCC_INSTALL_PREFIX=$EBROOTGCCCORE "
                        " -DLLVM_HOST_TRIPLE=x86_64-linux-gnu "
                        " -DLLVM_BUILD_UTILS=ON "
                        " -DLLVM_ENABLE_BINDINGS=OFF "
                        " -DOCAMLFIND=NO "
                        " -DLLVM_ENABLE_OCAMLDOC=OFF "
                        " -DLLVM_INCLUDE_BENCHMARKS=OFF "
                        " -DLLVM_BUILD_TESTS=OFF "
                        " -DLLVM_ENABLE_PROJECTS='llvm;clang;compiler-rt;lld' "
                        " -DLLVM_TARGETS_TO_BUILD='AMDGPU;X86' "
                        " -DLLVM_BINUTILS_INCDIR=$EBROOTBINUTILS/include "
                        # use dlopened libhsa, otherwise if there is libhsa-runtime64.so
                        # somewhere on the system it will link against it
                        " -DAMDGPU_ARCH_FORCE_DLOPEN_LIBHSA=ON ")
     }),
    ('ROCm-Device-Libs', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['d68813ded47179c39914c8d1b76af3dad8c714b10229d1e2246af67609473951'],
         'srcdir':     '%(name)s-rocm-%(version)s',
         'configopts': " -DLLVM_DIR=%(installdir)s/llvm/lib/cmake/llvm "
     }),
    ('ROCm-CompilerSupport', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['f4b83b27ff6195679d695c3f41fa25456e9c50bae6d978f46d3541b472aef757'],
         'srcdir':     '%(name)s-rocm-%(version)s/lib/comgr',
         'configopts': " -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
     }),
    ('hsa-amd-aqlprofile', version,
     {
         'easyblock':   "Binary",
         'source_urls': ['https://repo.radeon.com/rocm/rhel8/%(version_major_minor)s/main/'],
         'sources':     [{
             'download_filename': 'hsa-amd-aqlprofile-1.0.0.50400-72.el8.x86_64.rpm',
             'filename':          '%(name)s-%(version)s.rpm',
             'extract_cmd':       'rpm2cpio  %s > data.cpio'
         }],
         'checksums':   ['1b2121a891a2a9385ac3db3cabc3fcdd27af9374b0ac0abad740580159e54d5a'],
         'install_cmd': """
                 mkdir -p %(builddir)s/%(name)s
                 cpio -idmvD %(builddir)s/%(name)s < data.cpio;
                 cp -r %(builddir)s/%(name)s/opt/rocm-%(version)s/%(name)s/ %(installdir)s/hsa
                 cp -r %(builddir)s/%(name)s/opt/rocm-%(version)s/lib/ %(installdir)s/lib
                 cp -r %(builddir)s/%(name)s/opt/rocm-%(version)s/share/ %(installdir)s/share
             """
     }),
    ('ROCR-Runtime', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'checksums':  ['476cd18500cc227d01f6b44c00c7adc8574eb8234b6b4daefc219650183fa090'],
         'srcdir':     '%(name)s-rocm-%(version)s/src',
         'preconfigopts': "export ROCM_PATH=%(installdir)s && ",
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DCMAKE_CXX_FLAGS='-DNDEBUG' "),
         'prebuildopts': "export ROCM_PATH=%(installdir)s && ",
     }),
    ('rocminfo', version,
     {
         'source_urls': [GITHUB_SOURCE],
         'sources':     [{
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          '%(namelower)s-%(version)s.tar.gz',
         }],
         'patches': [],
         'checksums': [
             '79123b92992cce75ae679caf9a6bf57b16d24e96e54b36eb002511f3800e29c6',
         ],
         'srcdir':     '%(name)s-rocm-%(version)s',
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DROCRTST_BLD_TYPE=Release "
                        " -DCMAKE_INSTALL_LIBDIR=lib ")
     }),
    ('hipamd', version,
     {
         'sources': [{
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/HIP/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'hip-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/RadeonOpenCompute/ROCm-OpenCL-Runtime/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocm-opencl-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/ROCclr/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'rocclr-%(version)s.tar.gz',
         }, {
             'source_urls':       ['https://github.com/ROCm-Developer-Tools/hipamd/archive'],
             'download_filename': 'rocm-%(version)s.tar.gz',
             'filename':          'hipamd-%(version)s.tar.gz',
         }],
         'patches': [
             ('hipamd-5.4.0-unconst-then-reinterpret.patch',
              'hipamd-rocm-%(version)s'),
         ],
         'checksums': [
             'e290f835d69ef23e8b5833a7e616b0a989ff89ada4412d9742430819546efc6c',
             'a294639478e76c75dac0e094b418f9bd309309b07faf6af126cdfad9aab3c5c7',
             '46a1579310b3ab9dc8948d0fb5bed4c6b312f158ca76967af7ab69e328d43138',
             'c4b79738eb6e669160382b6c47d738ac59bd493fc681ca400ff012a2e8212955',

             '274869fef3bb9e0efdcc4383a77960405048f3f877a2b587d3db9d401de7e62a',
         ],
         'srcdir':                'hipamd-rocm-%(version)s/',
         'install_target_subdir': 'hip',
         'preconfigopts': "export ROCM_PATH=%(installdir)s && ",
         'configopts': (" -DCMAKE_PREFIX_PATH=\"%(installdir)s/llvm;%(installdir)s\" "
                        " -DHIP_COMMON_DIR=%(builddir)s/HIP-rocm-%(version)s/ "
                        " -DAMD_OPENCL_PATH=%(builddir)s/ROCm-OpenCL-Runtime-rocm-%(version)s/ "
                        " -DROCCLR_PATH=%(builddir)s/ROCclr-rocm-%(version)s/ "
                        " -DROCCLR_INCLUDE_PATH=%(builddir)s/ROCclr-rocm-%(version)s "
                        " -DHIP_PLATFORM=amd "
                        " -DCMAKE_C_COMPILER=%(installdir)s/llvm/bin/clang "
                        " -DCMAKE_CXX_COMPILER=%(installdir)s/llvm/bin/clang++ "
                        " -DCMAKE_SHARED_LINKER_FLAGS=\"$LDFLAGS -fuse-ld=lld\" "
                        " -DCMAKE_EXE_LINKER_FLAGS=\"$LDFLAGS -fuse-ld=lld\" "
                        " -DCMAKE_INSTALL_LIBDIR=lib "),
         'prebuildopts': "export ROCM_PATH=%(installdir)s && ",
         'installopts': "install && " + "\n".join([
             "sed -i '/__noinline__/d' %(installdir)s/hip/include/hip/amd_detail/host_defines.h",
             "install -d %(installdir)s/bin",
             "install -d %(installdir)s/include",
             "install -d %(installdir)s/lib/cmake",
             ("for binary in hipcc hipconfig hipcc.pl hipconfig.pl; "
              "  do ln -s %(installdir)s/hip/bin/$binary %(installdir)s/bin/$binary; "
              "done"),
             "ln -s %(installdir)s/hip/lib/libamdhip64.so %(installdir)s/lib/libamdhip64.so",
             "ln -s %(installdir)s/hip/include/hip %(installdir)s/include/hip",
             "ln -s %(installdir)s/hip/lib/cmake/hip %(installdir)s/lib/cmake/hip",
             "ln -s %(installdir)s/hip/lib/cmake/hip-lang %(installdir)s/lib/cmake/hip-lang",
         ]) + "\n echo "
     }),
]

modextrapaths = {
    'LD_LIBRARY_PATH': [
        'hsa/lib',
        'llvm/lib',
    ],
    'LIBRARY_PATH': [
        'hsa/lib',
        'llvm/lib',
    ],
}

moduleclass = 'devel'
