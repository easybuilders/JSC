# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
name = 'tbb'
version = '2019.8.281'

homepage = 'http://software.intel.com/en-us/articles/intel-tbb/'
description = """Intel Threading Building Blocks (Intel TBB) is a widely used, award-winning C++ template library for
creating reliable, portable, and scalable parallel applications.  Use Intel TBB for a simple and rapid way of developing
robust task-based parallel applications that scale to available processor cores, are compatible with multiple
environments, and are easier to maintain.  Intel TBB is the most proficient way to implement future-proof parallel
applications that tap into the power and performance of multicore and manycore hardware platforms.
"""


toolchain = {'name': 'dummy', 'version': 'dummy'}

year = version.split('.')[0]
update = version.split('.')[1]

sources = [
    'l_tbb_%(version)s.tgz',
]

# manually generated after a 1st installation without this files. The command is:
# cmake -DTBB_ROOT=$EBROOTTBB -DSAVE_TO=%(installdir)s/cmake -DTBB_OS=Linux -P ./tbb_config_generator.cmake
# tbb_config_generator.cmake comes from the OSS version of TBB
patches = [
    ('TBBConfig.cmake', '%(builddir)s'),
    ('TBBConfigVersion.cmake', '%(builddir)s')
]

requires_runtime_license = False

dontcreateinstalldir = True

postinstallcmds = [
    'mkdir %(installdir)s/cmake',
    'cp %(builddir)s/TBBConfig.cmake %(installdir)s/cmake/',
    'cp %(builddir)s/TBBConfigVersion.cmake %(installdir)s/cmake/',
]

modextrapaths = {
    'CMAKE_MODULE_PATH': 'cmake'
}

moduleclass = 'lib'
