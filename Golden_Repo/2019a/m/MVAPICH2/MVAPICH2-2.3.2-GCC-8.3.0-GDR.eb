# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Rpm'

name = 'MVAPICH2'
version = '2.3.2'
versionsuffix = '-GDR'

homepage = 'http://mvapich.cse.ohio-state.edu/overview/mvapich2/'
description = """This is an MPI 3.0 implementation. It is based on MPICH2 and MVICH.  This module loads the following
environment: MVAPICH2 %(version)s MPI tools and libraries for parallel computing. MVAPICH2 uses the launcher of
Parastation MPI. Compiled with threading support (--enable-threads=runtime).

To avoid conflicting thread/process pinning of the Parastation launcher and MVAPICH the affinity setting of MVAPICH2 has
been deactivated by setting MV2_ENABLE_AFFINITY=0 CUDA support has been enabled by setting MV2_USE_CUDA=1
"""


cudaversion = '10.1.105'
compilerversion = '8.3.0'
cuda_major_minor_ver = '.'.join(cudaversion.split('.')[:2])

toolchain = {'name': 'GCC', 'version': compilerversion}

sources = ['%s%s-mcast.cuda%s.mofed4.6.gcc%s-%s-1.el7.x86_64.rpm' % (name.lower(), versionsuffix.lower(), cuda_major_minor_ver, compilerversion, version)]

dependencies = [
    ('CUDA', cudaversion, '', True)
]

builddependencies = [
    ('rpmrebuild','2.14', '', True)
]

# SLURM exports env vars by default so this is sufficient on JURECA
modextravars = {
    'MV2_PATH':'%(installdir)s',
    'MV2_ENABLE_AFFINITY':'0',
    'MV2_USE_CUDA':'1',
    'MV2_USE_GPUDIRECT_GDRCOPY':'0',
}

# Ugly hack
installdir = '%(installdir)s'

path_to_fix = "/opt/mvapich2/gdr/%s/mcast/no-openacc/cuda%s/mofed4.6/mpirun/gcc%s" % (version, cuda_major_minor_ver, compilerversion)

postinstallcmds = [
    # Move to bin/ lib64/ include/ libexec/ and share/ to the correct directory
    "mv %s%s/* %s" % (installdir, path_to_fix, installdir),
    # Clean the unneded opt/
    "rm -Rf %s/opt " % installdir,
    # Fix paths inside the wrappers
    "sed -i s#%s#%s#g %s/bin/mpicc"   % (path_to_fix, installdir, installdir),
    "sed -i s#%s#%s#g %s/bin/mpicxx"  % (path_to_fix, installdir, installdir),
    "sed -i s#%s#%s#g %s/bin/mpic++"  % (path_to_fix, installdir, installdir),
    "sed -i s#%s#%s#g %s/bin/mpif77"  % (path_to_fix, installdir, installdir),
    "sed -i s#%s#%s#g %s/bin/mpif90"  % (path_to_fix, installdir, installdir),
    "sed -i s#%s#%s#g %s/bin/mpifort" % (path_to_fix, installdir, installdir),
    # Replace the stubs to make them point to the nvidia libraries provided by the module
    "sed -i s#/usr/local/cuda-%s/lib64/stubs#\$EBROOTNVIDIA/lib64#g %s/bin/mpicc"   % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s/lib64/stubs#\$EBROOTNVIDIA/lib64#g %s/bin/mpicxx"  % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s/lib64/stubs#\$EBROOTNVIDIA/lib64#g %s/bin/mpic++"  % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s/lib64/stubs#\$EBROOTNVIDIA/lib64#g %s/bin/mpif77"  % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s/lib64/stubs#\$EBROOTNVIDIA/lib64#g %s/bin/mpif90"  % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s/lib64/stubs#\$EBROOTNVIDIA/lib64#g %s/bin/mpifort" % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s#$EBROOTCUDA#g %s/bin/mpicc"   % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s#$EBROOTCUDA#g %s/bin/mpicxx"  % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s#$EBROOTCUDA#g %s/bin/mpic++"  % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s#$EBROOTCUDA#g %s/bin/mpif77"  % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s#$EBROOTCUDA#g %s/bin/mpif90"  % (cuda_major_minor_ver, installdir),
    "sed -i s#/usr/local/cuda-%s#$EBROOTCUDA#g %s/bin/mpifort" % (cuda_major_minor_ver, installdir),
    #"sed -i s#/opt/cuda/%s#$EBROOTCUDA#g %s/bin/mpicc"   % (cuda_major_minor_ver, installdir),
    #"sed -i s#/opt/cuda/%s#$EBROOTCUDA#g %s/bin/mpicxx"  % (cuda_major_minor_ver, installdir),
    #"sed -i s#/opt/cuda/%s#$EBROOTCUDA#g %s/bin/mpic++"  % (cuda_major_minor_ver, installdir),
    #"sed -i s#/opt/cuda/%s#$EBROOTCUDA#g %s/bin/mpif77"  % (cuda_major_minor_ver, installdir),
    #"sed -i s#/opt/cuda/%s#$EBROOTCUDA#g %s/bin/mpif90"  % (cuda_major_minor_ver, installdir),
    #"sed -i s#/opt/cuda/%s#$EBROOTCUDA#g %s/bin/mpifort" % (cuda_major_minor_ver, installdir),
    # Add -lnvidia-ml inside the wrappers to avoid undefined references in libmpi.so
    "sed -i s#'-lmpi '#'-lmpi -lnvidia-ml '#g %(installdir)s/bin/mpicc",
    "sed -i s#'-lmpi '#'-lmpi -lnvidia-ml '#g %(installdir)s/bin/mpicxx",
    "sed -i s#'-lmpi '#'-lmpi -lnvidia-ml '#g %(installdir)s/bin/mpic++",
    "sed -i s#'-lmpi '#'-lmpi -lnvidia-ml '#g %(installdir)s/bin/mpif77",
    "sed -i s#'-lmpi '#'-lmpi -lnvidia-ml '#g %(installdir)s/bin/mpif90",
    "sed -i s#'-lmpi '#'-lmpi -lnvidia-ml '#g %(installdir)s/bin/mpifort",
    # Add -lmpi before -lcuda. Otherwise the CUDA symbols that libmpi redefines are not picked up from the correct path
    # and GDR breaks
    "sed -i s#'final_ldflags=\" '#'final_ldflags=\" -lmpi '#g %(installdir)s/bin/mpicc",
    "sed -i s#'final_ldflags=\" '#'final_ldflags=\" -lmpi '#g %(installdir)s/bin/mpicxx",
    "sed -i s#'final_ldflags=\" '#'final_ldflags=\" -lmpi '#g %(installdir)s/bin/mpic++",
    "sed -i s#'final_ldflags=\" '#'final_ldflags=\" -lmpi '#g %(installdir)s/bin/mpif77",
    "sed -i s#'final_ldflags=\" '#'final_ldflags=\" -lmpi '#g %(installdir)s/bin/mpif90",
    "sed -i s#'final_ldflags=\" '#'final_ldflags=\" -lmpi '#g %(installdir)s/bin/mpifort",
    # Remove launchers
    "rm %(installdir)s/bin/mpiexec* %(installdir)s/bin/mpirun*",
]

# Add a family for our naming scheme
modluafooter = """
family("mpi")
add_property("arch","gpu")
"""

moduleclass = 'mpi'
