# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'Binary'

name = 'JupyterKernel-PyParaView'
version = '5.8.1'
local_paraviewver = '5.8.1'
local_jupyterver = '2020.2.5'
versionsuffix = '-' + local_jupyterver

local_pysuffix = '-Python-%(pyver)s'

homepage = 'https://www.paraview.org'
description = """
Special ParaView kernel for Jupyter.
Project Jupyter exists to develop open-source software, open-standards, and services
for interactive computing across dozens of programming languages.
"""

toolchain = {'name': 'gcccoremkl', 'version': '9.3.0-2020.2.254'}
toolchainopts = {'pic': True}

sources = [
    ('logo-128x128.png'),
    ('logo-32x32.png'),
    ('logo-64x64.png'),
]

builddependencies = [
    ('binutils', '2.34'),
    # ('ParaView', local_paraviewver, '-EGL' + local_pysuffix, ('gpsmkl', '2020')),  # ensure it is available
]

dependencies = [
    ('Python', '3.8.5'),
    ('Jupyter', local_jupyterver, local_pysuffix),
]

local_kernel_dir = 'pyparaview'
local_kernel_name = 'PyParaView-%s' % local_paraviewver

modextrapaths = {
    'JUPYTER_PATH': ['share/jupyter'],  # add search path for kernelspecs
}

# Ensure that the user-specific $HOME/.local/share/jupyter is first entry in JUPYTHER_PATH
modluafooter = """
prepend_path("JUPYTER_PATH", pathJoin(os.getenv("HOME"), ".local/share/jupyter"))
"""

postinstallcmds = [
    (
        '{ cat >> %%(builddir)s/env.sh; } << \'EOF\'\n'
        'export KERNEL_DIR=%s\n'
        'export KERNEL_NAME=%s\n'
        'EOF'
    ) % (local_kernel_dir, local_kernel_name),
    'source %%(builddir)s/env.sh && python -m ipykernel install --name=%s --prefix=%%(installdir)s' % local_kernel_dir,

    # write logo image
    (
        'source %%(builddir)s/env.sh && '
        '    cp %%(builddir)s/logo-32x32.png %%(installdir)s/share/jupyter/kernels/%s/logo-32x32.png'
    ) % (local_kernel_dir),
    (
        'source %%(builddir)s/env.sh && '
        '    cp %%(builddir)s/logo-64x64.png %%(installdir)s/share/jupyter/kernels/%s/logo-64x64.png'
    ) % (local_kernel_dir),
    (
        'source %%(builddir)s/env.sh && '
        '    cp %%(builddir)s/logo-128x128.png %%(installdir)s/share/jupyter/kernels/%s/logo-128x128.png'
    ) % (local_kernel_dir),

    # write kernel.sh
    (
        '{ source %%(builddir)s/env.sh && '
        '  cat > %%(installdir)s/share/jupyter/kernels/%s/kernel.sh; } << \'EOF\'\n'
        '#!/bin/bash \n'
        '\n'
        '# Load required modules \n'
        'module purge \n'
        'module use $OTHERSTAGES \n'
        'module load Stages/2020 \n'
        'module load GCC/9.3.0 \n'
        'module load ParaStationMPI \n'
        'module load Python/%%(pyver)s \n'
        'module load Jupyter/%s%s \n'
        '\n'
        'module load ParaView/%s-EGL%s \n'
        'module unload VTK \n'
        '\n'
        'exec python -m ipykernel $@\n'
        'EOF'
    ) % (local_kernel_dir,
         local_jupyterver, local_pysuffix,
         local_paraviewver, local_pysuffix),
    'source %(builddir)s/env.sh && chmod +x %(installdir)s/share/jupyter/kernels/${KERNEL_DIR}/kernel.sh',

    # write kernel.json
    (
        '{ source %%(builddir)s/env.sh && '
        '  cat > %%(installdir)s/share/jupyter/kernels/%s/kernel.json; } << \'EOF\'\n'
        '{ \n'
        '  "argv": [ \n'
        '    "%%(installdir)s/share/jupyter/kernels/%s/kernel.sh", \n'
        '    "-m", \n'
        '    "ipykernel_launcher", \n'
        '    "-f", \n'
        '    "{connection_file}" \n'
        '  ], \n'
        '  "display_name": "%s", \n'
        '  "language": "python", \n'
        '  "name": "%s" \n'
        '}\n'
        'EOF'
    ) % (local_kernel_dir, local_kernel_dir, local_kernel_name, local_kernel_name),
]

# specify that Bundle easyblock should run a full sanity check, rather than just trying to load the module
# full_sanity_check = True
sanity_check_paths = {
    'files': [
        'share/jupyter/kernels/%s/kernel.sh' % local_kernel_dir,
        'share/jupyter/kernels/%s/kernel.json' % local_kernel_dir,
    ],
    'dirs': [
        'share/jupyter/kernels/',
    ],
}

moduleclass = 'tools'
